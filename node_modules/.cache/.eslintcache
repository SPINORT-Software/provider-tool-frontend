[{"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/index.js":"1","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/App.js":"2","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/serviceWorker.js":"3","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/_mockApis/index.js":"4","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/index.js":"5","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducer.js":"6","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/_mockApis/account.js":"7","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/index.js":"8","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/contexts/FirebaseContext.js":"9","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/NavigationScroll.js":"10","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Locales.js":"11","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/contexts/JWTContext.js":"12","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Snackbar.js":"13","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/index.js":"14","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/index.js":"15","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/dashboardActions.js":"16","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/snackbarReducer.js":"17","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/cartReducer.js":"18","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/customizationReducer.js":"19","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/sectionFormReducer.js":"20","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/config.js":"21","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/shadows.js":"22","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/LoginRoutes.js":"23","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/reviewBoard/index.js":"24","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/mockAdapter.js":"25","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/role-based-routes/ReviewBoardRoutes.js":"26","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/role-based-routes/CaseManagerRoutes.js":"27","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/axios.js":"28","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Loader.js":"29","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-client.js":"30","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actionTypes.js":"31","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/accountReducer.js":"32","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/typography.js":"33","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/palette.js":"34","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/compStyleOverride.js":"35","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/reviewBoard/clientReferral.js":"36","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Loadable.js":"37","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/NavMotion.js":"38","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/authentication2/Login2.js":"39","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/route-guard/AuthGuard.js":"40","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/index.js":"41","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/index.js":"42","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/AuthWrapper2.js":"43","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/AuthCardWrapper.js":"44","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/login/FirebaseLogin.js":"45","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/login/JWTLogin.js":"46","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/index.js":"47","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/index.js":"48","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/index.js":"49","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Logo.js":"50","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/AuthSlider.js":"51","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/BackgroundPattern2.js":"52","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/AuthFooter.js":"53","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-forms.js":"54","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/client-detail.js":"55","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/case-presentation-form.js":"56","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/hooks/useAuth.js":"57","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/constant.js":"58","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/MainCard.js":"59","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/AnimateButton.js":"60","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/file-input.js":"61","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/SubCard.js":"62","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/reviewBoard/referralActions.js":"63","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/project-activities.js":"64","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/details.js":"65","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/project-clinical-activities.js":"66","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/client-caseload.js":"67","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/client.js":"68","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/client-reassessment.js":"69","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/existing-extra-mural.js":"70","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/new-extra-mural.js":"71","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/decision.js":"72","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-details.js":"73","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/type-clinical-interventions.js":"74","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/intervention-details.js":"75","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/client.js":"76","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Breadcrumbs.js":"77","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/index.js":"78","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/index.js":"79","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/hooks/useScriptRef.js":"80","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/provider-specific-forms.js":"81","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/assessment-forms.js":"82","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/organization-responsible.js":"83","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-source.js":"84","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/type-therapeutic-intervention.js":"85","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/NotificationSection/index.js":"86","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/ProfileSection/index.js":"87","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/MobileSection/index.js":"88","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/SearchSection/index.js":"89","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/LocalizationSection/index.js":"90","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/LogoSection/index.js":"91","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/index.js":"92","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/NotificationSection/NotificationList.js":"93","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/ProfileSection/UpgradePlanCard.js":"94","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/route-guard/GuestGuard.js":"95","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Transitions.js":"96","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavGroup/index.js":"97","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MinimalLayout/index.js":"98","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js":"99","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavItem/index.js":"100","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/case-manager/index.js":"101","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/case-manager/prepare-menu-items.js":"102","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/common/common-menu-items.js":"103","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/review-board/index.js":"104","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/review-board/prepare-menu-items.js":"105","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/review-board.js":"106","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/axios-client.js":"107","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/add-referral.js":"108","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/common.js":"109","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/index.js":"110","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/AvatarStatus.js":"111","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/ChartHistory.js":"112","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserDetails.js":"113","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/ChatDrawer.js":"114","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Avatar.js":"115","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserList.js":"116","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserAvatar.js":"117","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/common-routes/index.js":"118","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/common/utils.js":"119"},{"size":1075,"mtime":1636406728997,"results":"120","hashOfConfig":"121"},{"size":2113,"mtime":1636407119657,"results":"122","hashOfConfig":"121"},{"size":5911,"mtime":1636406728999,"results":"123","hashOfConfig":"121"},{"size":33,"mtime":1637375675096,"results":"124","hashOfConfig":"121"},{"size":496,"mtime":1636406728999,"results":"125","hashOfConfig":"121"},{"size":1014,"mtime":1636415220216,"results":"126","hashOfConfig":"121"},{"size":2495,"mtime":1637375672127,"results":"127","hashOfConfig":"121"},{"size":36,"mtime":1636406728999,"results":"128","hashOfConfig":"121"},{"size":3027,"mtime":1636406728997,"results":"129","hashOfConfig":"121"},{"size":671,"mtime":1636406728999,"results":"130","hashOfConfig":"121"},{"size":1342,"mtime":1636406729000,"results":"131","hashOfConfig":"121"},{"size":4044,"mtime":1637375650999,"results":"132","hashOfConfig":"121"},{"size":4464,"mtime":1636406729003,"results":"133","hashOfConfig":"121"},{"size":3875,"mtime":1636406729000,"results":"134","hashOfConfig":"121"},{"size":520,"mtime":1637785474427,"results":"135","hashOfConfig":"121"},{"size":1297,"mtime":1636408487038,"results":"136","hashOfConfig":"121"},{"size":1523,"mtime":1636406729000,"results":"137","hashOfConfig":"121"},{"size":7443,"mtime":1636406729000,"results":"138","hashOfConfig":"121"},{"size":2146,"mtime":1636406729000,"results":"139","hashOfConfig":"121"},{"size":1202,"mtime":1636407119659,"results":"140","hashOfConfig":"121"},{"size":1216,"mtime":1636682478779,"results":"141","hashOfConfig":"121"},{"size":1219,"mtime":1636406729000,"results":"142","hashOfConfig":"121"},{"size":844,"mtime":1636406728999,"results":"143","hashOfConfig":"121"},{"size":304,"mtime":1637624141990,"results":"144","hashOfConfig":"121"},{"size":246,"mtime":1637375589359,"results":"145","hashOfConfig":"121"},{"size":904,"mtime":1637627450390,"results":"146","hashOfConfig":"121"},{"size":1063,"mtime":1637785488417,"results":"147","hashOfConfig":"121"},{"size":407,"mtime":1637785140258,"results":"148","hashOfConfig":"121"},{"size":732,"mtime":1636406729000,"results":"149","hashOfConfig":"121"},{"size":715,"mtime":1637310549625,"results":"150","hashOfConfig":"121"},{"size":2858,"mtime":1637710015621,"results":"151","hashOfConfig":"121"},{"size":1030,"mtime":1636500813880,"results":"152","hashOfConfig":"121"},{"size":3577,"mtime":1636406729000,"results":"153","hashOfConfig":"121"},{"size":3087,"mtime":1636406729000,"results":"154","hashOfConfig":"121"},{"size":10816,"mtime":1636406729000,"results":"155","hashOfConfig":"121"},{"size":6504,"mtime":1637711741679,"results":"156","hashOfConfig":"121"},{"size":379,"mtime":1636406729000,"results":"157","hashOfConfig":"121"},{"size":930,"mtime":1636406728998,"results":"158","hashOfConfig":"121"},{"size":7122,"mtime":1636407119659,"results":"159","hashOfConfig":"121"},{"size":750,"mtime":1636406729004,"results":"160","hashOfConfig":"121"},{"size":8096,"mtime":1636407119661,"results":"161","hashOfConfig":"121"},{"size":19707,"mtime":1637718399328,"results":"162","hashOfConfig":"121"},{"size":549,"mtime":1636406729004,"results":"163","hashOfConfig":"121"},{"size":1218,"mtime":1636406729004,"results":"164","hashOfConfig":"121"},{"size":11689,"mtime":1636406729005,"results":"165","hashOfConfig":"121"},{"size":8590,"mtime":1637184410080,"results":"166","hashOfConfig":"121"},{"size":8535,"mtime":1636407119661,"results":"167","hashOfConfig":"121"},{"size":8497,"mtime":1636503297752,"results":"168","hashOfConfig":"121"},{"size":4243,"mtime":1636519049691,"results":"169","hashOfConfig":"121"},{"size":466,"mtime":1636406729000,"results":"170","hashOfConfig":"121"},{"size":1095,"mtime":1636406729000,"results":"171","hashOfConfig":"121"},{"size":2064,"mtime":1636406729001,"results":"172","hashOfConfig":"121"},{"size":690,"mtime":1636406729000,"results":"173","hashOfConfig":"121"},{"size":1785,"mtime":1637710087784,"results":"174","hashOfConfig":"121"},{"size":3576,"mtime":1637646526631,"results":"175","hashOfConfig":"121"},{"size":923,"mtime":1637711400628,"results":"176","hashOfConfig":"121"},{"size":371,"mtime":1636407119657,"results":"177","hashOfConfig":"121"},{"size":119,"mtime":1636406728999,"results":"178","hashOfConfig":"121"},{"size":2785,"mtime":1636406729001,"results":"179","hashOfConfig":"121"},{"size":2747,"mtime":1636406729003,"results":"180","hashOfConfig":"121"},{"size":1815,"mtime":1637710561598,"results":"181","hashOfConfig":"121"},{"size":2321,"mtime":1636406729002,"results":"182","hashOfConfig":"121"},{"size":1327,"mtime":1637716479582,"results":"183","hashOfConfig":"121"},{"size":1844,"mtime":1636407119662,"results":"184","hashOfConfig":"121"},{"size":2943,"mtime":1636407119662,"results":"185","hashOfConfig":"121"},{"size":2957,"mtime":1636407119662,"results":"186","hashOfConfig":"121"},{"size":3222,"mtime":1636407119662,"results":"187","hashOfConfig":"121"},{"size":3236,"mtime":1636407119660,"results":"188","hashOfConfig":"121"},{"size":3679,"mtime":1636407119660,"results":"189","hashOfConfig":"121"},{"size":3092,"mtime":1636407119661,"results":"190","hashOfConfig":"121"},{"size":3714,"mtime":1636407119661,"results":"191","hashOfConfig":"121"},{"size":5070,"mtime":1637717941705,"results":"192","hashOfConfig":"121"},{"size":16411,"mtime":1637717815626,"results":"193","hashOfConfig":"121"},{"size":1743,"mtime":1636407119661,"results":"194","hashOfConfig":"121"},{"size":4690,"mtime":1636407119661,"results":"195","hashOfConfig":"121"},{"size":688,"mtime":1636407119661,"results":"196","hashOfConfig":"121"},{"size":7449,"mtime":1636406729003,"results":"197","hashOfConfig":"121"},{"size":3061,"mtime":1636406728998,"results":"198","hashOfConfig":"121"},{"size":3059,"mtime":1636406728998,"results":"199","hashOfConfig":"121"},{"size":378,"mtime":1636406728997,"results":"200","hashOfConfig":"121"},{"size":936,"mtime":1636407119662,"results":"201","hashOfConfig":"121"},{"size":906,"mtime":1636407119662,"results":"202","hashOfConfig":"121"},{"size":2746,"mtime":1637641477165,"results":"203","hashOfConfig":"121"},{"size":3571,"mtime":1636407119663,"results":"204","hashOfConfig":"121"},{"size":2036,"mtime":1636407119661,"results":"205","hashOfConfig":"121"},{"size":10315,"mtime":1636406728998,"results":"206","hashOfConfig":"121"},{"size":13160,"mtime":1637215886091,"results":"207","hashOfConfig":"121"},{"size":4270,"mtime":1636406728997,"results":"208","hashOfConfig":"121"},{"size":10116,"mtime":1636406728998,"results":"209","hashOfConfig":"121"},{"size":8881,"mtime":1636406728997,"results":"210","hashOfConfig":"121"},{"size":483,"mtime":1636406728998,"results":"211","hashOfConfig":"121"},{"size":1591,"mtime":1637807339075,"results":"212","hashOfConfig":"121"},{"size":13172,"mtime":1636406728997,"results":"213","hashOfConfig":"121"},{"size":3253,"mtime":1636406728998,"results":"214","hashOfConfig":"121"},{"size":809,"mtime":1636406729004,"results":"215","hashOfConfig":"121"},{"size":3129,"mtime":1636406729003,"results":"216","hashOfConfig":"121"},{"size":2263,"mtime":1636406728998,"results":"217","hashOfConfig":"121"},{"size":232,"mtime":1636406728998,"results":"218","hashOfConfig":"121"},{"size":5421,"mtime":1636406728998,"results":"219","hashOfConfig":"121"},{"size":4912,"mtime":1636406728998,"results":"220","hashOfConfig":"121"},{"size":230,"mtime":1637874349345,"results":"221","hashOfConfig":"121"},{"size":899,"mtime":1636519016570,"results":"222","hashOfConfig":"121"},{"size":177,"mtime":1637806571754,"results":"223","hashOfConfig":"121"},{"size":226,"mtime":1637806588158,"results":"224","hashOfConfig":"121"},{"size":253,"mtime":1637805504195,"results":"225","hashOfConfig":"121"},{"size":3975,"mtime":1637718109437,"results":"226","hashOfConfig":"121"},{"size":536,"mtime":1637375937290,"results":"227","hashOfConfig":"121"},{"size":9251,"mtime":1637627005484,"results":"228","hashOfConfig":"121"},{"size":570,"mtime":1637708140697,"results":"229","hashOfConfig":"121"},{"size":16681,"mtime":1636406729006,"results":"230","hashOfConfig":"121"},{"size":1802,"mtime":1636406729005,"results":"231","hashOfConfig":"121"},{"size":5525,"mtime":1636406729005,"results":"232","hashOfConfig":"121"},{"size":10623,"mtime":1636406729006,"results":"233","hashOfConfig":"121"},{"size":6800,"mtime":1636406729005,"results":"234","hashOfConfig":"121"},{"size":4118,"mtime":1636406729003,"results":"235","hashOfConfig":"121"},{"size":4950,"mtime":1636406729006,"results":"236","hashOfConfig":"121"},{"size":807,"mtime":1636406729005,"results":"237","hashOfConfig":"121"},{"size":758,"mtime":1637785506026,"results":"238","hashOfConfig":"121"},{"size":703,"mtime":1637804607736,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"1meghoq",{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"242"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"242"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"242"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"242"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"242"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"242"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"242"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"242"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"242"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"242"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"242"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"242"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"242"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"242"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"242"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"242"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"242"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"242"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"242"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"242"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"242"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"242"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"242"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"242"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"242"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"242"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"242"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"242"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"242"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"242"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"242"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"242"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"242"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"242"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"242"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"242"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"242"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/index.js",[],["518","519","520","521","522","523"],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/App.js",["524","525","526","527","528"],"import React from 'react';\r\nimport {connect, useSelector} from 'react-redux';\r\n\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport {CssBaseline, StyledEngineProvider} from '@material-ui/core';\r\n\r\n// routing\r\nimport Routes from 'routes';\r\n\r\n// defaultTheme\r\nimport themes from 'themes';\r\n\r\n// project imports\r\nimport Locales from 'ui-component/Locales';\r\nimport NavigationScroll from 'layout/NavigationScroll';\r\n// import RTLLayout from 'ui-component/RTLLayout';\r\nimport Snackbar from 'ui-component/extended/Snackbar';\r\n\r\n// auth provider\r\nimport {FirebaseProvider} from 'contexts/FirebaseContext';\r\nimport {JWTProvider} from 'contexts/JWTContext';\r\n// import {Auth0Provider} from 'contexts/Auth0Context';\r\n\r\nimport * as actions from './store/actions';\r\nimport {fetchSectionAttributes, fetchSectionAttributesByRole} from \"store/actions\";\r\n\r\n\r\n// ===========================|| APP ||=========================== //\r\n\r\nconst App = ({fetchSectionAttributesByRole}) => {\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    // React.useEffect(() => {\r\n    //     fetchSectionAttributesByRole('43701c82-01c7-484e-9aaf-c90901542216')\r\n    // }, []);\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={themes(customization)}>\r\n                <CssBaseline/>\r\n                {/* RTL layout */}\r\n                {/* <RTLLayout> */}\r\n                <Locales>\r\n                    <NavigationScroll>\r\n                        <JWTProvider>\r\n                            <Routes/>\r\n                            <Snackbar/>\r\n                        </JWTProvider>\r\n                    </NavigationScroll>\r\n                </Locales>\r\n                {/* </RTLLayout> */}\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    sectionData: state.sectionForm\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchSectionAttributesByRole: (roleID) => dispatch(actions.fetchSectionAttributesByRole(roleID))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/serviceWorker.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/_mockApis/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/_mockApis/account.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/contexts/FirebaseContext.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/NavigationScroll.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Locales.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/contexts/JWTContext.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Snackbar.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/dashboardActions.js",["529","530"],"import * as actionTypes from '../actionTypes';\nimport apiClient from '../api-client';\n// import {REVIEW_BOARD_CLIENT_REFERRAL_SET_DECISION} from \"../actionTypes\";\n\nexport const fetchMenuItems = () => ({\n    type: actionTypes.ADD_PRODUCTS,\n    data: {\n        menu: 'Menu items'\n    }\n});\n\n\nexport const fetchSectionAttributes = (sectionUuid) => function (dispatch) {\n    apiClient.getAttributeGroupsDataBySection(sectionUuid).then(response => {\n        // eslint-disable-next-line camelcase\n        const {value: {attribute_groups, attribute_set}} = response.data\n\n        dispatch(\n            {\n                type: actionTypes.FETCH_SECTION_ATTRIBUTES,\n                data: {\n                    sectionUuid,\n                    attribute_groups,\n                    attribute_set\n                }\n            }\n        )\n    })\n}\n\nexport const fetchSectionAttributesByRole = (roleID) => function (dispatch) {\n    apiClient.getSectionsAndAttributeGroupsDataByRole(roleID).then(response => {\n        // eslint-disable-next-line camelcase\n        const {value} = response.data\n        dispatch(\n            {\n                type: actionTypes.FETCH_ROLE_SECTION_ATTRIBUTES,\n                data: {\n                    sections: value\n                }\n            }\n        )\n    })\n}\n\n\n\n\n\n\n\n\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/snackbarReducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/cartReducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/customizationReducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/sectionFormReducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/config.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/shadows.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/LoginRoutes.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/reviewBoard/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/mockAdapter.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/role-based-routes/ReviewBoardRoutes.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/role-based-routes/CaseManagerRoutes.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/axios.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Loader.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-client.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actionTypes.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/accountReducer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/typography.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/palette.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/themes/compStyleOverride.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/reducers/reviewBoard/clientReferral.js",["531","532","533"],"// action - state management\r\nimport * as actionTypes from 'store/actionTypes';\r\nimport {\r\n    REVIEW_BOARD_REFERRAL_SET_FORM_FILE_CASE_PRESENTATION,\r\n    REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_FACES_SDH,\r\n    REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_SNAT\r\n} from \"store/actionTypes\";\r\n\r\n// export const initialState = {\r\n//     clientDetail: {\r\n//         firstName: '',\r\n//         lastName: '',\r\n//         email: ''\r\n//     },\r\n//     referralDetail: {\r\n//         referralDate: '',\r\n//         discussionDate: '',\r\n//         referralSource: '',\r\n//         referralOrganizations: '',\r\n//         referralOrganizationsDetail: '',\r\n//         membersPresentCaseDiscussion: '',\r\n//         membersPresentCaseDiscussionDetail: '',\r\n//         caseManagementOrganization: '',\r\n//         caseManagementOrganizationDetail: '',\r\n//         decision: '',\r\n//         decisionReason: ''\r\n//     }\r\n// };\r\nexport const initialState = {\r\n    list: {},\r\n    add: {\r\n        referralData: {\r\n            client_first_name: '',\r\n            client_last_name: '',\r\n            client_email: '',\r\n\r\n            review_board_user: '',\r\n            referral_date: '',\r\n\r\n            referral_source: '',\r\n            referral_source_detail: '',\r\n\r\n            organizations_upon_referral: [],\r\n            organizations_upon_referral_detail: '',\r\n\r\n            date_of_case_discussion: '',\r\n\r\n            members_present_case_discussion: [],\r\n            members_present_case_discussion_detail: '',\r\n\r\n            case_management_organization_responsible: '',\r\n            case_management_organization_person_responsible: '',\r\n            decision: 'POTENTIAL_CLIENT',\r\n            decision_detail: '',\r\n        },\r\n        referralForms: {\r\n            emp_referral_request: [],\r\n            familiar_faces_snat: [],\r\n            familiar_faces_sdh: [],\r\n            case_presentation: []\r\n        }\r\n    },\r\n    update: {},\r\n    retrieve: {}\r\n}\r\n\r\n\r\nconst clientReferralReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_LIST_CLIENT_REFERRALS: {\r\n            const clientReferralsList = action.data\r\n            return {\r\n                ...state,\r\n                list: {\r\n                    ...clientReferralsList\r\n                }\r\n            };\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_CLIENT_DETAIL: {\r\n            const clientDetails = action.data\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralData: {\r\n                        ...clientDetails\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_REFERRAL_DETAIL: {\r\n            const referralDetails = action.data\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralData: {\r\n                        ...referralDetails\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_CLIENT_DECISION: {\r\n            const referralDetails = action.data\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralData: {\r\n                        ...referralDetails\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_EMP_REFERRAL_REQUEST: {\r\n            const documentUUID = action.data;\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralForms: {\r\n                        ...state.add.referralForms,\r\n                        emp_referral_request: [documentUUID]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_SNAT: {\r\n            const documentUUID = action.data;\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralForms: {\r\n                        ...state.add.referralForms,\r\n                        familiar_faces_snat: [documentUUID]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_FACES_SDH: {\r\n            const documentUUID = action.data;\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralForms: {\r\n                        ...state.add.referralForms,\r\n                        familiar_faces_sdh: [documentUUID]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_CASE_PRESENTATION: {\r\n            const documentUUID = action.data;\r\n            return {\r\n                ...state,\r\n                add: {\r\n                    ...state.add,\r\n                    referralForms: {\r\n                        ...state.add.referralForms,\r\n                        case_presentation: [documentUUID]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};\r\n\r\nexport default clientReferralReducer;\r\n\r\n\r\n// case actionTypes.REVIEW_BOARD_REFERRAL_SET_CLIENT_DETAIL: {\r\n//     // eslint-disable-next-line camelcase\r\n//     const {client_referral_first_name, client_referral_last_name, client_referral_email} = action.data\r\n//     return {\r\n//         ...state,\r\n//         clientDetail: {\r\n//             ...state.clientDetail,\r\n//             firstName: client_referral_first_name,\r\n//             lastName: client_referral_last_name,\r\n//             email: client_referral_email\r\n//         }\r\n//     };\r\n// }\r\n// case actionTypes.REVIEW_BOARD_REFERRAL_SET_REFERRAL_DETAIL: {\r\n//     return {\r\n//         ...state,\r\n//         referralDetail: {\r\n//             ...state.referralDetail,\r\n//             ...action.data\r\n//         }\r\n//     };\r\n// }\r\n// case actionTypes.REVIEW_BOARD_REFERRAL_SET_CLIENT_DECISION: {\r\n//     const {\r\n//         decision,\r\n//         decisionReason\r\n//     } = action.data;\r\n//     return {\r\n//         ...state,\r\n//         referralDetail: {\r\n//             ...state.referralDetail,\r\n//             ...action.data\r\n//         }\r\n//     };\r\n// }","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Loadable.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/NavMotion.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/authentication2/Login2.js",["534"],"import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Box, Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper2 from '../AuthWrapper2';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport FirebaseLogin from '../login/FirebaseLogin';\r\nimport JWTLogin from '../login/JWTLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport BackgroundPattern2 from 'ui-component/cards/BackgroundPattern2';\r\nimport AuthSlider from 'ui-component/cards/AuthSlider';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\nimport imgMain from 'assets/images/auth/img-a2-login.svg';\r\n\r\nconst useStyles = makeStyles({\r\n    authImage: {\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        display: 'block',\r\n        width: '300px',\r\n        position: 'relative',\r\n        zIndex: 5\r\n    }\r\n});\r\n\r\n// carousel items\r\nconst items = [\r\n    {\r\n        title: 'Powerful and easy to use case manager functions.',\r\n        description: 'Powerful and easy to use case manager functions.'\r\n    },\r\n    {\r\n        title: 'Powerful and easy to use case manager functions.',\r\n        description: 'Powerful and easy to use case manager functions.'\r\n    },\r\n    {\r\n        title: 'Powerful and easy to use case manager functions.',\r\n        description: 'Powerful and easy to use case manager functions.'\r\n    }\r\n];\r\n\r\n// ================================|| AUTH2 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const matchDownMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper2>\r\n            <Grid container justifyContent={matchDownSM ? 'center' : 'space-between'} alignItems=\"center\">\r\n                <Grid item md={6} lg={7} xs={12} sx={{ minHeight: '100vh' }}>\r\n                    <Grid\r\n                        sx={{ minHeight: '100vh' }}\r\n                        container\r\n                        alignItems={matchDownSM ? 'center' : 'flex-start'}\r\n                        justifyContent={matchDownSM ? 'center' : 'space-between'}\r\n                    >\r\n                        <Grid item sx={{ display: { xs: 'none', md: 'block' }, m: 3 }}>\r\n                            <RouterLink to=\"#\">\r\n                                <Logo />\r\n                            </RouterLink>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            sx={{ minHeight: { xs: 'calc(100vh - 68px)', md: 'calc(100vh - 152px)' } }}\r\n                        >\r\n                            <Stack justifyContent=\"center\" alignItems=\"center\" spacing={5} m={2}>\r\n                                <Box component={RouterLink} to=\"#\" sx={{ display: { xs: 'block', md: 'none' } }}>\r\n                                    <Logo />\r\n                                </Box>\r\n                                <AuthCardWrapper border={matchDownMD}>\r\n                                    <Grid container spacing={2} justifyContent=\"center\">\r\n                                        <Grid item>\r\n                                            <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                <Typography\r\n                                                    color={theme.palette.secondary.main}\r\n                                                    gutterBottom\r\n                                                    variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                >\r\n                                                    Hi, Welcome Back\r\n                                                </Typography>\r\n                                                <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                    Enter your credentials to continue\r\n                                                </Typography>\r\n                                            </Stack>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <JWTLogin loginIndex={2} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                                <Typography\r\n                                                    component={RouterLink}\r\n                                                    to=\"/pages/register/register2\"\r\n                                                    variant=\"subtitle1\"\r\n                                                    sx={{ textDecoration: 'none' }}\r\n                                                >\r\n                                                    Don&apos;t have an account?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </AuthCardWrapper>\r\n                            </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} sx={{ m: 3 }}>\r\n                            <AuthFooter />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern2>\r\n                        <Grid item container justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Grid item container justifyContent=\"center\" sx={{ pb: 8 }}>\r\n                                    <Grid item xs={10} lg={8} sx={{ '& .slick-list': { pb: 2 } }}>\r\n                                        <AuthSlider items={items} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ position: 'relative' }}>\r\n                                <img alt=\"Auth method\" src={imgMain} className={classes.authImage} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern2>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper2>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/route-guard/AuthGuard.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/index.js",["535","536","537"],"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core';\n\n// project imports\nimport ClientSelect from './forms/client';\nimport InterventionDetails from './forms/intervention-details';\nimport TypeOfClinicalInterventions from './forms/type-clinical-interventions';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    profileTab: {\n        '& .MuiTabs-flexContainer': {\n            borderBottom: 'none'\n        },\n        '& button': {\n            color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n            minHeight: 'auto',\n            minWidth: '100%',\n            padding: '12px 16px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            textAlign: 'left',\n            justifyContent: 'flex-start'\n        },\n        '& button.Mui-selected': {\n            color: theme.palette.primary.main,\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n        },\n        '& button > svg': {\n            marginBottom: '0px !important',\n            marginRight: '10px',\n            marginTop: '10px',\n            height: '20px',\n            width: '20px'\n        },\n        '& button > div > span': {\n            display: 'block'\n        },\n        '& > div > span': {\n            display: 'none'\n        }\n    },\n    cardPanels: {\n        borderLeft: '1px solid',\n        borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\n        height: '100%'\n    }\n}));\n\n// tabs\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`}\n             aria-labelledby={`simple-tab-${index}`} {...other}>\n            {value === index && <div>{children}</div>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`\n    };\n}\n\n// tabs option\nconst tabsOption = [\n    {\n        label: 'Client Select',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Caption here'\n    },\n    {\n        label: 'Intervention Details',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Fill in the intervention details'\n    },\n    {\n        label: 'Type of Clinical Intervention',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'List of clinial interventions'\n    }\n];\n\n\nconst ClientIntervention = () => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard title='Client Intervention' content={false}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} lg={4}>\n                            <CardContent>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    orientation='vertical'\n                                    className={classes.profileTab}\n                                    variant='scrollable'\n                                    sx={{\n                                        '& button': {\n                                            borderRadius: `${customization.borderRadius}px`\n                                        }\n                                    }}\n                                >\n                                    {tabsOption.map((tab, index) => (\n                                        <Tab\n                                            key={index}\n                                            icon={tab.icon}\n                                            label={\n                                                <Grid container direction='column'>\n                                                    <Typography sx={{ textTransform: 'capitalize' }} variant='subtitle1'\n                                                                color='inherit'>\n                                                        {tab.label}\n                                                    </Typography>\n                                                    <Typography component='div' variant='caption'\n                                                                sx={{ textTransform: 'capitalize' }}>\n                                                        {tab.caption}\n                                                    </Typography>\n                                                </Grid>\n                                            }\n                                            {...a11yProps(index)}\n                                        />\n                                    ))}\n                                </Tabs>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={12} lg={8}>\n                            <CardContent className={classes.cardPanels}>\n                                <TabPanel value={value} index={0}>\n                                    <ClientSelect />\n                                </TabPanel>\n                                <TabPanel value={value} index={1}>\n                                    <InterventionDetails />\n                                </TabPanel>\n                                <TabPanel value={value} index={2}>\n                                    <TypeOfClinicalInterventions />\n                                </TabPanel>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <CardActions>\n                        <Grid container justifyContent='space-between' spacing={0}>\n                            <Grid item>\n                                {value > 0 && (\n                                    <AnimateButton>\n                                        <Button variant='outlined' size='large'\n                                                onClick={(e) => handleChange(e, parseInt(value, 10) - 1)}>\n                                            Back\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {value < 2 && (\n                                    <AnimateButton>\n                                        <Button variant='contained' size='large'\n                                                onClick={(e) => handleChange(e, 1 + parseInt(value, 10))}>\n                                            Continue\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </CardActions>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientIntervention;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/index.js",["538","539","540","541","542"],"import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {listReferralsByReviewBoardID} from 'store/actions/reviewBoard/referralActions';\nimport { useNavigate } from 'react-router-dom';\n\n// material-ui\nimport {makeStyles, useTheme} from '@material-ui/styles';\nimport {\n    CardContent,\n    Checkbox,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow,\n    TableSortLabel,\n    TextField,\n    Toolbar,\n    Tooltip,\n    Typography\n} from '@material-ui/core';\nimport {visuallyHidden} from '@material-ui/utils';\n\n// third-party\nimport clsx from 'clsx';\n\n// project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterListTwoTone';\nimport PrintIcon from '@material-ui/icons/PrintTwoTone';\nimport FileCopyIcon from '@material-ui/icons/FileCopyTwoTone';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport {useContext, useEffect} from \"react\";\n\n// axios api\nimport reviewBoardApi from 'store/api-calls/review-board';\nimport JWTContext from \"contexts/JWTContext\";\n\n// table data\nfunction createData(id, name, category, price, date, qty) {\n    return {id, name, category, price, date, qty};\n}\n\nconst rowsInitial = [\n    createData('790841', 'Samsung TV 32” LED Retina', 'Television', 2500, '12.07.2018', 5),\n];\n\n// table sort\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n// table header options\nconst headCells = [\n    {\n        id: 'id',\n        numeric: true,\n        label: 'ID',\n        align: 'center'\n    },\n    {\n        id: 'name',\n        numeric: false,\n        label: 'First Name',\n        align: 'left'\n    },\n    {\n        id: 'name',\n        numeric: false,\n        label: 'Last Name',\n        align: 'left'\n    },\n    {\n        id: 'name',\n        numeric: false,\n        label: 'Referral Date',\n        align: 'left'\n    },\n];\n\n// style const\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2)\n    },\n    table: {\n        minWidth: 750\n    },\n    sortSpan: visuallyHidden\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        padding: 0,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1)\n    },\n    highlight: {\n        color: theme.palette.secondary.main\n    },\n    title: {\n        flex: '1 1 100%'\n    }\n}));\n\n// ===========================|| TABLE HEADER ||=========================== //\n\nfunction EnhancedTableHead({\n                               classes,\n                               onSelectAllClick,\n                               order,\n                               orderBy,\n                               numSelected,\n                               rowCount,\n                               onRequestSort,\n                               theme,\n                               selected\n                           }) {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\" sx={{pl: 3}}>\n                    <Checkbox\n                        color=\"primary\"\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{\n                            'aria-label': 'select all desserts'\n                        }}\n                    />\n                </TableCell>\n                {numSelected > 0 && (\n                    <TableCell padding=\"none\" colSpan={7}>\n                        <EnhancedTableToolbar numSelected={selected.length}/>\n                    </TableCell>\n                )}\n                {numSelected <= 0 &&\n                headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.align}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span\n                                    className={classes.sortSpan}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                {numSelected <= 0 && (\n                    <TableCell sortDirection={false} align=\"center\" sx={{pr: 3}}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            sx={{color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900'}}\n                        >\n                            Action\n                        </Typography>\n                    </TableCell>\n                )}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    theme: PropTypes.object,\n    selected: PropTypes.array,\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired\n};\n\n// ===========================|| TABLE HEADER TOOLBAR ||=========================== //\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {numSelected} = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"h4\" component=\"div\">\n                    {numSelected} Selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Nutrition\n                </Typography>\n            )}\n\n            {numSelected > 0 && (\n                <Tooltip title=\"Delete\">\n                    <IconButton>\n                        <DeleteIcon fontSize=\"small\"/>\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n};\n\n// ===========================|| PRODUCT LIST ||=========================== //\n\nconst ReviewBoardReferralList = () => {\n    const jwtContext = React.useContext(JWTContext);\n    const {user} = jwtContext;\n    const navigate = useNavigate();\n    const reviewBoardRedux = useSelector(state => state.reviewBoard)\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // show a right sidebar when clicked on new product\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpenDialog = () => {\n        navigate('add-referral');\n    };\n    const handleCloseDialog = () => {\n        setOpen(false);\n    };\n\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [search, setSearch] = React.useState('');\n    const [rows, setRows] = React.useState([]);\n\n    const handleSearch = (event) => {\n        const newString = event.target.value;\n        setSearch(newString);\n\n        if (newString) {\n            const newRows = rows.filter((row) => {\n                let matches = true;\n\n                const properties = ['name', 'category', 'price', 'qty', 'id'];\n                let containsQuery = false;\n\n                properties.forEach((property) => {\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\n                        containsQuery = true;\n                    }\n                });\n\n                if (!containsQuery) {\n                    matches = false;\n                }\n                return matches;\n            });\n            setRows(newRows);\n        } else {\n            setRows(rowsInitial);\n        }\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelectedId = rows.map((n) => n.name);\n            setSelected(newSelectedId);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const fetchListData = async (reviewBoardID) => {\n        const response = await reviewBoardApi.listReferralsByReviewBoardID(reviewBoardID);\n\n        setRows(response)\n\n        // Set this response to redux and display in table\n        dispatch(listReferralsByReviewBoardID(response))\n    }\n\n    useEffect(() => {\n        // eslint-disable-next-line camelcase\n        const {user_type_pk} = user;\n        fetchListData(user_type_pk)\n    }, [])\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <MainCard title=\"Client Referrals\" content={false}>\n            <CardContent>\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon fontSize=\"small\"/>\n                                    </InputAdornment>\n                                )\n                            }}\n                            onChange={handleSearch}\n                            placeholder=\"Search Referral\"\n                            value={search}\n                            size=\"small\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} sx={{textAlign: 'right'}}>\n                        <Tooltip title=\"Copy\">\n                            <IconButton>\n                                <FileCopyIcon/>\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Print\">\n                            <IconButton>\n                                <PrintIcon/>\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Filter\">\n                            <IconButton>\n                                <FilterListIcon/>\n                            </IconButton>\n                        </Tooltip>\n\n                        {/* product add & dialog */}\n                        <Tooltip title=\"Add Referral\">\n                            <Fab\n                                color=\"primary\"\n                                size=\"small\"\n                                onClick={handleClickOpenDialog}\n                                sx={{boxShadow: 'none', ml: 1, width: '32px', height: '32px', minHeight: '32px'}}\n                            >\n                                <AddIcon fontSize=\"small\"/>\n                            </Fab>\n                        </Tooltip>\n\n                    </Grid>\n                </Grid>\n            </CardContent>\n\n            {/* table */}\n            <TableContainer>\n                <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                        theme={theme}\n                        selected={selected}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.referral_id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={index}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\" sx={{pl: 3}}\n                                                   onClick={(event) => handleClick(event, row.referral_id)}>\n                                            <Checkbox\n                                                color=\"primary\"\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId\n                                                }}\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            onClick={(event) => handleClick(event, row.referral_id)}\n                                            sx={{cursor: 'pointer'}}\n                                        >\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900'}}\n                                            >\n                                                {' '}\n                                                {row.referral_id}{' '}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            onClick={(event) => handleClick(event, row.client_first_name)}\n                                            sx={{cursor: 'pointer'}}\n                                        >\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900'}}\n                                            >\n                                                {' '}\n                                                {row.client_first_name}{' '}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>{row.client_last_name}</TableCell>\n                                        <TableCell align=\"left\">{row.referral_date}</TableCell>\n                                        <TableCell align=\"center\" sx={{pr: 3}}>\n                                            <IconButton>\n                                                <MoreHorizOutlinedIcon sx={{fontSize: '1.3rem'}}/>\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows\n                                }}\n                            >\n                                <TableCell colSpan={6}/>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            {/* table pagination */}\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </MainCard>\n    );\n};\n\nexport default ReviewBoardReferralList;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/AuthWrapper2.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/AuthCardWrapper.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/login/FirebaseLogin.js",["543","544","545"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.dark.light + 20} !important` : `${theme.palette.grey[100]} !important`,\r\n        color: `${theme.palette.grey[900]} !important`,\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ loginIndex, ...others }) => {\r\n    const classes = useStyles();\r\n\r\n    const customization = useSelector((state) => state.customization);\r\n    const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginIndex ? `/pages/forgot-password/forgot-password${loginIndex}` : '#'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nFirebaseLogin.propTypes = {\r\n    loginIndex: PropTypes.number\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/authentication/login/JWTLogin.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/index.js",["546","547"],"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core';\n\n// project imports\nimport ClientSelect from './forms/client';\nimport ExistingExtraMural from './forms/conditional-display/existing-extra-mural';\nimport NewExtraMural from './forms/conditional-display/new-extra-mural';\nimport ClientReasessment from './forms/conditional-display/client-reassessment';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    profileTab: {\n        '& .MuiTabs-flexContainer': {\n            borderBottom: 'none'\n        },\n        '& button': {\n            color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n            minHeight: 'auto',\n            minWidth: '100%',\n            padding: '12px 16px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            textAlign: 'left',\n            justifyContent: 'flex-start'\n        },\n        '& button.Mui-selected': {\n            color: theme.palette.primary.main,\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n        },\n        '& button > svg': {\n            marginBottom: '0px !important',\n            marginRight: '10px',\n            marginTop: '10px',\n            height: '20px',\n            width: '20px'\n        },\n        '& button > div > span': {\n            display: 'block'\n        },\n        '& > div > span': {\n            display: 'none'\n        }\n    },\n    cardPanels: {\n        borderLeft: '1px solid',\n        borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\n        height: '100%'\n    }\n}));\n\n// tabs\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`}\n             aria-labelledby={`simple-tab-${index}`} {...other}>\n            {value === index && <div>{children}</div>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`\n    };\n}\n\n// tabs option\nconst tabsOption = [\n    {\n        label: 'Client',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Enter Client Details'\n    },\n    {\n        label: 'Existing Extra-Mural Client',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Existing Client Details'\n    },\n    {\n        label: 'New Extra-Mural Client',\n        icon: <CreditCardTwoToneIcon />,\n        caption: 'New Client Details'\n    },\n    {\n        label: 'Client Re-Assessment',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Client Reassessment Details'\n    }\n];\n\n// ===========================|| PROFILE 2 ||=========================== //\n\nconst ClientAssessment = () => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard title='Client Assessment' content={false}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} lg={4}>\n                            <CardContent>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    orientation='vertical'\n                                    className={classes.profileTab}\n                                    variant='scrollable'\n                                    sx={{\n                                        '& button': {\n                                            borderRadius: `${customization.borderRadius}px`\n                                        }\n                                    }}\n                                >\n                                    {tabsOption.map((tab, index) => (\n                                        <Tab\n                                            key={index}\n                                            icon={tab.icon}\n                                            label={\n                                                <Grid container direction='column'>\n                                                    <Typography sx={{ textTransform: 'capitalize' }} variant='subtitle1'\n                                                                color='inherit'>\n                                                        {tab.label}\n                                                    </Typography>\n                                                    <Typography component='div' variant='caption'\n                                                                sx={{ textTransform: 'capitalize' }}>\n                                                        {tab.caption}\n                                                    </Typography>\n                                                </Grid>\n                                            }\n                                            {...a11yProps(index)}\n                                        />\n                                    ))}\n                                </Tabs>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={12} lg={8}>\n                            <CardContent className={classes.cardPanels}>\n                                <TabPanel value={value} index={0}>\n                                    <ClientSelect />\n                                </TabPanel>\n                                <TabPanel value={value} index={1}>\n                                    <ExistingExtraMural />\n                                </TabPanel>\n                                <TabPanel value={value} index={2}>\n                                    <NewExtraMural />\n                                </TabPanel>\n                                <TabPanel value={value} index={3}>\n                                    <ClientReasessment />\n                                </TabPanel>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <CardActions>\n                        <Grid container justifyContent='space-between' spacing={0}>\n                            <Grid item>\n                                {value > 0 && (\n                                    <AnimateButton>\n                                        <Button variant='outlined' size='large'\n                                                onClick={(e) => handleChange(e, parseInt(value, 10) - 1)}>\n                                            Back\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {value < 3 && (\n                                    <AnimateButton>\n                                        <Button variant='contained' size='large'\n                                                onClick={(e) => handleChange(e, 1 + parseInt(value, 10))}>\n                                            Continue\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </CardActions>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientAssessment;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/index.js",["548","549"],"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport JWTContext from 'contexts/JWTContext';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core';\n\n// project imports\nimport ClientCaseLoad from './forms/client-caseload';\nimport ProjectClinicalActivities from './forms/project-clinical-activities';\nimport ProjectActivities from './forms/project-activities';\nimport Details from './forms/details';\n\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    profileTab: {\n        '& .MuiTabs-flexContainer': {\n            borderBottom: 'none'\n        },\n        '& button': {\n            color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n            minHeight: 'auto',\n            minWidth: '100%',\n            padding: '12px 16px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            textAlign: 'left',\n            justifyContent: 'flex-start'\n        },\n        '& button.Mui-selected': {\n            color: theme.palette.primary.main,\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n        },\n        '& button > svg': {\n            marginBottom: '0px !important',\n            marginRight: '10px',\n            marginTop: '10px',\n            height: '20px',\n            width: '20px'\n        },\n        '& button > div > span': {\n            display: 'block'\n        },\n        '& > div > span': {\n            display: 'none'\n        }\n    },\n    cardPanels: {\n        borderLeft: '1px solid',\n        borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\n        height: '100%'\n    }\n}));\n\n// tabs\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`}\n             aria-labelledby={`simple-tab-${index}`} {...other}>\n            {value === index && <div>{children}</div>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`\n    };\n}\n\n// tabs option\nconst tabsOption = [\n    {\n        label: 'Details',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Caption here'\n    },\n    {\n        label: 'Client Caseload',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Billing Information'\n    },\n    {\n        label: 'Project Related Clinical Activities',\n        icon: <CreditCardTwoToneIcon />,\n        caption: 'Add & Update Card'\n    },\n    {\n        label: 'Research Related Activities',\n        icon: <VpnKeyTwoToneIcon />,\n        caption: 'Update Profile Security'\n    }\n];\n\n// ===========================|| PROFILE 2 ||=========================== //\n\nconst Profile2 = () => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const userAuthContext = React.useContext(JWTContext)\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard title='Daily Workload' content={false}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} lg={4}>\n                            <CardContent>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    orientation='vertical'\n                                    className={classes.profileTab}\n                                    variant='scrollable'\n                                    sx={{\n                                        '& button': {\n                                            borderRadius: `${customization.borderRadius}px`\n                                        }\n                                    }}\n                                >\n                                    {tabsOption.map((tab, index) => (\n                                        <Tab\n                                            key={index}\n                                            icon={tab.icon}\n                                            label={\n                                                <Grid container direction='column'>\n                                                    <Typography sx={{ textTransform: 'capitalize' }} variant='subtitle1' color='inherit'>\n                                                        {tab.label}\n                                                    </Typography>\n                                                    <Typography component='div' variant='caption'\n                                                                sx={{ textTransform: 'capitalize' }}>\n                                                        {tab.caption}\n                                                    </Typography>\n                                                </Grid>\n                                            }\n                                            {...a11yProps(index)}\n                                        />\n                                    ))}\n                                </Tabs>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={12} lg={8}>\n                            <CardContent className={classes.cardPanels}>\n                                <TabPanel value={value} index={0}>\n                                    <Details />\n                                </TabPanel>\n                                <TabPanel value={value} index={1}>\n                                    <ClientCaseLoad />\n                                </TabPanel>\n                                <TabPanel value={value} index={2}>\n                                    <ProjectClinicalActivities />\n                                </TabPanel>\n                                <TabPanel value={value} index={3}>\n                                    <ProjectActivities />\n                                </TabPanel>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <CardActions>\n                        <Grid container justifyContent='space-between' spacing={0}>\n                            <Grid item>\n                                {value > 0 && (\n                                    <AnimateButton>\n                                        <Button variant='outlined' size='large'\n                                                onClick={(e) => handleChange(e, parseInt(value, 10) - 1)}>\n                                            Back\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {value < 3 && (\n                                    <AnimateButton>\n                                        <Button variant='contained' size='large'\n                                                onClick={(e) => handleChange(e, 1 + parseInt(value, 10))}>\n                                            Continue\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </CardActions>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Profile2;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/Logo.js",["550","551"],"import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\n/**\r\n * if you want to use image instead of <svg> uncomment following.\r\n *\r\n * import logoDark from 'assets/images/logo-dark.svg';\r\n * import logo from 'assets/images/logo.svg';\r\n *\r\n */\r\n\r\n// ===========================|| LOGO SVG ||=========================== //\r\n\r\nconst Logo = () => {\r\n    const theme = useTheme();\r\n\r\n    return true;\r\n};\r\n\r\nexport default Logo;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/AuthSlider.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/BackgroundPattern2.js",["552","553"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth/img-a2-grid.svg';\r\nimport AuthPatternDark from 'assets/images/auth/img-a2-grid-dark.svg';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 2 ||=========================== //\r\n\r\nconst BackgroundPattern2 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '100%',\r\n                height: '100vh',\r\n                bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : '#fff',\r\n                // backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n                position: 'absolute',\r\n                backgroundPosition: 'bottom left',\r\n                backgroundRepeat: 'no-repeat',\r\n                // backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n                m: '0 0 0 auto',\r\n                p: '100px 0',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                '& > *': {\r\n                    position: 'relative',\r\n                    zIndex: 5\r\n                },\r\n                '&:after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    zIndex: 1,\r\n                    bottom: 0,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.primary.light,\r\n                    opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern2.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern2;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/AuthFooter.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-forms.js",["554","555","556","557","558","559","560"],"import React from 'react';\n\n// material-ui\nimport {CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\nimport FileInput from '../../../common/file-input';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    setEmpReferralRequestForm,\n    setFamiliarFacesSnatForm,\n    setFamiliarFacesSdhForm,\n    setCasePresentationForm\n} from \"store/actions/reviewBoard/referralActions\";\n\nconst ReferralForms = () => {\n    const dispatch = useDispatch();\n    useSelector(state => state.reviewBoard.referrals.add.referralForms)\n\n    return (<SubCard title='Referral Forms'>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} sm={12} lg={12} md={12}>\n                    <Grid container spacing={gridSpacing}>\n                        <FileInput title='EMP Referral Request' setDocumentUUID={setEmpReferralRequestForm}\n                                   fileType='TYPE_REVIEW_BOARD_REFERRAL'/>\n\n                        <FileInput title='Familiar Faces - Social Needs Assessment Tool' setDocumentUUID={setFamiliarFacesSnatForm}\n                                   fileType='TYPE_REVIEW_BOARD_REFERRAL'/>\n\n                        <FileInput title='Familiar Faces - Screening Tool: Social Determinants of Health'\n                                   fileType='TYPE_REVIEW_BOARD_REFERRAL'\n                                   setDocumentUUID={setFamiliarFacesSdhForm}\n                        />\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </CardContent>\n    </SubCard>)\n};\n\nexport default ReferralForms;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/client-detail.js",["561","562","563","564","565","566","567"],"import React from 'react';\n\n\n// material-ui\nimport {Button, CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nimport {useFormik, withFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setReferralDetails} from 'store/actions/reviewBoard/referralActions';\n\n\nconst ClientDetail = () => {\n    const referralData = useSelector(state => state.reviewBoard.referrals.add.referralData)\n    const dispatch = useDispatch()\n\n    const formik = useFormik({\n        initialValues: {\n            client_first_name: referralData.client_first_name,\n            client_last_name: referralData.client_last_name,\n            client_email: referralData.client_email,\n        },\n        validate: values => {\n            const valuesData = {\n                ...referralData,\n                ...values\n            }\n            dispatch(setReferralDetails(valuesData));\n        }\n    });\n\n    return (<Grid container spacing={gridSpacing}>\n        <Grid item xs={12} sm={12} lg={12} md={12}>\n            <SubCard title='Client Details'>\n                <CardContent>\n                    <form onSubmit={formik.handleSubmit} noValidate>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={8} sm={10} lg={10} md={10}>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={6} sm={8} lg={6} md={8}>\n                                        <TextField name='client_first_name' id='client_first_name'\n                                                   fullWidth label='First Name'\n                                                   value={formik.values.client_first_name}\n                                                   onChange={formik.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6} sm={8} lg={6} md={8}>\n                                        <TextField name='client_last_name' id='client_last_name'\n                                                   fullWidth label='Last Name'\n                                                   value={formik.values.client_last_name}\n                                                   onChange={formik.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={8} sm={8} lg={8} md={8}>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12} sm={12} lg={8} md={8}>\n                                        <TextField name='client_email' id='client_email' fullWidth\n                                                   label='Email'\n                                                   value={formik.values.client_email}\n                                                   onChange={formik.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </form>\n                </CardContent>\n            </SubCard>\n        </Grid>\n    </Grid>);\n};\n\nexport default ClientDetail;\n\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/case-presentation-form.js",["568","569","570","571","572"],"import React from 'react';\n\n// material-ui\nimport {CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nimport {\n    setCasePresentationForm\n} from \"store/actions/reviewBoard/referralActions\";\n\nimport FileInput from '../../../common/file-input';\n\nconst CasePresentationForm = () => (\n    <SubCard title='Case Presentation Form'>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <FileInput title='Case Management Presentation Sheet'\n                           fileType='TYPE_REVIEW_BOARD_REFERRAL'\n                           setDocumentUUID={setCasePresentationForm}\n                />\n            </Grid>\n        </CardContent>\n    </SubCard>\n);\n\nexport default CasePresentationForm;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/hooks/useAuth.js",["573"],"import { useContext } from 'react';\r\n\r\n// auth provider\r\nimport FirebaseContext from 'contexts/FirebaseContext';\r\n// import Auth0Context from 'contexts/Auth0Context';\r\nimport JWTContext from 'contexts/JWTContext';\r\n\r\n// ===========================|| AUTH HOOKS ||=========================== //\r\n\r\nconst useAuth = () => useContext(JWTContext);\r\n\r\nexport default useAuth;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/constant.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/MainCard.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/AnimateButton.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/file-input.js",["574","575","576","577","578","579","580","581","582","583"],"import React from 'react';\n\n// material-ui\nimport {CardContent, Button, Checkbox, FormControlLabel, Grid, MenuItem, TextField} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\nimport LayersTwoToneIcon from '@material-ui/icons/LayersTwoTone';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport commonApi from \"store/api-calls/common\";\n\n// Upload Document using Document API and set the document UUID using dispatch\n\nconst FileInput = ({title, setDocumentUUID, fileType}) => {\n    /*\n    * setDocumentUUID is a generic function.\n    * It is passed as parameter by the parent component.\n    * */\n\n    const dispatch = useDispatch();\n\n    const uploadFile = async event => {\n        try {\n            const file = event.currentTarget.files[0];\n            const response = await commonApi.uploadDocument(file, fileType);\n\n            if (response.status === 200) {\n                const documentUUID = response.data.document_id\n                dispatch(setDocumentUUID(documentUUID))\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (<Grid item xs={12} sm={12} lg={6} md={8}>\n        <SubCard title={title}>\n            <CardContent>\n                <Button\n                    variant='contained'\n                    component='label'\n                    startIcon={<LayersTwoToneIcon/>}\n                >\n                    Upload File\n                    <input\n                        type='file'\n                        onChange={event => uploadFile(event)}\n                        hidden\n                    />\n                </Button>\n            </CardContent>\n        </SubCard>\n    </Grid>)\n};\n\nexport default FileInput;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/cards/SubCard.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/actions/reviewBoard/referralActions.js",["584"],"import * as actionTypes from 'store/actionTypes';\n\nexport const listReferralsByReviewBoardID = (responseData) => function (dispatch) {\n    dispatch(\n        {\n            type: actionTypes.REVIEW_BOARD_REFERRAL_LIST_CLIENT_REFERRALS,\n            data: {\n                ...responseData\n            }\n        }\n    )\n}\n\nexport const setReferralDetails = (values) => ({\n    type: actionTypes.REVIEW_BOARD_REFERRAL_SET_CLIENT_DETAIL,\n    data: {\n        ...values\n    }\n});\n\n\n/**\n * ===========================================\n * Referral Form upload actions\n * Currently consists of 4 types of forms.\n * ===========================================\n */\nexport const setEmpReferralRequestForm = (documentUUID) => ({\n    type: actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_EMP_REFERRAL_REQUEST,\n    data: documentUUID\n});\n\nexport const setFamiliarFacesSnatForm = (documentUUID) => ({\n    type: actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_SNAT,\n    data: documentUUID\n});\n\nexport const setFamiliarFacesSdhForm = (documentUUID) => ({\n    type: actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_FACES_SDH,\n    data: documentUUID\n});\n\nexport const setCasePresentationForm = (documentUUID) => ({\n    type: actionTypes.REVIEW_BOARD_REFERRAL_SET_FORM_FILE_CASE_PRESENTATION,\n    data: documentUUID\n});\n\n\n\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/project-activities.js",["585","586","587","588","589","590","591","592"],"import React from 'react';\n\n// material-ui\nimport { Checkbox, CardContent, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\n\n\nconst ProjectActivities = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    const [Country, setCountry] = React.useState('1');\n    const handleSelectChange1 = (event) => {\n        setCountry(event.target.value);\n    };\n\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    const handleChangeState1 = (event) => {\n        setState1({ ...state1, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={6}>\n\n                <SubCard title='Research Meetings'>\n                    <CardContent>\n                        <TextField fullWidth label='Total time spent' defaultValue='' />\n                    </CardContent>\n                </SubCard>\n\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n\n                <SubCard title='Administration (e.g., data gathering, sharing institutional documents, etc.)'>\n                    <CardContent>\n                        <TextField fullWidth label='Total time spent' defaultValue='' />\n                    </CardContent>\n                </SubCard>\n\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n\n                <SubCard title='Other'>\n                    <CardContent>\n                        <TextField fullWidth label='Other' defaultValue='' />\n                    </CardContent>\n                </SubCard>\n\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ProjectActivities;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/details.js",["593","594","595","596","597"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nconst Details = () => {\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={6} md={6}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Date\"\n                    guide={false}\n                    id=\"daily-workload-date\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n            </Grid>\n\n            <Grid item xs={8} sm={8} lg={8} md={8}>\n                <SubCard title='Time Spent'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={8} sm={8} lg={8} md={8}>\n                                <MaskedInput\n                                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                                    className=\"form-control\"\n                                    label=\"Service Recipient Travel\"\n                                    guide={false}\n                                    id=\"workload-service-recipient-travel-time-spent\"\n                                    onBlur={() => {}}\n                                    onChange={() => {}}\n                                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                                />\n\n                            </Grid>\n                            <Grid item xs={8} sm={8} lg={8} md={8}>\n                                <MaskedInput\n                                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                                    className=\"form-control\"\n                                    label=\"Functional Center\"\n                                    guide={false}\n                                    id=\"workload-functional-center-time-spent\"\n                                    onBlur={() => {}}\n                                    onChange={() => {}}\n                                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n\n        </Grid>\n    );\n};\n\nexport default Details;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/project-clinical-activities.js",["598","599","600","601","602"],"import React from 'react';\n\n// material-ui\nimport { Checkbox, CardContent, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nconst ProjectClinicalActivities = () => {\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={6} lg={6}>\n                <SubCard title='Case Management Review Board'>\n                    <CardContent>\n                        <MaskedInput\n                            mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                            className=\"form-control\"\n                            label=\"Total time spent\"\n                            guide={false}\n                            id=\"workload-case-management-review-time-spent\"\n                            onBlur={() => {}}\n                            onChange={() => {}}\n                            render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                        />\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} sm={6} lg={6}>\n                <SubCard title='Administration (e.g., protocol, process, meetings, etc.)'>\n                    <CardContent>\n                        <MaskedInput\n                            mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                            className=\"form-control\"\n                            label=\"Total time spent\"\n                            guide={false}\n                            id=\"workload-project-administration-time-spent\"\n                            onBlur={() => {}}\n                            onChange={() => {}}\n                            render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                        />\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} sm={6} lg={6}>\n                <SubCard title='Other'>\n                    <CardContent>\n                        <MaskedInput\n                            mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                            className=\"form-control\"\n                            label=\"Total time spent\"\n                            guide={false}\n                            id=\"workload-other-time-spent\"\n                            onBlur={() => {}}\n                            onChange={() => {}}\n                            render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                        />\n                    </CardContent>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ProjectClinicalActivities;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/daily-workload/forms/client-caseload.js",["603","604","605","606"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nconst ClientCaseload = () => {\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    const handleChangeState1 = (event) => {\n        setState1({ ...state1, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Grid container spacing={gridSpacing}>\n\n            <Grid item xs={12} sm={8}>\n                <SubCard title='Case Management Clients'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={8}>\n                                <TextField type='number' fullWidth label='Number of Case Management Clients'\n                                           defaultValue='' />\n                            </Grid>\n\n                            <Grid item xs={12} sm={8}>\n                                <MaskedInput\n                                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                                    className=\"form-control\"\n                                    label=\"Total time spent\"\n                                    guide={false}\n                                    id=\"case-management-clients-time-spent\"\n                                    onBlur={() => {}}\n                                    onChange={() => {}}\n                                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <SubCard title='Regular Clients'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={8}>\n                                <TextField type='number' fullWidth label='Number of Regular Clients' defaultValue='' />\n                            </Grid>\n                            <Grid item xs={12} sm={8}>\n                                <MaskedInput\n                                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                                    className=\"form-control\"\n                                    label=\"Total time spent\"\n                                    guide={false}\n                                    id=\"regular-clients-time-spent\"\n                                    onBlur={() => {}}\n                                    onChange={() => {}}\n                                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientCaseload;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/client.js",["607","608"],"import React from 'react';\n\n// material-ui\nimport {\n    CardContent,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    MenuItem,\n    TextField,\n    Radio,\n    RadioGroup\n} from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst ClientSelect = () => {\n    const [valueLabel, setValueLabel] = React.useState('checked');\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <TextField type='text' fullWidth label='Client' defaultValue='' />\n            </Grid>\n\n            <Grid item xs={12} md={8}>\n                <SubCard title='New Case Management Client (Active)'>\n                    <Grid container spacing={12}>\n                        <Grid item xs={12} sm={12} lg={8} md={8}>\n                            <FormControl>\n                                <RadioGroup\n                                    row\n                                    aria-label='client-status'\n                                    value={valueLabel}\n                                    onChange={(e) => setValueLabel(e.target.value)}\n                                    name='row-radio-buttons-group'\n                                >\n                                    <FormControlLabel value='existing-extra-mural-no-reassess' control={<Radio />}\n                                                      label='Existing Extra-Mural Client – No need to re-assess ' />\n                                    <FormControlLabel value='existing-extra-mural-reassess' control={<Radio />}\n                                                      label='Existing Extra-Mural Client - Need to re-assess' />\n                                    <FormControlLabel value='new-extra-mural' control={<Radio />}\n                                                      label='New Extra-Mural Client' />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} md={8}>\n                <SubCard title='Existing Case Management Client'>\n                    <Grid container spacing={12}>\n                        <Grid item xs={12} sm={12} lg={8} md={8}>\n                            <FormControl>\n                                <RadioGroup\n                                    row\n                                    aria-label='client-status'\n                                    value={valueLabel}\n                                    onChange={(e) => setValueLabel(e.target.value)}\n                                    name='row-radio-buttons-group'\n                                >\n                                    <FormControlLabel value='existing-casemanagement-client-reassess' control={<Radio />}\n                                                      label='Need to re-assess' />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientSelect;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/client-reassessment.js",["609","610","611","612"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport ProviderSpecificForms from '../../../../common/provider-specific-forms';\nimport AssessmentForms from '../../../../common/assessment-forms';\nimport MaskedInput from 'react-text-mask';\n\nconst modeOfAssessmentSelectList = [\n    {\n        value: 'in-person-home',\n        label: 'In-Person Visit - Home'\n    },\n    {\n        value: 'in-person-nursing-home',\n        label: 'In-Person Visit - Nursing Home '\n    },\n    {\n        value: 'in-person-residential-facility',\n        label: 'In-Person Visit - Residential Facility '\n    },\n    {\n        value: 'in-person-work',\n        label: 'In-Person Visit - Work'\n    },\n    {\n        value: 'in-person-other',\n        label: 'In-Person Visit - Other'\n    },\n    {\n        value: 'telephone',\n        label: 'Telephone'\n    },\n    {\n        value: 'videoconferencing',\n        label: 'Videoconferencing'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\nconst ClientReasessment = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Date\"\n                    guide={false}\n                    id=\"client-reassessment-date\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Total time spent\"\n                    guide={false}\n                    id=\"client-reassessment-time-spent\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <TextField type='text' fullWidth label='Reason' defaultValue='' />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <TextField id=\"client-reassessment-mode-of-assessment\" select label=\"Mode of Assessment\" value={city} fullWidth onChange={handleChangeCity}>\n                    {modeOfAssessmentSelectList.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <TextField id='client-reassessment-mode-of-assessment-other' type='text' fullWidth label='Other' defaultValue='' />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <ProviderSpecificForms />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <AssessmentForms />\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default ClientReasessment;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/existing-extra-mural.js",["613","614","615","616","617","618","619","620"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\nimport FileInput from '../../../../common/file-input';\n\nconst ExistingExtraMural = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    const [Country, setCountry] = React.useState('1');\n    const handleSelectChange1 = (event) => {\n        setCountry(event.target.value);\n    };\n\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    const handleChangeState1 = (event) => {\n        setState1({ ...state1, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Grid container spacing={gridSpacing}>\n\n            <Grid item xs={12} sm={12} lg={6} md={6}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Date\"\n                    guide={false}\n                    id=\"existing-extra-mural-assessment-date\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <SubCard title='Provider Specific Assessment Forms'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n\n                            <Grid item xs={12} sm={8}>\n                                <TextField fullWidth label='Total time spent' defaultValue='' />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} sm={10} md={10} lg={10}>\n                <SubCard title='Assessment Forms'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <FileInput title='EMP Progress Notes' />\n                            <FileInput title='EMP Intake' />\n                            <FileInput title='Safe Workplace Agreement' />\n                            <FileInput title='Braden Scale' />\n                            <FileInput title='Risk of Falls Assessment' />\n                            <FileInput title='EMP Medication Profile' />\n                            <FileInput title='Safe Use of Home Oxygen Patient Agreement' />\n                            <FileInput title='Smoking Cessation Assessment' />\n                            <FileInput title='Team Communication' />\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default ExistingExtraMural;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-assessment/forms/conditional-display/new-extra-mural.js",["621","622","623","624","625"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport ProviderSpecificForms from '../../../../common/provider-specific-forms';\nimport AssessmentForms from '../../../../common/assessment-forms';\nimport MaskedInput from 'react-text-mask';\n\nconst modeOfAssessmentSelectList = [\n    {\n        value: 'in-person-home',\n        label: 'In-Person Visit - Home'\n    },\n    {\n        value: 'in-person-nursing-home',\n        label: 'In-Person Visit - Nursing Home '\n    },\n    {\n        value: 'in-person-residential-facility',\n        label: 'In-Person Visit - Residential Facility '\n    },\n    {\n        value: 'in-person-work',\n        label: 'In-Person Visit - Work'\n    },\n    {\n        value: 'in-person-other',\n        label: 'In-Person Visit - Other'\n    },\n    {\n        value: 'telephone',\n        label: 'Telephone'\n    },\n    {\n        value: 'videoconferencing',\n        label: 'Videoconferencing'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\nconst NewExtraMural = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    const handleChangeState1 = (event) => {\n        setState1({ ...state1, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={6} md={6}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Date\"\n                    guide={false}\n                    id=\"new-extra-mural-assessment-date\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                    className=\"form-control\"\n                    label=\"Total time spent\"\n                    guide={false}\n                    id=\"new-extra-mural-time-spent\"\n                    onBlur={() => {}}\n                    onChange={() => {}}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <TextField id=\"new-extra-mural-mode-of-assessment\" select label=\"Mode of Assessment\" value={city} fullWidth onChange={handleChangeCity}>\n                    {modeOfAssessmentSelectList.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <TextField id='new-extra-mural-mode-of-assessment-other' type='text' fullWidth label='Other' defaultValue='' />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <ProviderSpecificForms />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <AssessmentForms />\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default NewExtraMural;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/decision.js",["626","627","628","629","630","631"],"import React from 'react';\n\n// material-ui\nimport {\n    CardContent,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    Card,\n    Radio,\n    RadioGroup,\n    TextField,\n    Button\n} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\nimport {useFormik, withFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {makeStyles} from '@material-ui/styles';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setReferralDetails} from \"store/actions/reviewBoard/referralActions\";\nimport reviewBoardApi from 'store/api-calls/review-board';\nimport JWTContext from \"contexts/JWTContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light,\n        marginBottom: '16px',\n        marginTop: '16px'\n    }\n}));\n\nconst CaseManagementDecision = () => {\n    const classes = useStyles();\n    const referralData = useSelector(state => state.reviewBoard.referrals.add.referralData)\n    const referralForms = useSelector(state => state.reviewBoard.referrals.add.referralForms)\n    const dispatch = useDispatch()\n    const jwtContext = React.useContext(JWTContext);\n    const {user} = jwtContext;\n\n    const formik = useFormik({\n        initialValues: {\n            decision: referralData.decision,\n            decision_detail: referralData.decision_detail\n        },\n        validate: (values) => {\n            const valuesData = {\n                ...referralData,\n                ...values\n            }\n            dispatch(setReferralDetails(valuesData))\n        },\n\n    });\n\n    const submitReferral = async event => {\n        // eslint-disable-next-line camelcase\n        const {user_type_pk} = user;\n        const response = await reviewBoardApi.createReferral(referralData, referralForms, user_type_pk)\n        console.log(response)\n    }\n\n    const saveAndContinueReferral = event => {\n        console.log(event)\n    }\n\n    return (\n        <Card className={classes.card} title='Client Case Management Decision'>\n            <CardContent>\n                <form noValidate>\n                    <Grid container spacing={3} direction='column'>\n                        <Grid item>\n                            <FormControl>\n                                <RadioGroup\n                                    row\n                                    aria-label='case-management-decision-radio'\n                                    value={formik.values.decision}\n                                    name='decision'\n                                    id='decision'\n                                    onChange={(event) => {\n                                        formik.setFieldValue('decision', event.currentTarget.value)\n                                    }}\n                                >\n                                    <FormControlLabel value='ACTIVE_CLIENT' control={<Radio/>}\n                                                      label='Client is accepted in the Case Management Program'/>\n                                    <FormControlLabel value='DISCHARGED_CLIENT' control={<Radio/>}\n                                                      label='Client is refused for the Case Management Program'/>\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextField\n                                fullWidth\n                                id='decision_detail'\n                                name='decision_detail'\n                                label='Reason for Client Refusal'\n                                placeholder='Enter reason here'\n                                multiline\n                                value={formik.values.decision_detail}\n                                onChange={formik.handleChange}\n                            />\n                        </Grid>\n\n                        <Grid item>\n                            <Grid container spacing={12}>\n                                <Grid item>\n                                    <Button color='primary' variant='contained' type='button' onClick={submitReferral}>\n                                        Submit\n                                    </Button>\n                                </Grid>\n\n                                <Grid item justifyContent='end'>\n                                    <Button color='primary' variant='contained' type='button'\n                                            onClick={saveAndContinueReferral}>\n                                        Save & Continue Later\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default CaseManagementDecision;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-details.js",["632","633","634","635","636","637","638","639","640","641","642"],"import React from 'react';\n\n// material-ui\nimport {\n    Autocomplete,\n    Button,\n    CardContent,\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nimport CasePresentationForm from './case-presentation-form';\nimport OrganizationResponsible from './organization-responsible';\nimport {setReferralDetails} from \"store/actions/reviewBoard/referralActions\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\nimport {useFormik} from \"formik\";\n\n\nconst organizationResponsible = [\n    {label: 'Ability NB', id: 1},\n    {label: 'Addic', id: 2},\n    {label: 'Ambulance New Brunswick (ANB)', id: 3},\n    {label: 'Community Health Centers', id: 4},\n    {label: 'Specify: Nurse Practitioner or Family Physician', id: 5},\n    {label: 'Department of Veteran Affairs', id: 6},\n    {label: 'Emergency Department', id: 7},\n    {label: 'Extra-Mural Program', id: 8},\n    {label: 'Family Physician (Outside Community Health Centers)', id: 9},\n    {label: 'First Nations', id: 10},\n    {label: 'Homecare Agency', id: 11},\n    {label: 'Hospital (Inpatient)', id: 12},\n    {label: 'Nursing Home', id: 13},\n    {label: 'Public Health Services', id: 14},\n    {label: 'Residential Facility', id: 15},\n    {label: 'Self-referral or Referral by Family Member', id: 16},\n    {label: 'Social Development - Home Adaptations for Seniors Independence Program', id: 17},\n    {label: 'Social Development - Homeowner Repair Program', id: 18},\n    {label: 'Social Development - Housing Program', id: 19},\n    {label: 'Social Development - Long-Term Care Program', id: 20},\n    {label: 'Social Development - Mobility and Adaptive Equipment Loan Program', id: 21},\n    {label: 'Social Development - Social Assistance Program', id: 21},\n    {label: 'Volunteer Organizations', id: 22},\n    {label: 'Other', id: 23}\n];\n\nconst referralSourcesList = [\n    {label: 'Ability NB', id: 'referral_source_ability_nb'},\n    {label: 'Ambulatory Clinic (Outpatient)', id: 'referral_source_ambulatory_clinic_outpatient'},\n    {label: 'Ambulance New Brunswick (ANB)', id: 'referral_source_anb'},\n    {label: 'Community Health Centers', id: 'referral_source_community_health_centers'},\n    {\n        label: 'Specify: Nurse Practitioner or Family Physician',\n        id: 'referral_source_nurse_practitioner_family_physician'\n    },\n    {label: 'Department of Veteran Affairs', id: 'referral_source_department_of_veteran_affairs'},\n    {label: 'Emergency Department', id: 'referral_source_emergency_department'},\n    {label: 'Extra-Mural Program', id: 'referral_source_extra_mural_program'},\n    {label: 'Family Physician (Outside Community Health Centers)', id: 'referral_source_family_physician_outside'},\n    {label: 'First Nations', id: 'referral_source_first_nations'},\n    {label: 'Homecare Agency', id: 'referral_source_homecare_agency'},\n    {label: 'Hospital (Inpatient)', id: 'referral_source_hospital_inpatient'},\n    {label: 'Nursing Home', id: 'referral_source_nursing_home'},\n    {label: 'Public Health Services', id: 'referral_source_public_health_services'},\n    {label: 'Residential Facility', id: 'referral_source_residential_facility'},\n    {label: 'Self-referral or Referral by Family Member', id: 'referral_source_self_referral'},\n    {\n        label: 'Social Development - Home Adaptations for Seniors Independence Program',\n        id: 'referral_source_social_home_adaptations'\n    },\n    {label: 'Social Development - Homeowner Repair Program', id: 'referral_source_social_homeowner_repair'},\n    {label: 'Social Development - Housing Program', id: 'referral_source_social_housing_program'},\n    {label: 'Social Development - Long-Term Care Program', id: 'referral_source_social_long_term_care'},\n    {\n        label: 'Social Development - Mobility and Adaptive Equipment Loan Program',\n        id: 'referral_source_social_mobility_loan'\n    },\n    {label: 'Social Development - Social Assistance Program', id: 'referral_source_social_assistance'},\n    {label: 'Volunteer Organizations', id: 'referral_source_volunter_organizations'},\n    {label: 'Other', id: 'referral_source_other'}\n];\n\nconst referralOrganizationsList = [\n    {label: 'Ability NB', id: 1},\n    {label: 'Ambulatory Clinic (Outpatient)', id: 2},\n    {label: 'Ambulance New Brunswick (ANB)', id: 3},\n    {label: 'Community Health Centers', id: 4},\n    {label: 'Specify: Nurse Practitioner or Family Physician', id: 5},\n    {label: 'Department of Veteran Affairs', id: 6},\n    {label: 'Emergency Department', id: 7},\n    {label: 'Extra-Mural Program', id: 8},\n    {label: 'Family Physician (Outside Community Health Centers)', id: 9},\n    {label: 'First Nations', id: 10},\n    {label: 'Homecare Agency', id: 11},\n    {label: 'Hospital (Inpatient)', id: 12},\n    {label: 'Nursing Home', id: 13},\n    {label: 'Public Health Services', id: 14},\n    {label: 'Residential Facility', id: 15},\n    {label: 'Self-referral or Referral by Family Member', id: 16},\n    {label: 'Social Development - Home Adaptations for Seniors Independence Program', id: 17},\n    {label: 'Social Development - Homeowner Repair Program', id: 18},\n    {label: 'Social Development - Housing Program', id: 19},\n    {label: 'Social Development - Long-Term Care Program', id: 20},\n    {label: 'Social Development - Mobility and Adaptive Equipment Loan Program', id: 21},\n    {label: 'Social Development - Social Assistance Program', id: 21},\n    {label: 'Volunteer Organizations', id: 22},\n    {label: 'Other', id: 23}\n];\n\nconst caseDiscussionMembersPresentList = [\n    {label: 'Ability NB', id: 'case_discussion_ability_nb'},\n    {label: 'Addiction and Mental Health', id: 'case_discussion_addiction_mental_health'},\n    {label: 'Ambulance NB', id: 'case_discussion_ambulance_nb'},\n    {label: 'CCC Liaison Nurse', id: 'case_discussion_ccc_liaison_nurse'},\n    {label: 'Community Pharmacist', id: 'case_discussion_community_pharmacist'},\n    {label: 'Extra-Mural Program - Lead Nurse Case Manager', id: 'case_discussion_emp_lead_nurse_case_manager'},\n    {label: 'Extra-Mural Program - Nutritionist', id: 'case_discussion_emp_nutritionist'},\n    {label: 'Extra-Mural Program - Occupational Therapist', id: 'case_discussion_emp_occupational_therapist'},\n    {label: 'Extra-Mural Program - Physical Therapist', id: 'case_discussion_emp_physical_therapist'},\n    {label: 'Extra-Mural Program - Registered Nurse', id: 'case_discussion_emp_registered_nurse'},\n    {label: 'Extra-Mural Program - Respiratory Therapist', id: 'case_discussion_emp_respiratory_therapist'},\n    {label: 'Extra-Mural Program - Social Worker', id: 'case_discussion_emp_social_worker'},\n    {label: 'Extra-Mural Program - Speech & Language Therapist', id: 'case_discussion_emp_speech_language_therapist'},\n    {label: 'Extra-Mural Program - Other', id: 'case_discussion_emp_other'},\n    {label: 'Family physician', id: 'case_discussion_family_physician'},\n    {label: 'First Nations - First Nations Case Manager', id: 'case'},\n    {label: 'Horizon Health Network', id: 17},\n    {label: 'Nurse Practitioner', id: 18},\n    {label: 'Social Development - Home Adaptations for Seniors Independence Program', id: 19},\n    {label: 'Social Development - Homeowner Repair Program', id: 20},\n    {label: 'Social Development - Housing Program', id: 21},\n    {label: 'Social Development - Long-Term Care Program', id: 22},\n    {label: 'Social Development - Mobility and Adaptive Equipment Loan Program', id: 23},\n    {label: 'Social Development - Social Assistance Program', id: 24},\n    {label: 'Social Development - Other', id: 25},\n    {label: 'Others', id: 26}\n];\n\nconst ReviewReferralDetails = ({referralDetails, setReferralDetail}) => {\n    const referralData = useSelector(state => state.reviewBoard.referrals.add.referralData)\n    const dispatch = useDispatch()\n\n    const formik = useFormik({\n        initialValues: {\n            referral_date: referralData.referral_date,\n            date_of_case_discussion: referralData.date_of_case_discussion,\n\n            referral_source: referralData.referral_source,\n            referral_source_detail: referralData.referral_source_detail,\n\n            organizations_upon_referral: referralData.organizations_upon_referral,\n            organizations_upon_referral_detail: referralData.organizations_upon_referral_detail,\n\n            members_present_case_discussion: referralData.members_present_case_discussion,\n            members_present_case_discussion_detail: referralData.members_present_case_discussion_detail,\n\n            case_management_organization_responsible: referralData.case_management_organization_responsible,\n            case_management_organization_person_responsible: referralData.case_management_organization_person_responsible,\n        },\n        validate: values => {\n            const valuesData = {\n                ...referralData,\n                ...values\n            }\n            dispatch(setReferralDetails(valuesData));\n        }\n    });\n\n    return (\n        <form onSubmit={formik.handleSubmit} noValidate>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} md={8} lg={4}>\n                    <MaskedInput\n                        mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n                        className='form-control'\n                        label='Date of Referral'\n                        guide={false}\n                        value={formik.values.referral_date}\n                        id='referral_date'\n                        name='referral_date'\n                        onChange={formik.handleChange}\n                        render={(ref, props) => <TextField fullWidth inputRef={ref} {...props}/>}\n                    />\n                </Grid>\n\n                <Grid item xs={12} md={8} lg={4}>\n                    <MaskedInput\n                        mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n                        className='form-control'\n                        label='Date of Case Discussion'\n                        guide={false}\n                        value={formik.values.date_of_case_discussion}\n                        id='date_of_case_discussion'\n                        name='date_of_case_discussion'\n                        onChange={formik.handleChange}\n                        render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} />}\n                    />\n                </Grid>\n\n                <Grid item xs={12} md={10} lg={6}>\n                    <SubCard title='Referral Source'>\n                        <CardContent>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={12} md={12}>\n                                    <Autocomplete\n                                        disablePortal\n                                        options={referralSourcesList}\n                                        name='referral_source'\n                                        id='referral_source'\n                                        value={formik.values.referral_source}\n                                        onChange={(e, value) => {\n                                            formik.setFieldValue('referral_source', value)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} />}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </SubCard>\n                </Grid>\n\n                <Grid item xs={12} sm={10} lg={6}>\n                    <SubCard title='Organizations Involved Upon Referral'>\n                        <CardContent>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={12} md={12}>\n                                    <Autocomplete\n                                        multiple\n                                        options={referralOrganizationsList}\n                                        value={formik.values.organizations_upon_referral}\n                                        getOptionLabel={(option) => option.label}\n                                        onChange={(e, value) => {\n                                            formik.setFieldValue('organizations_upon_referral', value)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} />}\n                                        name='organizations_upon_referral'\n                                        id='organizations_upon_referral'\n                                        sx={{\n                                            '& .MuiOutlinedInput-root': {\n                                                pr: '30px !important'\n                                            }\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </SubCard>\n                </Grid>\n\n                <Grid item xs={12} sm={10} lg={6}>\n                    <SubCard title='Members Present for Case Discussion'>\n                        <CardContent>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={12} md={12}>\n                                    <Autocomplete\n                                        multiple\n                                        options={caseDiscussionMembersPresentList}\n                                        getOptionLabel={(option) => option.label}\n                                        value={formik.values.members_present_case_discussion}\n                                        name='members_present_case_discussion'\n                                        id='members_present_case_discussion'\n                                        renderInput={(params) => <TextField {...params} />}\n                                        onChange={(e, value) => {\n                                            formik.setFieldValue('members_present_case_discussion', value)\n                                        }}\n                                        sx={{\n                                            '& .MuiOutlinedInput-root': {\n                                                pr: '30px !important'\n                                            }\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </SubCard>\n                </Grid>\n\n\n                <Grid item xs={12} sm={10} lg={6}>\n                    <SubCard title='Organization responsible for Client Case Management'>\n                        <CardContent>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={12} md={12}>\n                                    <Autocomplete\n                                        disablePortal\n                                        options={organizationResponsible}\n                                        name='case_management_organization_responsible'\n                                        value={formik.values.case_management_organization_responsible}\n                                        id='case_management_organization_responsible'\n                                        onChange={(e, value) => {\n                                            formik.setFieldValue('case_management_organization_responsible', value)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} label=\"Organization\"/>}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </SubCard>\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n};\n\nexport default ReviewReferralDetails;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/type-clinical-interventions.js",["643","644","645","646","647","648","649","650","651","652"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField, Card, Switch, Typography} from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport AssessmentForms from '../../../common/assessment-forms';\nimport MaskedInput from 'react-text-mask';\n\nimport { makeStyles } from '@material-ui/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light,\n        marginBottom: '16px',\n        marginTop: '16px'\n    }\n}));\n\nconst TypeOfClinicalInterventions = () => {\n    const classes = useStyles();\n\n    const [sdm, setSdm] = React.useState(true);\n    const [notification, setNotification] = React.useState(false);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Grid container spacing={3} direction=\"column\">\n                    <Grid item xs={8} sm={8} lg={6} md={8}>\n                        <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\">Start DND Mode</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Switch size=\"small\" color=\"primary\" checked={sdm} onChange={(e) => setSdm(e.target.checked)} name=\"sdm\" />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TypeOfClinicalInterventions;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/intervention-details.js",["653","654","655","656"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport AssessmentForms from '../../../common/assessment-forms';\nimport TypeOfClinicalInterventions from './type-clinical-interventions';\nimport TypeOfTherapeuticInterventions from './type-therapeutic-intervention';\nimport MaskedInput from 'react-text-mask';\nimport FileInput from '../../../common/file-input';\n\nconst modeOfInterventionSelectList = [\n    {\n        value: 'in-person-home',\n        label: 'In-Person Visit - Home'\n    },\n    {\n        value: 'in-person-nursing-home',\n        label: 'In-Person Visit - Nursing Home '\n    },\n    {\n        value: 'in-person-residential-facility',\n        label: 'In-Person Visit - Residential Facility '\n    },\n    {\n        value: 'in-person-work',\n        label: 'In-Person Visit - Work'\n    },\n    {\n        value: 'in-person-other',\n        label: 'In-Person Visit - Other'\n    },\n    {\n        value: 'telephone',\n        label: 'Telephone'\n    },\n    {\n        value: 'videoconferencing',\n        label: 'Videoconferencing'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\nconst InterventionDetails = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n                    className='form-control'\n                    label='Date'\n                    guide={false}\n                    id='client-intervention-date'\n                    onBlur={() => {\n                    }}\n                    onChange={() => {\n                    }}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue='' />}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <MaskedInput\n                    mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\n                    className='form-control'\n                    label='Total time spent'\n                    guide={false}\n                    id='client-intervention-time-spent'\n                    onBlur={() => {\n                    }}\n                    onChange={() => {\n                    }}\n                    render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue='' />}\n                />\n\n            </Grid>\n\n\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <SubCard title='Mode of Clinical Intervention'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={8}>\n                                <TextField id='client-intervention-mode-of-assessment' select label='Mode of Clinical Intervention'\n                                           value={city} fullWidth onChange={handleChangeCity}>\n                                    {modeOfInterventionSelectList.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n\n                            <Grid item xs={12} sm={8}>\n                                <TextField id='client-reassessment-mode-of-assessment-other' type='text' fullWidth label='Other'\n                                           defaultValue='' />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <TypeOfTherapeuticInterventions />\n            </Grid>\n\n            <Grid item xs={12} sm={8}>\n                <SubCard title='Assessment Forms'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <FileInput title='EMP Progress Notes' />\n\n                            <FileInput title='Team Communication' />\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default InterventionDetails;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/client.js",["657","658","659","660","661","662","663","664","665"],"import React from 'react';\n\n// material-ui\nimport {\n    CardContent,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    MenuItem,\n    TextField,\n    Radio,\n    RadioGroup\n} from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst ClientSelect = () => {\n    const [valueLabel, setValueLabel] = React.useState('checked');\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={8} md={8}>\n                <TextField type='text' fullWidth label='Client' defaultValue='' />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientSelect;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Breadcrumbs.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/hooks/useScriptRef.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/provider-specific-forms.js",["666","667","668"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst ProviderSpecificForms = () => (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={12} md={12}>\n                <SubCard title='Provider Specific Assessment Forms'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n\n                            <Grid item xs={12} sm={8}>\n                                <TextField fullWidth label='Total time spent' defaultValue='' />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n\nexport default ProviderSpecificForms;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/common/assessment-forms.js",["669","670","671"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst AssessmentForms = () => (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} lg={12} md={12}>\n                <SubCard title='Assessment Forms'>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n\n                            <Grid item xs={12} sm={8}>\n                                <TextField fullWidth label='Total time spent' defaultValue='' />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n\nexport default AssessmentForms;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/organization-responsible.js",["672","673","674","675","676","677","678","679","680","681","682","683"],"import React from 'react';\n\n// material-ui\nimport {  Autocomplete, Paper, InputAdornment, CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\n// assets\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\n\nconst referralSourcesList = [\n    { label: 'Ability NB', id: 1 },\n    { label: 'Addic', id: 2 },\n    { label: 'Ambulance New Brunswick (ANB)', id: 3 },\n    { label: 'Community Health Centers', id: 4 },\n    { label: 'Specify: Nurse Practitioner or Family Physician', id: 5 },\n    { label: 'Department of Veteran Affairs', id: 6 },\n    { label: 'Emergency Department', id: 7 },\n    { label: 'Extra-Mural Program', id: 8 },\n    { label: 'Family Physician (Outside Community Health Centers)', id: 9 },\n    { label: 'First Nations', id: 10 },\n    { label: 'Homecare Agency', id: 11 },\n    { label: 'Hospital (Inpatient)', id: 12 },\n    { label: 'Nursing Home', id: 13 },\n    { label: 'Public Health Services', id: 14 },\n    { label: 'Residential Facility', id: 15 },\n    { label: 'Self-referral or Referral by Family Member', id: 16 },\n    { label: 'Social Development - Home Adaptations for Seniors Independence Program', id: 17 },\n    { label: 'Social Development - Homeowner Repair Program', id: 18 },\n    { label: 'Social Development - Housing Program', id: 19 },\n    { label: 'Social Development - Long-Term Care Program', id: 20 },\n    { label: 'Social Development - Mobility and Adaptive Equipment Loan Program', id: 21 },\n    { label: 'Social Development - Social Assistance Program', id: 21 },\n    { label: 'Volunteer Organizations', id: 22 },\n    { label: 'Other', id: 23 }\n];\n\nconst OrganizationResponsible = ({name, id, formik}) => {\n    const handleChange = (e, value) => {\n        const {id, label} = value;\n        formik.setFieldValue(name, id)\n    }\n\n    return <SubCard title='Organization responsible for Client Case Management'>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} sm={12} lg={12} md={12}>\n                    <Autocomplete\n                        disablePortal\n                        options={referralSourcesList}\n                        defaultValue={referralSourcesList[0]}\n                        name={name}\n                        id={id}\n                        onChange={handleChange}\n                        renderInput={(params) => <TextField {...params} label=\"Organization\"/>}\n                    />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </SubCard>\n};\n\nexport default OrganizationResponsible;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/forms/referral-source.js",["684","685","686","687","688","689","690","691","692","693","694","695"],"import React from 'react';\n\n// material-ui\nimport {\n    Autocomplete,\n    Paper,\n    InputAdornment,\n    CardContent,\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\n// project imports\nimport {gridSpacing} from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\n// assets\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\n\nconst referralSourcesList = [\n    {label: 'Ability NB', id: 'referral_source_ability_nb'},\n    {label: 'Ambulatory Clinic (Outpatient)', id: 'referral_source_ambulatory_clinic_outpatient'},\n    {label: 'Ambulance New Brunswick (ANB)', id: 'referral_source_anb'},\n    {label: 'Community Health Centers', id: 'referral_source_community_health_centers'},\n    {label: 'Specify: Nurse Practitioner or Family Physician', id: 'referral_source_nurse_practitioner_family_physician'},\n    {label: 'Department of Veteran Affairs', id: 'referral_source_department_of_veteran_affairs'},\n    {label: 'Emergency Department', id: 'referral_source_emergency_department'},\n    {label: 'Extra-Mural Program', id: 'referral_source_extra_mural_program'},\n    {label: 'Family Physician (Outside Community Health Centers)', id: 'referral_source_family_physician_outside'},\n    {label: 'First Nations', id: 'referral_source_first_nations'},\n    {label: 'Homecare Agency', id: 'referral_source_homecare_agency'},\n    {label: 'Hospital (Inpatient)', id: 'referral_source_hospital_inpatient'},\n    {label: 'Nursing Home', id: 'referral_source_nursing_home'},\n    {label: 'Public Health Services', id: 'referral_source_public_health_services'},\n    {label: 'Residential Facility', id: 'referral_source_residential_facility'},\n    {label: 'Self-referral or Referral by Family Member', id: 'referral_source_self_referral'},\n    {label: 'Social Development - Home Adaptations for Seniors Independence Program', id: 'referral_source_social_home_adaptations'},\n    {label: 'Social Development - Homeowner Repair Program', id: 'referral_source_social_homeowner_repair'},\n    {label: 'Social Development - Housing Program', id: 'referral_source_social_housing_program'},\n    {label: 'Social Development - Long-Term Care Program', id: 'referral_source_social_long_term_care'},\n    {label: 'Social Development - Mobility and Adaptive Equipment Loan Program', id: 'referral_source_social_mobility_loan'},\n    {label: 'Social Development - Social Assistance Program', id: 'referral_source_social_assistance'},\n    {label: 'Volunteer Organizations', id: 'referral_source_volunter_organizations'},\n    {label: 'Other', id: 'referral_source_other'}\n];\n\nconst ReferralSource = ({name, id, formik}) => {\n    const handleChange = (e, value) => {\n        const {id, label} = value;\n        formik.setFieldValue(\"referralSource\", id)\n    }\n\n    return <SubCard title='Source of Referral'>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} sm={12} lg={12} md={12}>\n                    <Autocomplete\n                        disablePortal\n                        options={referralSourcesList}\n                        defaultValue={referralSourcesList[0]}\n                        name={name}\n                        id={id}\n                        onChange={handleChange}\n                        renderInput={(params) => <TextField {...params} label=\"Referral Source\"/>}\n                    />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </SubCard>\n};\n\nexport default ReferralSource;\n",["696","697","698","699","700","701"],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/case-manager/client-interventions/forms/type-therapeutic-intervention.js",["702","703","704","705","706","707"],"import React from 'react';\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport AssessmentForms from '../../../common/assessment-forms';\nimport MaskedInput from 'react-text-mask';\n\nconst typeOfTherapeuticInterventionList = [\n    {\n        value: 'therapeutic-intervention-type-admin-tasks',\n        label: 'Case-Specific Administrative Tasks (e.g., charting, progress notes, team communication, emails, discharge plans, medication updates, review shared care plan, etc.)'\n    },\n    {\n        value: 'therapeutic-intervention-type-delivery-of-supplies',\n        label: 'Delivery and/or pick up of Extra-Mural Program supplies or equipment'\n    },\n    {\n        value: 'therapeutic-intervention-type-bereavement-visit',\n        label: 'Bereavement visit to a significant other'\n    },\n    {\n        value: 'therapeutic-intervention-type-case-conferences',\n        label: 'Case Conferences'\n    },\n    {\n        value: 'therapeutic-intervention-type-other',\n        label: 'Other'\n    },\n\n];\n\nconst TypeOfTherapeuticInterventions = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={8}>\n                <TextField id='client-intervention-mode-of-assessment' select label='Mode of Therapeutic Intervention'\n                           value={city} fullWidth onChange={handleChangeCity}>\n                    {typeOfTherapeuticInterventionList.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default TypeOfTherapeuticInterventions;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/NotificationSection/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/ProfileSection/index.js",["708"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    ClickAwayListener,\r\n    Divider,\r\n    Grid,\r\n    InputAdornment,\r\n    List,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    OutlinedInput,\r\n    Paper,\r\n    Popper,\r\n    Switch,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ListItemButton from '@material-ui/core/ListItemButton';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport UpgradePlanCard from './UpgradePlanCard';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// assets\r\nimport { IconLogout, IconSearch, IconSettings } from '@tabler/icons';\r\nimport User1 from 'assets/images/users/user-round.svg';\r\n\r\n// style const\r\nconst useStyles = makeStyles((theme) => ({\r\n    navContainer: {\r\n        width: '100%',\r\n        maxWidth: '350px',\r\n        minWidth: '300px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            minWidth: '100%'\r\n        }\r\n    },\r\n    headerAvatar: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.mediumAvatar,\r\n        margin: '8px 0 8px 8px !important'\r\n    },\r\n    profileChip: {\r\n        height: '48px',\r\n        alignItems: 'center',\r\n        borderRadius: '27px',\r\n        transition: 'all .2s ease-in-out',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary.light,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary.light,\r\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n            borderColor: theme.palette.primary.main,\r\n            background: `${theme.palette.primary.main} !important`,\r\n            color: theme.palette.primary.light,\r\n            '& svg': {\r\n                stroke: theme.palette.primary.light\r\n            }\r\n        }\r\n    },\r\n    profileLabel: {\r\n        lineHeight: 0,\r\n        padding: '12px'\r\n    },\r\n    listItem: {\r\n        marginTop: '5px'\r\n    },\r\n    cardContent: {\r\n        padding: '16px !important'\r\n    },\r\n    card: {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light,\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    },\r\n    startAdornment: {\r\n        fontSize: '1rem',\r\n        color: theme.palette.grey[500]\r\n    },\r\n    flex: {\r\n        display: 'flex'\r\n    },\r\n    name: {\r\n        marginLeft: '2px',\r\n        fontWeight: 400\r\n    },\r\n    ScrollHeight: {\r\n        height: '100%',\r\n        maxHeight: 'calc(100vh - 250px)',\r\n        overflowX: 'hidden'\r\n    },\r\n    badgeWarning: {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.warning.dark,\r\n        color: '#fff'\r\n    }\r\n}));\r\n\r\n// ===========================|| PROFILE MENU ||=========================== //\r\n\r\nconst ProfileSection = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const [sdm, setSdm] = React.useState(true);\r\n    const [value, setValue] = React.useState('');\r\n    const [notification, setNotification] = React.useState(false);\r\n    const [selectedIndex] = React.useState(1);\r\n    const { logout } = useAuth();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const handleLogout = async () => {\r\n        try {\r\n            await logout();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleToggle = () => setOpen((prevOpen) => !prevOpen);\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n    return (\r\n        <>\r\n            <Chip\r\n                classes={{ label: classes.profileLabel }}\r\n                className={classes.profileChip}\r\n                icon={\r\n                    <Avatar\r\n                        src={User1}\r\n                        className={classes.headerAvatar}\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    />\r\n                }\r\n                label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n                variant=\"outlined\"\r\n                ref={anchorRef}\r\n                aria-controls={open ? 'menu-list-grow' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleToggle}\r\n                color=\"primary\"\r\n            />\r\n            <Popper\r\n                placement=\"bottom-end\"\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                popperOptions={{\r\n                    modifiers: [\r\n                        {\r\n                            name: 'offset',\r\n                            options: {\r\n                                offset: [0, 14]\r\n                            }\r\n                        }\r\n                    ]\r\n                }}\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Transitions position=\"top-right\" in={open} {...TransitionProps}>\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        <Grid container direction=\"column\" spacing={0}>\r\n                                            <Grid item className={classes.flex}>\r\n                                                <Typography variant=\"h4\">Good Morning,</Typography>\r\n                                                <Typography component=\"span\" variant=\"h4\" className={classes.name}>\r\n                                                    John\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle2\">Project Admin</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <OutlinedInput\r\n                                            className={classes.searchControl}\r\n                                            id=\"input-search-profile\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                            placeholder=\"Search profile options\"\r\n                                            startAdornment={\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                                </InputAdornment>\r\n                                            }\r\n                                            aria-describedby=\"search-helper-text\"\r\n                                            inputProps={{\r\n                                                'aria-label': 'weight'\r\n                                            }}\r\n                                        />\r\n                                        <Divider />\r\n                                        <PerfectScrollbar className={classes.ScrollHeight}>\r\n                                            <Divider />\r\n                                            <Card className={classes.card}>\r\n                                                <CardContent>\r\n                                                    <Grid container spacing={3} direction=\"column\">\r\n                                                        <Grid item>\r\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"subtitle1\">Start DND Mode</Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Switch\r\n                                                                        color=\"primary\"\r\n                                                                        checked={sdm}\r\n                                                                        onChange={(e) => setSdm(e.target.checked)}\r\n                                                                        name=\"sdm\"\r\n                                                                        size=\"small\"\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"subtitle1\">Allow Notifications</Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Switch\r\n                                                                        checked={notification}\r\n                                                                        onChange={(e) => setNotification(e.target.checked)}\r\n                                                                        name=\"sdm\"\r\n                                                                        size=\"small\"\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                            <Divider />\r\n                                            <List component=\"nav\" className={classes.navContainer}>\r\n                                                <ListItemButton\r\n                                                    className={classes.listItem}\r\n                                                    sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                                    selected={selectedIndex === 4}\r\n                                                    onClick={handleLogout}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n                                                </ListItemButton>\r\n                                            </List>\r\n                                        </PerfectScrollbar>\r\n                                    </CardContent>\r\n                                </MainCard>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Transitions>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileSection;\r\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/MobileSection/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/SearchSection/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/LocalizationSection/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/LogoSection/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/NotificationSection/NotificationList.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Header/ProfileSection/UpgradePlanCard.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/utils/route-guard/GuestGuard.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Transitions.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavGroup/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MinimalLayout/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/layout/MainLayout/Sidebar/MenuList/NavItem/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/case-manager/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/case-manager/prepare-menu-items.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/common/common-menu-items.js",["709"],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/review-board/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/review-board/prepare-menu-items.js",["710"],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/review-board.js",["711"],"import axios from './axios-client';\n\n/*\n* API Method Naming Convention:\n* 1. List API - listMethodName()\n* 2. Detail API - retrieveMethodName()\n* 3. Update - updateMethodName()\n* */\nconst urls = {\n    'listReferralsByReviewBoardID': 'review-board/referral'\n}\n\nexport default {\n    async createReferral(referralData, referralForms, reviewBoardUser) {\n        try {\n            // Standardize organizations\n            const organizationValues = referralData.organizations_upon_referral.map(organization => organization.label)\n            referralData.organizations_upon_referral = organizationValues\n\n            // Standardize members\n            const membersValues = referralData.members_present_case_discussion.map(members => members.label)\n            referralData.members_present_case_discussion = membersValues\n\n            // Standardize referral source\n            referralData.referral_source = referralData.referral_source.label\n            referralData.case_management_organization_responsible = referralData.case_management_organization_responsible.label\n            referralData.review_board_user = reviewBoardUser\n\n            const formData = {\n                \"data\": {\n                    ...referralData\n                },\n                \"referral_forms\": {\n                    ...referralForms\n                }\n            }\n\n            const response = await axios.post('review-board/referral-create', formData);\n            return response.data;\n        } catch (error) {\n            return error.response;\n        }\n    },\n\n    async listReferralsByReviewBoardID(reviewBoardID) {\n        try {\n            const response = await axios.get(`review-board/${reviewBoardID}/referral`);\n            return response.data.data.results;\n        } catch (error) {\n            return error.response;\n        }\n    },\n\n    async listReferrals() {\n        try {\n            const response = await axios.get('review-board/referral');\n            return response.data;\n        } catch (error) {\n            return error.response;\n        }\n    },\n\n    async retrieveReferral(referralID) {\n        try {\n            referralID = '383f252a-5216-4aa2-b2fc-def96faae629';\n            const response = await axios.get(`review-board/referral/${referralID}`);\n            return response.data;\n        } catch (error) {\n            return error.response;\n        }\n    },\n\n    async updateReferral(referralID, formData) {\n        formData = {\n            \"client_first_name\": \"Referral\",\n            \"client_last_name\": \"Test\",\n            \"client_email\": \"referral.test@ccc.com\",\n\n            \"review_board_user\": \"9ac96e2c-2694-487e-9bab-d87f3bc21bcf\",\n            \"referral_date\": \"2021-10-05\",\n\n            \"referral_source\": \"Ability Updated\",\n            \"referral_source_detail\": \"\",\n\n            \"organizations_upon_referral\": [\"Ability NB\", \"Ambulatory Clinic\"],\n            \"organizations_upon_referral_detail\": \"\",\n\n            \"date_of_case_discussion\": \"2021-10-05\",\n\n            \"members_present_case_discussion\": [\"Ability NB\", \"Ambulatory Clinic\"],\n            \"members_present_case_discussion_detail\": \"\",\n\n            \"case_management_organization_responsible\": \"Ability NB\",\n            \"case_management_organization_person_responsible\": \"Manager Ability NB\",\n\n            \"decision\": \"POTENTIAL_CLIENT\",\n            \"decision_detail\": \"Client not accepted yet.\",\n            \"referral_forms\": {\n                \"emp_referral_request\": [\"20ddfbf8-35ae-48eb-8e0b-32c586355d2c\"],\n                \"familiar_faces_snat\": [\"20ddfbf8-35ae-48eb-8e0b-32c586355d2c\"],\n                \"familiar_faces_sdh\": [\"20ddfbf8-35ae-48eb-8e0b-32c586355d2c\"]\n            }\n        }\n\n        try {\n            referralID = '383f252a-5216-4aa2-b2fc-def96faae629';\n            const response = await axios.put(`review-board/referral/${referralID}`, formData);\n            return response.data;\n        } catch (error) {\n            return error.response;\n        }\n    }\n}\n\n\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/axios-client.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/roles/review-board/referral/add-referral.js",["712","713","714","715","716","717","718","719","720"],"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core';\n\n// project imports\nimport ReviewReferralDetails from './forms/referral-details';\nimport CaseManagementDecision from './forms/decision';\nimport ClientDetail from './forms/client-detail';\nimport ReferralForms from './forms/referral-forms';\nimport CasePresentationForm from './forms/case-presentation-form';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\n\nimport { Form, Field, ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n\n// assets\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone';\n\n\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    profileTab: {\n        '& .MuiTabs-flexContainer': {\n            borderBottom: 'none'\n        },\n        '& button': {\n            color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n            minHeight: 'auto',\n            minWidth: '100%',\n            padding: '12px 16px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            textAlign: 'left',\n            justifyContent: 'flex-start'\n        },\n        '& button.Mui-selected': {\n            color: theme.palette.primary.main,\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n        },\n        '& button > svg': {\n            marginBottom: '0px !important',\n            marginRight: '10px',\n            marginTop: '10px',\n            height: '20px',\n            width: '20px'\n        },\n        '& button > div > span': {\n            display: 'block'\n        },\n        '& > div > span': {\n            display: 'none'\n        }\n    },\n    cardPanels: {\n        borderLeft: '1px solid',\n        borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\n        height: '100%'\n    }\n}));\n\n// tabs\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`}\n             aria-labelledby={`simple-tab-${index}`} {...other}>\n            {value === index && <div>{children}</div>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`\n    };\n}\n\n// tabs option\nconst tabsOption = [\n    {\n        label: 'Client',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Enter Client Details'\n    },\n    {\n        label: 'Referral Details',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Add Referral Details'\n    },\n    {\n        label: 'Referral Forms',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Upload Referral Forms'\n    },\n    {\n        label: 'Case Presentation Form',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Upload the Presentation Form'\n    },\n    {\n        label: 'Decision',\n        icon: <DescriptionTwoToneIcon />,\n        caption: 'Choose Client Referral Decision'\n    }\n];\n\n// ===========================|| PROFILE 2 ||=========================== //\n\nconst ReviewBoardReferralCreate = () => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const clientFormik = useFormik({\n        initialValues: {\n            referral_client_first_name: '',\n            referral_client_last_name: '',\n            referral_client_email: ''\n        },\n\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        }\n    });\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <MainCard title='Client Referral' content={false}>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12} lg={3}>\n                            <CardContent>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    orientation='vertical'\n                                    className={classes.profileTab}\n                                    variant='scrollable'\n                                    sx={{\n                                        '& button': {\n                                            borderRadius: `${customization.borderRadius}px`\n                                        }\n                                    }}\n                                >\n                                    {tabsOption.map((tab, index) => (\n                                        <Tab\n                                            key={index}\n                                            icon={tab.icon}\n                                            label={\n                                                <Grid container direction='column'>\n                                                    <Typography sx={{ textTransform: 'capitalize' }} variant='subtitle1'\n                                                                color='inherit'>\n                                                        {tab.label}\n                                                    </Typography>\n                                                    <Typography component='div' variant='caption'\n                                                                sx={{ textTransform: 'capitalize' }}>\n                                                        {tab.caption}\n                                                    </Typography>\n                                                </Grid>\n                                            }\n                                            {...a11yProps(index)}\n                                        />\n                                    ))}\n                                </Tabs>\n                            </CardContent>\n                        </Grid>\n                        <Grid item xs={12} lg={9}>\n                            <CardContent className={classes.cardPanels}>\n                                <TabPanel value={value} index={0}>\n                                    <ClientDetail/>\n                                </TabPanel>\n                                <TabPanel value={value} index={1}>\n                                    <ReviewReferralDetails />\n                                </TabPanel>\n                                <TabPanel value={value} index={2}>\n                                    <ReferralForms />\n                                </TabPanel>\n                                <TabPanel value={value} index={3}>\n                                    <CasePresentationForm />\n                                </TabPanel>\n                                <TabPanel value={value} index={4}>\n                                    <CaseManagementDecision />\n                                </TabPanel>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <CardActions>\n                        <Grid container justifyContent='space-between' spacing={0}>\n                            <Grid item>\n                                {value > 0 && (\n                                    <AnimateButton>\n                                        <Button variant='outlined' size='large'\n                                                onClick={(e) => handleChange(e, parseInt(value, 10) - 1)}>\n                                            Back\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {value < 2 && (\n                                    <AnimateButton>\n                                        <Button variant='contained' size='large'\n                                                onClick={(e) => handleChange(e, 1 + parseInt(value, 10))}>\n                                            Continue\n                                        </Button>\n                                    </AnimateButton>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </CardActions>\n                </MainCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ReviewBoardReferralCreate;\n","/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/store/api-calls/common.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/AvatarStatus.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/ChartHistory.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserDetails.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/ChatDrawer.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/ui-component/extended/Avatar.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserList.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/views/chat/UserAvatar.js",["721"],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/routes/common-routes/index.js",[],"/Users/sharanchitta/PycharmProjects/provider-tool-frontend/src/menu-items/common/utils.js",[],{"ruleId":"722","replacedBy":"723"},{"ruleId":"724","replacedBy":"725"},{"ruleId":"726","replacedBy":"727"},{"ruleId":"728","replacedBy":"729"},{"ruleId":"730","replacedBy":"731"},{"ruleId":"732","replacedBy":"733"},{"ruleId":"734","severity":1,"message":"735","line":20,"column":9,"nodeType":"736","messageId":"737","endLine":20,"endColumn":25},{"ruleId":"734","severity":1,"message":"738","line":25,"column":9,"nodeType":"736","messageId":"737","endLine":25,"endColumn":31},{"ruleId":"734","severity":1,"message":"739","line":25,"column":33,"nodeType":"736","messageId":"737","endLine":25,"endColumn":61},{"ruleId":"740","severity":1,"message":"741","line":30,"column":15,"nodeType":"742","messageId":"743","endLine":30,"endColumn":43},{"ruleId":"734","severity":1,"message":"739","line":30,"column":15,"nodeType":"736","messageId":"737","endLine":30,"endColumn":43},{"ruleId":"744","severity":1,"message":"745","line":13,"column":56,"nodeType":"746","messageId":"747","endLine":13,"endColumn":65},{"ruleId":"744","severity":1,"message":"745","line":31,"column":57,"nodeType":"746","messageId":"747","endLine":31,"endColumn":66},{"ruleId":"734","severity":1,"message":"748","line":4,"column":5,"nodeType":"736","messageId":"737","endLine":4,"endColumn":58},{"ruleId":"734","severity":1,"message":"749","line":5,"column":5,"nodeType":"736","messageId":"737","endLine":5,"endColumn":65},{"ruleId":"734","severity":1,"message":"750","line":6,"column":5,"nodeType":"736","messageId":"737","endLine":6,"endColumn":60},{"ruleId":"734","severity":1,"message":"751","line":11,"column":8,"nodeType":"736","messageId":"737","endLine":11,"endColumn":21},{"ruleId":"734","severity":1,"message":"752","line":19,"column":8,"nodeType":"736","messageId":"737","endLine":19,"endColumn":32},{"ruleId":"734","severity":1,"message":"753","line":21,"column":8,"nodeType":"736","messageId":"737","endLine":21,"endColumn":29},{"ruleId":"734","severity":1,"message":"754","line":22,"column":8,"nodeType":"736","messageId":"737","endLine":22,"endColumn":25},{"ruleId":"734","severity":1,"message":"755","line":46,"column":9,"nodeType":"736","messageId":"737","endLine":46,"endColumn":19},{"ruleId":"734","severity":1,"message":"756","line":270,"column":11,"nodeType":"736","messageId":"737","endLine":270,"endColumn":27},{"ruleId":"734","severity":1,"message":"757","line":277,"column":12,"nodeType":"736","messageId":"737","endLine":277,"endColumn":16},{"ruleId":"734","severity":1,"message":"758","line":281,"column":11,"nodeType":"736","messageId":"737","endLine":281,"endColumn":28},{"ruleId":"759","severity":1,"message":"760","line":375,"column":8,"nodeType":"761","endLine":375,"endColumn":10,"suggestions":"762"},{"ruleId":"734","severity":1,"message":"763","line":38,"column":8,"nodeType":"736","messageId":"737","endLine":38,"endColumn":14},{"ruleId":"734","severity":1,"message":"764","line":85,"column":11,"nodeType":"736","messageId":"737","endLine":85,"endColumn":24},{"ruleId":"734","severity":1,"message":"765","line":90,"column":11,"nodeType":"736","messageId":"737","endLine":90,"endColumn":24},{"ruleId":"734","severity":1,"message":"752","line":20,"column":8,"nodeType":"736","messageId":"737","endLine":20,"endColumn":32},{"ruleId":"734","severity":1,"message":"754","line":23,"column":8,"nodeType":"736","messageId":"737","endLine":23,"endColumn":25},{"ruleId":"734","severity":1,"message":"752","line":22,"column":8,"nodeType":"736","messageId":"737","endLine":22,"endColumn":32},{"ruleId":"734","severity":1,"message":"766","line":129,"column":11,"nodeType":"736","messageId":"737","endLine":129,"endColumn":26},{"ruleId":"734","severity":1,"message":"767","line":1,"column":8,"nodeType":"736","messageId":"737","endLine":1,"endColumn":13},{"ruleId":"734","severity":1,"message":"768","line":17,"column":11,"nodeType":"736","messageId":"737","endLine":17,"endColumn":16},{"ruleId":"734","severity":1,"message":"769","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":19},{"ruleId":"734","severity":1,"message":"770","line":10,"column":8,"nodeType":"736","messageId":"737","endLine":10,"endColumn":23},{"ruleId":"734","severity":1,"message":"771","line":4,"column":22,"nodeType":"736","messageId":"737","endLine":4,"endColumn":30},{"ruleId":"734","severity":1,"message":"772","line":4,"column":32,"nodeType":"736","messageId":"737","endLine":4,"endColumn":48},{"ruleId":"734","severity":1,"message":"773","line":4,"column":56,"nodeType":"736","messageId":"737","endLine":4,"endColumn":64},{"ruleId":"734","severity":1,"message":"774","line":4,"column":66,"nodeType":"736","messageId":"737","endLine":4,"endColumn":75},{"ruleId":"734","severity":1,"message":"775","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":19},{"ruleId":"734","severity":1,"message":"776","line":16,"column":5,"nodeType":"736","messageId":"737","endLine":16,"endColumn":28},{"ruleId":"734","severity":1,"message":"777","line":20,"column":11,"nodeType":"736","messageId":"737","endLine":20,"endColumn":19},{"ruleId":"734","severity":1,"message":"778","line":5,"column":9,"nodeType":"736","messageId":"737","endLine":5,"endColumn":15},{"ruleId":"734","severity":1,"message":"771","line":5,"column":30,"nodeType":"736","messageId":"737","endLine":5,"endColumn":38},{"ruleId":"734","severity":1,"message":"772","line":5,"column":40,"nodeType":"736","messageId":"737","endLine":5,"endColumn":56},{"ruleId":"734","severity":1,"message":"773","line":5,"column":64,"nodeType":"736","messageId":"737","endLine":5,"endColumn":72},{"ruleId":"734","severity":1,"message":"775","line":10,"column":8,"nodeType":"736","messageId":"737","endLine":10,"endColumn":19},{"ruleId":"734","severity":1,"message":"779","line":12,"column":20,"nodeType":"736","messageId":"737","endLine":12,"endColumn":30},{"ruleId":"734","severity":1,"message":"780","line":13,"column":13,"nodeType":"736","messageId":"737","endLine":13,"endColumn":16},{"ruleId":"734","severity":1,"message":"771","line":4,"column":22,"nodeType":"736","messageId":"737","endLine":4,"endColumn":30},{"ruleId":"734","severity":1,"message":"772","line":4,"column":32,"nodeType":"736","messageId":"737","endLine":4,"endColumn":48},{"ruleId":"734","severity":1,"message":"773","line":4,"column":56,"nodeType":"736","messageId":"737","endLine":4,"endColumn":64},{"ruleId":"734","severity":1,"message":"774","line":4,"column":66,"nodeType":"736","messageId":"737","endLine":4,"endColumn":75},{"ruleId":"734","severity":1,"message":"775","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":19},{"ruleId":"734","severity":1,"message":"781","line":4,"column":8,"nodeType":"736","messageId":"737","endLine":4,"endColumn":23},{"ruleId":"734","severity":1,"message":"771","line":4,"column":30,"nodeType":"736","messageId":"737","endLine":4,"endColumn":38},{"ruleId":"734","severity":1,"message":"772","line":4,"column":40,"nodeType":"736","messageId":"737","endLine":4,"endColumn":56},{"ruleId":"734","severity":1,"message":"773","line":4,"column":64,"nodeType":"736","messageId":"737","endLine":4,"endColumn":72},{"ruleId":"734","severity":1,"message":"774","line":4,"column":74,"nodeType":"736","messageId":"737","endLine":4,"endColumn":83},{"ruleId":"734","severity":1,"message":"782","line":7,"column":9,"nodeType":"736","messageId":"737","endLine":7,"endColumn":20},{"ruleId":"734","severity":1,"message":"775","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":19},{"ruleId":"734","severity":1,"message":"783","line":11,"column":22,"nodeType":"736","messageId":"737","endLine":11,"endColumn":33},{"ruleId":"740","severity":1,"message":"784","line":16,"column":21,"nodeType":"742","messageId":"743","endLine":16,"endColumn":26},{"ruleId":"740","severity":1,"message":"785","line":16,"column":28,"nodeType":"742","messageId":"743","endLine":16,"endColumn":43},{"ruleId":"740","severity":1,"message":"786","line":16,"column":45,"nodeType":"742","messageId":"743","endLine":16,"endColumn":53},{"ruleId":"744","severity":1,"message":"745","line":3,"column":63,"nodeType":"746","messageId":"747","endLine":3,"endColumn":72},{"ruleId":"734","severity":1,"message":"771","line":4,"column":10,"nodeType":"736","messageId":"737","endLine":4,"endColumn":18},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"787","line":12,"column":12,"nodeType":"736","messageId":"737","endLine":12,"endColumn":16},{"ruleId":"734","severity":1,"message":"788","line":13,"column":11,"nodeType":"736","messageId":"737","endLine":13,"endColumn":27},{"ruleId":"734","severity":1,"message":"789","line":17,"column":12,"nodeType":"736","messageId":"737","endLine":17,"endColumn":19},{"ruleId":"734","severity":1,"message":"790","line":18,"column":11,"nodeType":"736","messageId":"737","endLine":18,"endColumn":30},{"ruleId":"734","severity":1,"message":"791","line":25,"column":11,"nodeType":"736","messageId":"737","endLine":25,"endColumn":29},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"792","line":12,"column":12,"nodeType":"736","messageId":"737","endLine":12,"endColumn":18},{"ruleId":"734","severity":1,"message":"793","line":12,"column":20,"nodeType":"736","messageId":"737","endLine":12,"endColumn":29},{"ruleId":"734","severity":1,"message":"771","line":4,"column":10,"nodeType":"736","messageId":"737","endLine":4,"endColumn":18},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"792","line":12,"column":12,"nodeType":"736","messageId":"737","endLine":12,"endColumn":18},{"ruleId":"734","severity":1,"message":"793","line":12,"column":20,"nodeType":"736","messageId":"737","endLine":12,"endColumn":29},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"791","line":15,"column":11,"nodeType":"736","messageId":"737","endLine":15,"endColumn":29},{"ruleId":"734","severity":1,"message":"794","line":5,"column":5,"nodeType":"736","messageId":"737","endLine":5,"endColumn":16},{"ruleId":"734","severity":1,"message":"773","line":9,"column":5,"nodeType":"736","messageId":"737","endLine":9,"endColumn":13},{"ruleId":"734","severity":1,"message":"794","line":4,"column":10,"nodeType":"736","messageId":"737","endLine":4,"endColumn":21},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"795","line":8,"column":8,"nodeType":"736","messageId":"737","endLine":8,"endColumn":15},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"787","line":13,"column":12,"nodeType":"736","messageId":"737","endLine":13,"endColumn":16},{"ruleId":"734","severity":1,"message":"788","line":14,"column":11,"nodeType":"736","messageId":"737","endLine":14,"endColumn":27},{"ruleId":"734","severity":1,"message":"789","line":18,"column":12,"nodeType":"736","messageId":"737","endLine":18,"endColumn":19},{"ruleId":"734","severity":1,"message":"790","line":19,"column":11,"nodeType":"736","messageId":"737","endLine":19,"endColumn":30},{"ruleId":"734","severity":1,"message":"791","line":26,"column":11,"nodeType":"736","messageId":"737","endLine":26,"endColumn":29},{"ruleId":"734","severity":1,"message":"794","line":4,"column":10,"nodeType":"736","messageId":"737","endLine":4,"endColumn":21},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"795","line":8,"column":8,"nodeType":"736","messageId":"737","endLine":8,"endColumn":15},{"ruleId":"734","severity":1,"message":"791","line":57,"column":11,"nodeType":"736","messageId":"737","endLine":57,"endColumn":29},{"ruleId":"734","severity":1,"message":"782","line":17,"column":9,"nodeType":"736","messageId":"737","endLine":17,"endColumn":20},{"ruleId":"734","severity":1,"message":"795","line":18,"column":8,"nodeType":"736","messageId":"737","endLine":18,"endColumn":15},{"ruleId":"734","severity":1,"message":"775","line":19,"column":8,"nodeType":"736","messageId":"737","endLine":19,"endColumn":19},{"ruleId":"734","severity":1,"message":"779","line":20,"column":20,"nodeType":"736","messageId":"737","endLine":20,"endColumn":30},{"ruleId":"734","severity":1,"message":"780","line":21,"column":13,"nodeType":"736","messageId":"737","endLine":21,"endColumn":16},{"ruleId":"734","severity":1,"message":"796","line":59,"column":34,"nodeType":"736","messageId":"737","endLine":59,"endColumn":39},{"ruleId":"734","severity":1,"message":"778","line":6,"column":5,"nodeType":"736","messageId":"737","endLine":6,"endColumn":11},{"ruleId":"734","severity":1,"message":"771","line":8,"column":5,"nodeType":"736","messageId":"737","endLine":8,"endColumn":13},{"ruleId":"734","severity":1,"message":"772","line":9,"column":5,"nodeType":"736","messageId":"737","endLine":9,"endColumn":21},{"ruleId":"734","severity":1,"message":"773","line":11,"column":5,"nodeType":"736","messageId":"737","endLine":11,"endColumn":13},{"ruleId":"734","severity":1,"message":"797","line":20,"column":8,"nodeType":"736","messageId":"737","endLine":20,"endColumn":28},{"ruleId":"734","severity":1,"message":"798","line":21,"column":8,"nodeType":"736","messageId":"737","endLine":21,"endColumn":31},{"ruleId":"734","severity":1,"message":"799","line":23,"column":9,"nodeType":"736","messageId":"737","endLine":23,"endColumn":16},{"ruleId":"740","severity":1,"message":"800","line":146,"column":33,"nodeType":"742","messageId":"743","endLine":146,"endColumn":48},{"ruleId":"734","severity":1,"message":"801","line":146,"column":33,"nodeType":"736","messageId":"737","endLine":146,"endColumn":48},{"ruleId":"740","severity":1,"message":"802","line":146,"column":50,"nodeType":"742","messageId":"743","endLine":146,"endColumn":67},{"ruleId":"734","severity":1,"message":"803","line":146,"column":50,"nodeType":"736","messageId":"737","endLine":146,"endColumn":67},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"774","line":4,"column":67,"nodeType":"736","messageId":"737","endLine":4,"endColumn":76},{"ruleId":"734","severity":1,"message":"782","line":7,"column":10,"nodeType":"736","messageId":"737","endLine":7,"endColumn":21},{"ruleId":"734","severity":1,"message":"795","line":8,"column":8,"nodeType":"736","messageId":"737","endLine":8,"endColumn":15},{"ruleId":"734","severity":1,"message":"804","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":23},{"ruleId":"734","severity":1,"message":"775","line":10,"column":8,"nodeType":"736","messageId":"737","endLine":10,"endColumn":19},{"ruleId":"734","severity":1,"message":"805","line":27,"column":12,"nodeType":"736","messageId":"737","endLine":27,"endColumn":24},{"ruleId":"734","severity":1,"message":"806","line":27,"column":26,"nodeType":"736","messageId":"737","endLine":27,"endColumn":41},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"804","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":23},{"ruleId":"734","severity":1,"message":"807","line":10,"column":8,"nodeType":"736","messageId":"737","endLine":10,"endColumn":35},{"ruleId":"734","severity":1,"message":"794","line":5,"column":5,"nodeType":"736","messageId":"737","endLine":5,"endColumn":16},{"ruleId":"734","severity":1,"message":"808","line":6,"column":5,"nodeType":"736","messageId":"737","endLine":6,"endColumn":16},{"ruleId":"734","severity":1,"message":"772","line":7,"column":5,"nodeType":"736","messageId":"737","endLine":7,"endColumn":21},{"ruleId":"734","severity":1,"message":"773","line":9,"column":5,"nodeType":"736","messageId":"737","endLine":9,"endColumn":13},{"ruleId":"734","severity":1,"message":"809","line":11,"column":5,"nodeType":"736","messageId":"737","endLine":11,"endColumn":10},{"ruleId":"734","severity":1,"message":"810","line":12,"column":5,"nodeType":"736","messageId":"737","endLine":12,"endColumn":15},{"ruleId":"734","severity":1,"message":"795","line":17,"column":8,"nodeType":"736","messageId":"737","endLine":17,"endColumn":15},{"ruleId":"734","severity":1,"message":"811","line":20,"column":12,"nodeType":"736","messageId":"737","endLine":20,"endColumn":22},{"ruleId":"734","severity":1,"message":"812","line":20,"column":24,"nodeType":"736","messageId":"737","endLine":20,"endColumn":37},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"773","line":4,"column":57,"nodeType":"736","messageId":"737","endLine":4,"endColumn":65},{"ruleId":"734","severity":1,"message":"813","line":4,"column":25,"nodeType":"736","messageId":"737","endLine":4,"endColumn":30},{"ruleId":"734","severity":1,"message":"814","line":4,"column":32,"nodeType":"736","messageId":"737","endLine":4,"endColumn":46},{"ruleId":"734","severity":1,"message":"771","line":4,"column":61,"nodeType":"736","messageId":"737","endLine":4,"endColumn":69},{"ruleId":"734","severity":1,"message":"772","line":4,"column":71,"nodeType":"736","messageId":"737","endLine":4,"endColumn":87},{"ruleId":"734","severity":1,"message":"773","line":4,"column":95,"nodeType":"736","messageId":"737","endLine":4,"endColumn":103},{"ruleId":"734","severity":1,"message":"775","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":19},{"ruleId":"734","severity":1,"message":"815","line":12,"column":8,"nodeType":"736","messageId":"737","endLine":12,"endColumn":24},{"ruleId":"740","severity":1,"message":"816","line":41,"column":35,"nodeType":"742","messageId":"743","endLine":41,"endColumn":39},{"ruleId":"740","severity":1,"message":"817","line":41,"column":41,"nodeType":"742","messageId":"743","endLine":41,"endColumn":43},{"ruleId":"740","severity":1,"message":"818","line":41,"column":45,"nodeType":"742","messageId":"743","endLine":41,"endColumn":51},{"ruleId":"734","severity":1,"message":"819","line":43,"column":20,"nodeType":"736","messageId":"737","endLine":43,"endColumn":25},{"ruleId":"740","severity":1,"message":"820","line":44,"column":16,"nodeType":"736","messageId":"743","endLine":44,"endColumn":29},{"ruleId":"734","severity":1,"message":"813","line":6,"column":5,"nodeType":"736","messageId":"737","endLine":6,"endColumn":10},{"ruleId":"734","severity":1,"message":"814","line":7,"column":5,"nodeType":"736","messageId":"737","endLine":7,"endColumn":19},{"ruleId":"734","severity":1,"message":"771","line":9,"column":5,"nodeType":"736","messageId":"737","endLine":9,"endColumn":13},{"ruleId":"734","severity":1,"message":"772","line":10,"column":5,"nodeType":"736","messageId":"737","endLine":10,"endColumn":21},{"ruleId":"734","severity":1,"message":"773","line":12,"column":5,"nodeType":"736","messageId":"737","endLine":12,"endColumn":13},{"ruleId":"734","severity":1,"message":"775","line":19,"column":8,"nodeType":"736","messageId":"737","endLine":19,"endColumn":19},{"ruleId":"734","severity":1,"message":"815","line":22,"column":8,"nodeType":"736","messageId":"737","endLine":22,"endColumn":24},{"ruleId":"740","severity":1,"message":"816","line":51,"column":26,"nodeType":"742","messageId":"743","endLine":51,"endColumn":30},{"ruleId":"740","severity":1,"message":"817","line":51,"column":32,"nodeType":"742","messageId":"743","endLine":51,"endColumn":34},{"ruleId":"740","severity":1,"message":"818","line":51,"column":36,"nodeType":"742","messageId":"743","endLine":51,"endColumn":42},{"ruleId":"734","severity":1,"message":"819","line":53,"column":20,"nodeType":"736","messageId":"737","endLine":53,"endColumn":25},{"ruleId":"740","severity":1,"message":"820","line":54,"column":16,"nodeType":"736","messageId":"743","endLine":54,"endColumn":29},{"ruleId":"722","replacedBy":"821"},{"ruleId":"724","replacedBy":"822"},{"ruleId":"726","replacedBy":"823"},{"ruleId":"728","replacedBy":"824"},{"ruleId":"730","replacedBy":"825"},{"ruleId":"732","replacedBy":"826"},{"ruleId":"734","severity":1,"message":"794","line":4,"column":10,"nodeType":"736","messageId":"737","endLine":4,"endColumn":21},{"ruleId":"734","severity":1,"message":"771","line":4,"column":23,"nodeType":"736","messageId":"737","endLine":4,"endColumn":31},{"ruleId":"734","severity":1,"message":"772","line":4,"column":33,"nodeType":"736","messageId":"737","endLine":4,"endColumn":49},{"ruleId":"734","severity":1,"message":"795","line":8,"column":8,"nodeType":"736","messageId":"737","endLine":8,"endColumn":15},{"ruleId":"734","severity":1,"message":"804","line":9,"column":8,"nodeType":"736","messageId":"737","endLine":9,"endColumn":23},{"ruleId":"734","severity":1,"message":"775","line":10,"column":8,"nodeType":"736","messageId":"737","endLine":10,"endColumn":19},{"ruleId":"734","severity":1,"message":"827","line":32,"column":8,"nodeType":"736","messageId":"737","endLine":32,"endColumn":23},{"ruleId":"734","severity":1,"message":"767","line":1,"column":8,"nodeType":"736","messageId":"737","endLine":1,"endColumn":13},{"ruleId":"734","severity":1,"message":"767","line":1,"column":8,"nodeType":"736","messageId":"737","endLine":1,"endColumn":13},{"ruleId":"734","severity":1,"message":"828","line":9,"column":7,"nodeType":"736","messageId":"737","endLine":9,"endColumn":11},{"ruleId":"734","severity":1,"message":"829","line":20,"column":10,"nodeType":"736","messageId":"737","endLine":20,"endColumn":14},{"ruleId":"734","severity":1,"message":"830","line":20,"column":16,"nodeType":"736","messageId":"737","endLine":20,"endColumn":21},{"ruleId":"734","severity":1,"message":"831","line":20,"column":23,"nodeType":"736","messageId":"737","endLine":20,"endColumn":35},{"ruleId":"734","severity":1,"message":"780","line":21,"column":13,"nodeType":"736","messageId":"737","endLine":21,"endColumn":16},{"ruleId":"734","severity":1,"message":"752","line":25,"column":8,"nodeType":"736","messageId":"737","endLine":25,"endColumn":32},{"ruleId":"734","severity":1,"message":"753","line":27,"column":8,"nodeType":"736","messageId":"737","endLine":27,"endColumn":29},{"ruleId":"734","severity":1,"message":"754","line":28,"column":8,"nodeType":"736","messageId":"737","endLine":28,"endColumn":25},{"ruleId":"734","severity":1,"message":"832","line":139,"column":11,"nodeType":"736","messageId":"737","endLine":139,"endColumn":23},{"ruleId":"833","severity":1,"message":"834","line":147,"column":13,"nodeType":"835","messageId":"836","endLine":147,"endColumn":51},{"ruleId":"734","severity":1,"message":"837","line":11,"column":7,"nodeType":"736","messageId":"737","endLine":11,"endColumn":18},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["838"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'FirebaseProvider' is defined but never used.","Identifier","unusedVar","'fetchSectionAttributes' is defined but never used.","'fetchSectionAttributesByRole' is defined but never used.","react/prop-types","'fetchSectionAttributesByRole' is missing in props validation","Property","missingPropType","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'REVIEW_BOARD_REFERRAL_SET_FORM_FILE_CASE_PRESENTATION' is defined but never used.","'REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_FACES_SDH' is defined but never used.","'REVIEW_BOARD_REFERRAL_SET_FORM_FILE_FAMILIAR_FACES_SNAT' is defined but never used.","'FirebaseLogin' is defined but never used.","'PersonOutlineTwoToneIcon' is defined but never used.","'CreditCardTwoToneIcon' is defined but never used.","'VpnKeyTwoToneIcon' is defined but never used.","'useContext' is defined but never used.","'reviewBoardRedux' is assigned a value but never used.","'open' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchListData' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["839"],"'Google' is defined but never used.","'customization' is assigned a value but never used.","'googleHandler' is assigned a value but never used.","'userAuthContext' is assigned a value but never used.","'React' is defined but never used.","'theme' is assigned a value but never used.","'AuthPattern' is defined but never used.","'AuthPatternDark' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","'MaskedInput' is defined but never used.","'setCasePresentationForm' is defined but never used.","'dispatch' is assigned a value but never used.","'Button' is defined but never used.","'withFormik' is defined but never used.","'Yup' is defined but never used.","'FirebaseContext' is defined but never used.","'gridSpacing' is defined but never used.","'useSelector' is defined but never used.","'title' is missing in props validation","'setDocumentUUID' is missing in props validation","'fileType' is missing in props validation","'city' is assigned a value but never used.","'handleChangeCity' is assigned a value but never used.","'Country' is assigned a value but never used.","'handleSelectChange1' is assigned a value but never used.","'handleChangeState1' is assigned a value but never used.","'state1' is assigned a value but never used.","'setState1' is assigned a value but never used.","'CardContent' is defined but never used.","'SubCard' is defined but never used.","'event' is defined but never used.","'CasePresentationForm' is defined but never used.","'OrganizationResponsible' is defined but never used.","'connect' is defined but never used.","'referralDetails' is missing in props validation","'referralDetails' is defined but never used.","'setReferralDetail' is missing in props validation","'setReferralDetail' is defined but never used.","'AssessmentForms' is defined but never used.","'notification' is assigned a value but never used.","'setNotification' is assigned a value but never used.","'TypeOfClinicalInterventions' is defined but never used.","'FormControl' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'valueLabel' is assigned a value but never used.","'setValueLabel' is assigned a value but never used.","'Paper' is defined but never used.","'InputAdornment' is defined but never used.","'EmailTwoToneIcon' is defined but never used.","'name' is missing in props validation","'id' is missing in props validation","'formik' is missing in props validation","'label' is assigned a value but never used.","'formik.setFieldValue' is missing in props validation",[],["838"],[],[],[],[],"'UpgradePlanCard' is defined but never used.","'urls' is assigned a value but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'clientFormik' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","unexpected","'avatarImage' is assigned a value but never used.","padding-line-between-statements",{"desc":"840","fix":"841"},"Update the dependencies array to be: [fetchListData, user]",{"range":"842","text":"843"},[11550,11552],"[fetchListData, user]"]