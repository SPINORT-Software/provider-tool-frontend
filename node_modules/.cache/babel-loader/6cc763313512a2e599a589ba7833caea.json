{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/routes/MainRoutes.js\";\nimport React, { lazy } from 'react'; // project imports\n\nimport MainLayout from 'layout/MainLayout';\nimport Loadable from 'ui-component/Loadable';\nimport AuthGuard from 'utils/route-guard/AuthGuard';\nimport menuData from '../menu-items/json/menu-items.json';\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigurableForms = Loadable(_c2 = /*#__PURE__*/lazy(_c = () => import('views/configurable-forms')));\n/**\r\n * Fetch list of all menu items from API.\r\n * API data should contain all sections and their URLs.\r\n * No URL should be same.\r\n * Every URL should also contain section ID (User role entity data type ID)\r\n * Using UserRoleEntityDataType ID - attribute groups can be fetched to be displayed on their pages using ConfigurableComponent\r\n */\n// ===========================|| MAIN ROUTING ||=========================== //\n\n_c3 = ConfigurableForms;\nconst configurableUrl = [];\n\nconst makeConfigurableUrl = menuItem => {\n  menuItem.children.map(menuChildren => configurableUrl.push({\n    path: menuChildren.url,\n    element: /*#__PURE__*/_jsxDEV(ConfigurableForms, {\n      uuid: menuChildren.uuid,\n      title: menuChildren.formatted_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this)\n  }));\n};\n\nmenuData.roles['case-manager'].map(makeConfigurableUrl);\nconst AppChat = Loadable(_c5 = /*#__PURE__*/lazy(_c4 = () => import('views/chat')));\n_c6 = AppChat;\nconfigurableUrl.push({\n  path: 'chat',\n  element: /*#__PURE__*/_jsxDEV(AppChat, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this)\n});\nconst MainRoutes = {\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(AuthGuard, {\n    children: /*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this),\n  children: configurableUrl\n};\nexport default MainRoutes;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ConfigurableForms$Loadable$lazy\");\n$RefreshReg$(_c2, \"ConfigurableForms$Loadable\");\n$RefreshReg$(_c3, \"ConfigurableForms\");\n$RefreshReg$(_c4, \"AppChat$Loadable$lazy\");\n$RefreshReg$(_c5, \"AppChat$Loadable\");\n$RefreshReg$(_c6, \"AppChat\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/routes/MainRoutes.js"],"names":["React","lazy","MainLayout","Loadable","AuthGuard","menuData","FormattedMessage","ConfigurableForms","configurableUrl","makeConfigurableUrl","menuItem","children","map","menuChildren","push","path","url","element","uuid","formatted_title","roles","AppChat","MainRoutes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,gBAAR,QAA+B,YAA/B;;AAEA,MAAMC,iBAAiB,GAAGJ,QAAQ,oBAACF,IAAI,MAAC,MAAM,OAAO,0BAAP,CAAP,CAAL,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;MAVMM,iB;AAWN,MAAMC,eAAe,GAAG,EAAxB;;AAEA,MAAMC,mBAAmB,GAAGC,QAAQ,IAAI;AACpCA,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,GAAlB,CAAsBC,YAAY,IAC9BL,eAAe,CAACM,IAAhB,CAAqB;AACjBC,IAAAA,IAAI,EAAEF,YAAY,CAACG,GADF;AAEjBC,IAAAA,OAAO,eAAE,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEJ,YAAY,CAACK,IAAtC;AAA4C,MAAA,KAAK,EAAEL,YAAY,CAACM;AAAhE;AAAA;AAAA;AAAA;AAAA;AAFQ,GAArB,CADJ;AAMH,CAPD;;AAQAd,QAAQ,CAACe,KAAT,CAAe,cAAf,EAA+BR,GAA/B,CAAmCH,mBAAnC;AACA,MAAMY,OAAO,GAAGlB,QAAQ,oBAACF,IAAI,OAAC,MAAM,OAAO,YAAP,CAAP,CAAL,CAAxB;MAAMoB,O;AAENb,eAAe,CAACM,IAAhB,CAAqB;AACjBC,EAAAA,IAAI,EAAE,MADW;AAEjBE,EAAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFQ,CAArB;AAKA,MAAMK,UAAU,GAAG;AACfP,EAAAA,IAAI,EAAE,GADS;AAEfE,EAAAA,OAAO,eACH,QAAC,SAAD;AAAA,2BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHW;AAOfN,EAAAA,QAAQ,EAAEH;AAPK,CAAnB;AAUA,eAAec,UAAf","sourcesContent":["import React, { lazy } from 'react';\r\n\r\n// project imports\r\nimport MainLayout from 'layout/MainLayout';\r\nimport Loadable from 'ui-component/Loadable';\r\nimport AuthGuard from 'utils/route-guard/AuthGuard';\r\nimport menuData from '../menu-items/json/menu-items.json';\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nconst ConfigurableForms = Loadable(lazy(() => import('views/configurable-forms')));\r\n\r\n/**\r\n * Fetch list of all menu items from API.\r\n * API data should contain all sections and their URLs.\r\n * No URL should be same.\r\n * Every URL should also contain section ID (User role entity data type ID)\r\n * Using UserRoleEntityDataType ID - attribute groups can be fetched to be displayed on their pages using ConfigurableComponent\r\n */\r\n\r\n// ===========================|| MAIN ROUTING ||=========================== //\r\nconst configurableUrl = []\r\n\r\nconst makeConfigurableUrl = menuItem => {\r\n    menuItem.children.map(menuChildren =>\r\n        configurableUrl.push({\r\n            path: menuChildren.url,\r\n            element: <ConfigurableForms uuid={menuChildren.uuid} title={menuChildren.formatted_title} />\r\n        })\r\n    )\r\n}\r\nmenuData.roles['case-manager'].map(makeConfigurableUrl);\r\nconst AppChat = Loadable(lazy(() => import('views/chat')));\r\n\r\nconfigurableUrl.push({\r\n    path: 'chat',\r\n    element: <AppChat />\r\n})\r\n\r\nconst MainRoutes = {\r\n    path: '/',\r\n    element: (\r\n        <AuthGuard>\r\n            <MainLayout />\r\n        </AuthGuard>\r\n    ),\r\n    children: configurableUrl\r\n};\r\n\r\nexport default MainRoutes;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}