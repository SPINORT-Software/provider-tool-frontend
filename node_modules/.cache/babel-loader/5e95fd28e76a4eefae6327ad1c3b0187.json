{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/configurable-forms/ConfigurableForm.js\";\nimport * as React from 'react'; // material-ui\n\nimport { Checkbox, Divider, FormControlLabel, Grid, Typography, TextField } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as actions from 'store/actions';\nimport { fetchSectionAttributes } from \"store/actions\";\n/*\r\nThis component servers as a page content for any user section attribute group.\r\nAll the fields will be fetched under the attribute group and iterated to display in this component.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFieldByType = attributeItem => {\n  // eslint-disable-next-line camelcase\n  const {\n    frontend_input\n  } = attributeItem; // eslint-disable-next-line camelcase\n\n  switch (frontend_input) {\n    case 'input_textbox':\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: attributeItem.attribute_id,\n        name: attributeItem.attribute_code,\n        label: attributeItem.frontend_label,\n        fullWidth: true,\n        autoComplete: \"given-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n\n    case 'input_number':\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        required: true,\n        id: attributeItem.attribute_id,\n        name: attributeItem.attribute_code,\n        label: attributeItem.frontend_label,\n        fullWidth: true,\n        autoComplete: \"given-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n\n    case 'input_date':\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        required: true,\n        id: attributeItem.attribute_id,\n        name: attributeItem.attribute_code,\n        label: attributeItem.frontend_label,\n        fullWidth: true,\n        autoComplete: \"given-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: attributeItem.attribute_id,\n        name: attributeItem.attribute_code,\n        label: attributeItem.frontend_label,\n        fullWidth: true,\n        autoComplete: \"given-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n  }\n};\n\nconst makeFields = attributes => attributes.map(attributeItem => /*#__PURE__*/_jsxDEV(Grid, {\n  item: true,\n  xs: 10,\n  sm: 6,\n  lg: 12,\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      sm: 6,\n      lg: 5,\n      children: getFieldByType(attributeItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 5\n}, this));\n\nconst makeGroupFields = childAttributeGroups => Object.keys(childAttributeGroups).map(childGroupKey => {\n  // eslint-disable-next-line camelcase\n  const {\n    group_detail,\n    attributes\n  } = childAttributeGroups[childGroupKey];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    mb: 1,\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        sx: {\n          mb: 3\n        },\n        children: group_detail.attribute_group_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        alignItems: \"center\",\n        children: makeFields(attributes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n});\n\nconst makeElements = groupData => {\n  const {\n    childAttributeGroups,\n    defaultAttributes\n  } = groupData;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 12,\n      children: makeGroupFields(childAttributeGroups)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: makeFields(defaultAttributes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n* Component Function\r\n* */\n\n\nfunction ConfigurableForm({\n  sectionData,\n  groupData\n}) {\n  console.log(groupData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ConfigurableForm;\n\nconst mapStateToProps = state => ({\n  sectionData: state.sectionForm\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurableForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigurableForm\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/configurable-forms/ConfigurableForm.js"],"names":["React","Checkbox","Divider","FormControlLabel","Grid","Typography","TextField","connect","actions","fetchSectionAttributes","getFieldByType","attributeItem","frontend_input","attribute_id","attribute_code","frontend_label","makeFields","attributes","map","makeGroupFields","childAttributeGroups","Object","keys","childGroupKey","group_detail","mb","attribute_group_name","makeElements","groupData","defaultAttributes","ConfigurableForm","sectionData","console","log","mapStateToProps","state","sectionForm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\n// material-ui\r\nimport {Checkbox, Divider, FormControlLabel, Grid, Typography, TextField} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'store/actions';\r\nimport {fetchSectionAttributes} from \"store/actions\";\r\n\r\n\r\n/*\r\nThis component servers as a page content for any user section attribute group.\r\nAll the fields will be fetched under the attribute group and iterated to display in this component.\r\n */\r\nconst getFieldByType = (attributeItem) => {\r\n    // eslint-disable-next-line camelcase\r\n    const {frontend_input} = attributeItem;\r\n\r\n    // eslint-disable-next-line camelcase\r\n    switch(frontend_input){\r\n        case 'input_textbox':\r\n            return <TextField required id={attributeItem.attribute_id} name={attributeItem.attribute_code}\r\n                              label={attributeItem.frontend_label} fullWidth\r\n                              autoComplete=\"given-name\"/>\r\n\r\n        case 'input_number':\r\n            return <TextField type=\"number\" required id={attributeItem.attribute_id} name={attributeItem.attribute_code}\r\n                              label={attributeItem.frontend_label} fullWidth\r\n                              autoComplete=\"given-name\"/>\r\n\r\n        case 'input_date':\r\n            return <TextField type=\"number\" required id={attributeItem.attribute_id} name={attributeItem.attribute_code}\r\n                              label={attributeItem.frontend_label} fullWidth\r\n                              autoComplete=\"given-name\"/>\r\n        default:\r\n            return <TextField required id={attributeItem.attribute_id} name={attributeItem.attribute_code}\r\n                              label={attributeItem.frontend_label} fullWidth\r\n                              autoComplete=\"given-name\"/>\r\n    }\r\n}\r\n\r\nconst makeFields = (attributes) => attributes.map(attributeItem => (\r\n    <Grid item xs={10} sm={6} lg={12}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={10} sm={6} lg={5}>\r\n                {getFieldByType(attributeItem)}\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n))\r\n\r\nconst makeGroupFields = (childAttributeGroups) => Object.keys(childAttributeGroups).map(childGroupKey => {\r\n    // eslint-disable-next-line camelcase\r\n    const {group_detail, attributes} = childAttributeGroups[childGroupKey];\r\n\r\n    return (<Grid container mb={1} spacing={5}>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"h5\" component=\"div\" sx={{mb: 3}}>\r\n                {group_detail.attribute_group_name}\r\n            </Typography>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n                {makeFields(attributes)}\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Divider/>\r\n        </Grid>\r\n    </Grid>)\r\n})\r\n\r\n\r\nconst makeElements = (groupData) => {\r\n    const {childAttributeGroups, defaultAttributes} = groupData;\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} lg={12}>\r\n                {makeGroupFields(childAttributeGroups)}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} lg={12}>\r\n                <Grid container spacing={3}>\r\n                    {makeFields(defaultAttributes)}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n/*\r\n* Component Function\r\n* */\r\nfunction ConfigurableForm({sectionData, groupData}) {\r\n    console.log(groupData);\r\n    return <div>Content</div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    sectionData: state.sectionForm\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurableForm)\r\n"]},"metadata":{},"sourceType":"module"}