{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/configurable-forms/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core'; // project imports\n\nimport ConfigurableForm from './ConfigurableForm';\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { gridSpacing } from 'store/constant';\nimport * as actions from 'store/actions';\nimport { fetchSectionAttributes } from \"store/actions\";\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles'; // assets\n\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  profileTab: {\n    '& .MuiTabs-flexContainer': {\n      borderBottom: 'none'\n    },\n    '& button': {\n      color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n      minHeight: 'auto',\n      minWidth: '100%',\n      padding: '12px 16px',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    '& button.Mui-selected': {\n      color: theme.palette.primary.main,\n      background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n    },\n    '& button > svg': {\n      marginBottom: '0px !important',\n      marginRight: '10px',\n      marginTop: '10px',\n      height: '20px',\n      width: '20px'\n    },\n    '& button > div > span': {\n      display: 'block'\n    },\n    '& > div > span': {\n      display: 'none'\n    }\n  },\n  cardPanels: {\n    borderLeft: '1px solid',\n    borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\n    height: '100%'\n  }\n})); // tabs\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n} // tabs option\n\n\nconst tabsOption = [{\n  label: 'User Profile',\n  icon: /*#__PURE__*/_jsxDEV(PersonOutlineTwoToneIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 15\n  }, this),\n  caption: 'Profile Settings'\n}, {\n  label: 'Billing',\n  icon: /*#__PURE__*/_jsxDEV(DescriptionTwoToneIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 15\n  }, this),\n  caption: 'Billing Information'\n}, {\n  label: 'Payment',\n  icon: /*#__PURE__*/_jsxDEV(CreditCardTwoToneIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 15\n  }, this),\n  caption: 'Add & Update Card'\n}, {\n  label: 'Change Password',\n  icon: /*#__PURE__*/_jsxDEV(VpnKeyTwoToneIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 15\n  }, this),\n  caption: 'Update Profile Security'\n}]; // ===========================|| PROFILE 2 ||=========================== //\n\nconst ConfigurableForms = ({\n  uuid,\n  title,\n  sectionData\n}) => {\n  _s();\n\n  const sectionAttributeGroups = sectionData.sections[uuid].attribute_groups;\n  const classes = useStyles();\n  const customization = useSelector(state => state.customization);\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const processAttributeGroups = () => {\n    const steps = [];\n    const stepFields = [];\n    Object.entries(sectionAttributeGroups).map(attributeGroupItem => {\n      const attributeGroupCode = attributeGroupItem[0];\n      const attributeGroup = attributeGroupItem[1];\n      const title = attributeGroup.group_detail.attribute_group_name;\n      steps.push(title);\n      stepFields.push({\n        defaultAttributes: attributeGroup.default_attributes,\n        childAttributeGroups: attributeGroup.child_attribute_groups\n      });\n      return true;\n    });\n    return {\n      steps,\n      stepFields\n    };\n  };\n\n  const attributeStepsAndGroupData = processAttributeGroups(); // step options\n\n  const {\n    steps,\n    stepFields\n  } = attributeStepsAndGroupData;\n  console.log(stepFields);\n\n  function getStepContent(value) {\n    return /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: value,\n      children: [/*#__PURE__*/_jsxDEV(ConfigurableForm, {\n        groupData: stepFields[value]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(MainCard, {\n        title: title,\n        content: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: value,\n                onChange: handleChange,\n                orientation: \"vertical\",\n                className: classes.profileTab,\n                variant: \"scrollable\",\n                sx: {\n                  '& button': {\n                    borderRadius: `${customization.borderRadius}px`\n                  }\n                },\n                children: tabsOption.map((tab, index) => /*#__PURE__*/_jsxDEV(Tab, {\n                  icon: tab.icon,\n                  label: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"column\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      color: \"inherit\",\n                      children: tab.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"div\",\n                      variant: \"caption\",\n                      sx: {\n                        textTransform: 'capitalize'\n                      },\n                      children: tab.caption\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 49\n                  }, this),\n                  ...a11yProps(index)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardPanels,\n              children: getStepContent(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: value > 0 && /*#__PURE__*/_jsxDEV(AnimateButton, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"large\",\n                  onClick: e => handleChange(e, parseInt(value, 10) - 1),\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: value < 3 && /*#__PURE__*/_jsxDEV(AnimateButton, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"large\",\n                  onClick: e => handleChange(e, 1 + parseInt(value, 10)),\n                  children: \"Continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConfigurableForms, \"OcCcDBBj2zYFaNSY5WZYX1Sr3rQ=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c2 = ConfigurableForms;\n\nconst mapStateToProps = state => ({\n  sectionData: state.sectionForm\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurableForms);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ConfigurableForms\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/configurable-forms/index.js"],"names":["React","Button","CardActions","CardContent","Divider","Grid","Tab","Tabs","Typography","ConfigurableForm","MainCard","AnimateButton","gridSpacing","actions","fetchSectionAttributes","PropTypes","connect","useSelector","makeStyles","PersonOutlineTwoToneIcon","DescriptionTwoToneIcon","CreditCardTwoToneIcon","VpnKeyTwoToneIcon","useStyles","theme","profileTab","borderBottom","color","palette","mode","grey","minHeight","minWidth","padding","display","flexDirection","alignItems","textAlign","justifyContent","primary","main","background","dark","marginBottom","marginRight","marginTop","height","width","cardPanels","borderLeft","borderLeftColor","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","tabsOption","label","icon","caption","ConfigurableForms","uuid","title","sectionData","sectionAttributeGroups","sections","attribute_groups","classes","customization","state","setValue","useState","handleChange","event","newValue","processAttributeGroups","steps","stepFields","Object","entries","map","attributeGroupItem","attributeGroupCode","attributeGroup","group_detail","attribute_group_name","push","defaultAttributes","default_attributes","childAttributeGroups","child_attribute_groups","attributeStepsAndGroupData","console","log","getStepContent","borderRadius","tab","textTransform","e","parseInt","mapStateToProps","sectionForm","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoDC,IAApD,EAA0DC,GAA1D,EAA+DC,IAA/D,EAAqEC,UAArE,QAAuF,mBAAvF,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAAQC,sBAAR,QAAqC,eAArC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAoC,aAApC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAEA;;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,UAAU,EAAE;AACR,gCAA4B;AACxBC,MAAAA,YAAY,EAAE;AADU,KADpB;AAIR,gBAAY;AACRC,MAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCL,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAAhC,GAA0DN,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CADzD;AAERC,MAAAA,SAAS,EAAE,MAFH;AAGRC,MAAAA,QAAQ,EAAE,MAHF;AAIRC,MAAAA,OAAO,EAAE,WAJD;AAKRC,MAAAA,OAAO,EAAE,MALD;AAMRC,MAAAA,aAAa,EAAE,KANP;AAORC,MAAAA,UAAU,EAAE,YAPJ;AAQRC,MAAAA,SAAS,EAAE,MARH;AASRC,MAAAA,cAAc,EAAE;AATR,KAJJ;AAeR,6BAAyB;AACrBX,MAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcW,OAAd,CAAsBC,IADR;AAErBC,MAAAA,UAAU,EAAEjB,KAAK,CAACI,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgCL,KAAK,CAACI,OAAN,CAAcc,IAAd,CAAmBF,IAAnD,GAA0DhB,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmB,EAAnB;AAFjD,KAfjB;AAmBR,sBAAkB;AACda,MAAAA,YAAY,EAAE,gBADA;AAEdC,MAAAA,WAAW,EAAE,MAFC;AAGdC,MAAAA,SAAS,EAAE,MAHG;AAIdC,MAAAA,MAAM,EAAE,MAJM;AAKdC,MAAAA,KAAK,EAAE;AALO,KAnBV;AA0BR,6BAAyB;AACrBb,MAAAA,OAAO,EAAE;AADY,KA1BjB;AA6BR,sBAAkB;AACdA,MAAAA,OAAO,EAAE;AADK;AA7BV,GADyB;AAkCrCc,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,WADJ;AAERC,IAAAA,eAAe,EAAE1B,KAAK,CAACI,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC,SAAhC,GAA4C,SAFrD;AAGRiB,IAAAA,MAAM,EAAE;AAHA;AAlCyB,CAAZ,CAAD,CAA5B,C,CAyCA;;AACA,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACI;AAAK,IAAA,IAAI,EAAC,UAAV;AAAqB,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAAvC;AAA8C,IAAA,EAAE,EAAG,mBAAkBA,KAAM,EAA3E;AAA8E,uBAAkB,cAAaA,KAAM,EAAnH;AAAA,OAA0HC,KAA1H;AAAA,cACKF,KAAK,KAAKC,KAAV,iBAAmB;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA;AADxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KARQF,Q;AAUTA,QAAQ,CAACM,SAAT,GAAqB;AACjBJ,EAAAA,QAAQ,EAAEtC,SAAS,CAAC2C,IADH;AAEjBH,EAAAA,KAAK,EAAExC,SAAS,CAAC4C,GAAV,CAAcC,UAFJ;AAGjBN,EAAAA,KAAK,EAAEvC,SAAS,CAAC4C,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBN,KAAnB,EAA0B;AACtB,SAAO;AACHO,IAAAA,EAAE,EAAG,cAAaP,KAAM,EADrB;AAEH,qBAAkB,mBAAkBA,KAAM;AAFvC,GAAP;AAIH,C,CAED;;;AACA,MAAMQ,UAAU,GAAG,CACf;AACIC,EAAAA,KAAK,EAAE,cADX;AAEIC,EAAAA,IAAI,eAAE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,UAFV;AAGIC,EAAAA,OAAO,EAAE;AAHb,CADe,EAMf;AACIF,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,IAAI,eAAE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,UAFV;AAGIC,EAAAA,OAAO,EAAE;AAHb,CANe,EAWf;AACIF,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,IAAI,eAAE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,UAFV;AAGIC,EAAAA,OAAO,EAAE;AAHb,CAXe,EAgBf;AACIF,EAAAA,KAAK,EAAE,iBADX;AAEIC,EAAAA,IAAI,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAFV;AAGIC,EAAAA,OAAO,EAAE;AAHb,CAhBe,CAAnB,C,CAuBA;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAAgC;AAAA;;AACtD,QAAMC,sBAAsB,GAAGD,WAAW,CAACE,QAAZ,CAAqBJ,IAArB,EAA2BK,gBAA1D;AACA,QAAMC,OAAO,GAAGnD,SAAS,EAAzB;AACA,QAAMoD,aAAa,GAAG1D,WAAW,CAAE2D,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAM,CAACrB,KAAD,EAAQuB,QAAR,IAAoB7E,KAAK,CAAC8E,QAAN,CAAe,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,sBAAsB,GAAG,MAAM;AACjC,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,UAAU,GAAG,EAAnB;AAEAC,IAAAA,MAAM,CAACC,OAAP,CAAef,sBAAf,EAAuCgB,GAAvC,CAA2CC,kBAAkB,IAAI;AAC7D,YAAMC,kBAAkB,GAAGD,kBAAkB,CAAC,CAAD,CAA7C;AACA,YAAME,cAAc,GAAGF,kBAAkB,CAAC,CAAD,CAAzC;AAEA,YAAMnB,KAAK,GAAGqB,cAAc,CAACC,YAAf,CAA4BC,oBAA1C;AACAT,MAAAA,KAAK,CAACU,IAAN,CAAWxB,KAAX;AAEAe,MAAAA,UAAU,CAACS,IAAX,CAAgB;AACZC,QAAAA,iBAAiB,EAACJ,cAAc,CAACK,kBADrB;AAEZC,QAAAA,oBAAoB,EAACN,cAAc,CAACO;AAFxB,OAAhB;AAIA,aAAO,IAAP;AACH,KAZD;AAcA,WAAO;AAACd,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAP;AACH,GAnBD;;AAoBA,QAAMc,0BAA0B,GAAGhB,sBAAsB,EAAzD,CA9BsD,CAgCtD;;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBc,0BAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;;AAEA,WAASiB,cAAT,CAAwB/C,KAAxB,EAA+B;AAC3B,wBAAO,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAEA,KAA/B;AAAA,8BACH,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE8B,UAAU,CAAC9B,KAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,cADG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAGD,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE1C,WAAzB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEyD,KAAjB;AAAwB,QAAA,OAAO,EAAE,KAAjC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAEzD,WAAzB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACI,QAAC,WAAD;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,KAAK,EAAE0C,KADX;AAEI,gBAAA,QAAQ,EAAEyB,YAFd;AAGI,gBAAA,WAAW,EAAC,UAHhB;AAII,gBAAA,SAAS,EAAEL,OAAO,CAACjD,UAJvB;AAKI,gBAAA,OAAO,EAAC,YALZ;AAMI,gBAAA,EAAE,EAAE;AACA,8BAAY;AACR6E,oBAAAA,YAAY,EAAG,GAAE3B,aAAa,CAAC2B,YAAa;AADpC;AADZ,iBANR;AAAA,0BAYKvC,UAAU,CAACwB,GAAX,CAAe,CAACgB,GAAD,EAAMhD,KAAN,kBACZ,QAAC,GAAD;AAEI,kBAAA,IAAI,EAAEgD,GAAG,CAACtC,IAFd;AAGI,kBAAA,KAAK,eACD,QAAC,IAAD;AAAM,oBAAA,SAAS,MAAf;AAAgB,oBAAA,SAAS,EAAC,QAA1B;AAAA,4CACI,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,WAApB;AAAgC,sBAAA,KAAK,EAAC,SAAtC;AAAA,gCACKsC,GAAG,CAACvC;AADT;AAAA;AAAA;AAAA;AAAA,4BADJ,eAII,QAAC,UAAD;AAAY,sBAAA,SAAS,EAAC,KAAtB;AAA4B,sBAAA,OAAO,EAAC,SAApC;AAA8C,sBAAA,EAAE,EAAE;AAAEwC,wBAAAA,aAAa,EAAE;AAAjB,uBAAlD;AAAA,gCACKD,GAAG,CAACrC;AADT;AAAA;AAAA;AAAA;AAAA,4BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJR;AAAA,qBAaQL,SAAS,CAACN,KAAD;AAbjB,mBACSA,KADT;AAAA;AAAA;AAAA;AAAA,wBADH;AAZL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAmCI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,SAAS,EAAEmB,OAAO,CAAC1B,UAAhC;AAAA,wBACKqD,cAAc,CAAC/C,KAAD;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA2CI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA3CJ,eA4CI,QAAC,WAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,eAA/B;AAA+C,YAAA,OAAO,EAAE,CAAxD;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,wBACKA,KAAK,GAAG,CAAR,iBACG,QAAC,aAAD;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,UAAhB;AAA2B,kBAAA,IAAI,EAAC,OAAhC;AAAwC,kBAAA,OAAO,EAAGmD,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAIC,QAAQ,CAACpD,KAAD,EAAQ,EAAR,CAAR,GAAsB,CAA1B,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,oBADJ,eAUI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,wBACKA,KAAK,GAAG,CAAR,iBACG,QAAC,aAAD;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,IAAI,EAAC,OAAjC;AAAyC,kBAAA,OAAO,EAAGmD,CAAD,IAAO1B,YAAY,CAAC0B,CAAD,EAAI,IAAIC,QAAQ,CAACpD,KAAD,EAAQ,EAAR,CAAhB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyEH,CArHD;;GAAMa,iB;UAEc5C,S,EACMN,W;;;MAHpBkD,iB;;AAwHN,MAAMwC,eAAe,GAAG/B,KAAK,KAAK;AAC9BN,EAAAA,WAAW,EAAEM,KAAK,CAACgC;AADW,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAEA,eAAe9F,OAAO,CAAC2F,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1C,iBAA7C,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Button, CardActions, CardContent, Divider, Grid, Tab, Tabs, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport ConfigurableForm from './ConfigurableForm';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport {gridSpacing} from 'store/constant';\r\nimport * as actions from 'store/actions';\r\nimport {fetchSectionAttributes} from \"store/actions\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {connect, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// assets\r\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\r\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\r\nimport CreditCardTwoToneIcon from '@material-ui/icons/CreditCardTwoTone';\r\nimport VpnKeyTwoToneIcon from '@material-ui/icons/VpnKeyTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileTab: {\r\n        '& .MuiTabs-flexContainer': {\r\n            borderBottom: 'none'\r\n        },\r\n        '& button': {\r\n            color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\r\n            minHeight: 'auto',\r\n            minWidth: '100%',\r\n            padding: '12px 16px',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-start',\r\n            textAlign: 'left',\r\n            justifyContent: 'flex-start'\r\n        },\r\n        '& button.Mui-selected': {\r\n            color: theme.palette.primary.main,\r\n            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\r\n        },\r\n        '& button > svg': {\r\n            marginBottom: '0px !important',\r\n            marginRight: '10px',\r\n            marginTop: '10px',\r\n            height: '20px',\r\n            width: '20px'\r\n        },\r\n        '& button > div > span': {\r\n            display: 'block'\r\n        },\r\n        '& > div > span': {\r\n            display: 'none'\r\n        }\r\n    },\r\n    cardPanels: {\r\n        borderLeft: '1px solid',\r\n        borderLeftColor: theme.palette.mode === 'dark' ? '#333d5e' : '#eeeeee',\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\n// tabs\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n            {value === index && <div>{children}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\n// tabs option\r\nconst tabsOption = [\r\n    {\r\n        label: 'User Profile',\r\n        icon: <PersonOutlineTwoToneIcon />,\r\n        caption: 'Profile Settings'\r\n    },\r\n    {\r\n        label: 'Billing',\r\n        icon: <DescriptionTwoToneIcon />,\r\n        caption: 'Billing Information'\r\n    },\r\n    {\r\n        label: 'Payment',\r\n        icon: <CreditCardTwoToneIcon />,\r\n        caption: 'Add & Update Card'\r\n    },\r\n    {\r\n        label: 'Change Password',\r\n        icon: <VpnKeyTwoToneIcon />,\r\n        caption: 'Update Profile Security'\r\n    }\r\n];\r\n\r\n// ===========================|| PROFILE 2 ||=========================== //\r\n\r\nconst ConfigurableForms = ({uuid, title, sectionData}) => {\r\n    const sectionAttributeGroups = sectionData.sections[uuid].attribute_groups\r\n    const classes = useStyles();\r\n    const customization = useSelector((state) => state.customization);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const processAttributeGroups = () => {\r\n        const steps = []\r\n        const stepFields = []\r\n\r\n        Object.entries(sectionAttributeGroups).map(attributeGroupItem => {\r\n            const attributeGroupCode = attributeGroupItem[0]\r\n            const attributeGroup = attributeGroupItem[1]\r\n\r\n            const title = attributeGroup.group_detail.attribute_group_name;\r\n            steps.push(title)\r\n\r\n            stepFields.push({\r\n                defaultAttributes:attributeGroup.default_attributes,\r\n                childAttributeGroups:attributeGroup.child_attribute_groups\r\n            })\r\n            return true;\r\n        })\r\n\r\n        return {steps, stepFields}\r\n    }\r\n    const attributeStepsAndGroupData = processAttributeGroups();\r\n\r\n    // step options\r\n    const {steps, stepFields} = attributeStepsAndGroupData;\r\n\r\n    console.log(stepFields)\r\n\r\n    function getStepContent(value) {\r\n        return <TabPanel value={value} index={value}>\r\n            <ConfigurableForm groupData={stepFields[value]}/>;\r\n        </TabPanel>\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <MainCard title={title} content={false}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12} lg={4}>\r\n                            <CardContent>\r\n                                <Tabs\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    orientation=\"vertical\"\r\n                                    className={classes.profileTab}\r\n                                    variant=\"scrollable\"\r\n                                    sx={{\r\n                                        '& button': {\r\n                                            borderRadius: `${customization.borderRadius}px`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {tabsOption.map((tab, index) => (\r\n                                        <Tab\r\n                                            key={index}\r\n                                            icon={tab.icon}\r\n                                            label={\r\n                                                <Grid container direction=\"column\">\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        {tab.label}\r\n                                                    </Typography>\r\n                                                    <Typography component=\"div\" variant=\"caption\" sx={{ textTransform: 'capitalize' }}>\r\n                                                        {tab.caption}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            }\r\n                                            {...a11yProps(index)}\r\n                                        />\r\n                                    ))}\r\n                                </Tabs>\r\n                            </CardContent>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={8}>\r\n                            <CardContent className={classes.cardPanels}>\r\n                                {getStepContent(value)}\r\n\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <CardActions>\r\n                        <Grid container justifyContent=\"space-between\" spacing={0}>\r\n                            <Grid item>\r\n                                {value > 0 && (\r\n                                    <AnimateButton>\r\n                                        <Button variant=\"outlined\" size=\"large\" onClick={(e) => handleChange(e, parseInt(value, 10) - 1)}>\r\n                                            Back\r\n                                        </Button>\r\n                                    </AnimateButton>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {value < 3 && (\r\n                                    <AnimateButton>\r\n                                        <Button variant=\"contained\" size=\"large\" onClick={(e) => handleChange(e, 1 + parseInt(value, 10))}>\r\n                                            Continue\r\n                                        </Button>\r\n                                    </AnimateButton>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </MainCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    sectionData: state.sectionForm\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurableForms)\r\n"]},"metadata":{},"sourceType":"module"}