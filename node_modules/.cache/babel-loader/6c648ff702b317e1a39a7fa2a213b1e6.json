{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/roles/review-board/referral/forms/client-detail.js\";\nimport React from 'react'; // material-ui\n\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core'; // project imports\n\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as dashboardActions from 'store/actions/dashboardActions'; // const validationSchema = Yup.object({\n//     referral_client_email: Yup\n//         .string('Enter your email')\n//         .email('Enter a valid email')\n//         .required('Email is required')\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientDetail = ({\n  clientFormik\n}) => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  spacing: gridSpacing,\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    md: 12,\n    children: /*#__PURE__*/_jsxDEV(SubCard, {\n      title: \"Client Details\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            sm: 10,\n            lg: 10,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 8,\n                lg: 6,\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"referral_client_first_name\",\n                  id: \"referral_client_first_name\",\n                  fullWidth: true,\n                  label: \"First Name\",\n                  value: clientFormik.values.referral_client_first_name,\n                  onChange: clientFormik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 8,\n                lg: 6,\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"referral_client_last_name\",\n                  fullWidth: true,\n                  label: \"Last Name\",\n                  value: clientFormik.values.referral_client_last_name,\n                  onChange: clientFormik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            sm: 8,\n            lg: 8,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                lg: 8,\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"referral_client_email\",\n                  fullWidth: true,\n                  label: \"Email\",\n                  value: clientFormik.values.referral_client_email,\n                  onChange: clientFormik.handleChange,\n                  error: clientFormik.touched.email && Boolean(clientFormik.errors.email)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            sm: 8,\n            lg: 8,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                lg: 8,\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 44\n}, this);\n\n_c = ClientDetail;\nconst formikEnhancer = withFormik({\n  validationSchema: Yup.object().shape({\n    userId: Yup.string().required('User ID is required.'),\n    userPassword: Yup.string().required('Password is required.')\n  }),\n  handleSubmit: (payload, {\n    props,\n    setSubmitting\n  }) => {\n    console.log(\"OK line 87\"); // props.loginUser(payload);\n    // setSubmitting(false);\n  },\n  displayName: 'LoginForm'\n})(ClientDetail);\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ ...dashboardActions\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formikEnhancer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientDetail\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/roles/review-board/referral/forms/client-detail.js"],"names":["React","CardContent","Checkbox","FormControlLabel","Grid","MenuItem","TextField","gridSpacing","SubCard","MaskedInput","withFormik","Yup","bindActionCreators","connect","dashboardActions","ClientDetail","clientFormik","values","referral_client_first_name","handleChange","referral_client_last_name","referral_client_email","touched","email","Boolean","errors","formikEnhancer","validationSchema","object","shape","userId","string","required","userPassword","handleSubmit","payload","props","setSubmitting","console","log","displayName","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n// material-ui\nimport { CardContent, Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\nimport SubCard from 'ui-component/cards/SubCard';\nimport MaskedInput from 'react-text-mask';\n\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as dashboardActions from 'store/actions/dashboardActions';\n// const validationSchema = Yup.object({\n//     referral_client_email: Yup\n//         .string('Enter your email')\n//         .email('Enter a valid email')\n//         .required('Email is required')\n// });\n\n\nconst ClientDetail = ({ clientFormik }) => <Grid container spacing={gridSpacing}>\n        <Grid item xs={12} sm={12} lg={12} md={12}>\n            <SubCard title='Client Details'>\n                <CardContent>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={8} sm={10} lg={10} md={10}>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={6} sm={8} lg={6} md={8}>\n                                    <TextField name='referral_client_first_name' id='referral_client_first_name'\n                                               fullWidth label='First Name'\n                                               value={clientFormik.values.referral_client_first_name}\n                                               onChange={clientFormik.handleChange} />\n                                </Grid>\n                                <Grid item xs={6} sm={8} lg={6} md={8}>\n                                    <TextField name='referral_client_last_name' fullWidth label='Last Name'\n                                               value={clientFormik.values.referral_client_last_name}\n                                               onChange={clientFormik.handleChange} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={8} sm={8} lg={8} md={8}>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={8} md={8}>\n                                    <TextField name='referral_client_email' fullWidth label='Email'\n                                               value={clientFormik.values.referral_client_email}\n                                               onChange={clientFormik.handleChange}\n                                               error={clientFormik.touched.email && Boolean(clientFormik.errors.email)} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n\n                        <Grid item xs={8} sm={8} lg={8} md={8}>\n                            <Grid container spacing={gridSpacing}>\n                                <Grid item xs={12} sm={12} lg={8} md={8}>\n\n                                    <button type='submit'>\n                                        Submit\n                                    </button>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </CardContent>\n            </SubCard>\n        </Grid>\n    </Grid>\n;\n\nconst formikEnhancer = withFormik({\n    validationSchema: Yup.object().shape({\n        userId: Yup.string()\n            .required('User ID is required.'),\n        userPassword: Yup.string()\n            .required('Password is required.')\n    }),\n    handleSubmit: (payload, { props, setSubmitting }) => {\n        console.log(\"OK line 87\");\n        // props.loginUser(payload);\n        // setSubmitting(false);\n    },\n    displayName: 'LoginForm',\n})(ClientDetail);\n\nfunction mapStateToProps(state) {\n    return {...state};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        ...dashboardActions,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formikEnhancer);\n"]},"metadata":{},"sourceType":"module"}