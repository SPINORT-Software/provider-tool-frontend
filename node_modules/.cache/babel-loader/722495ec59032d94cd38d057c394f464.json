{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/roles/case-manager/daily-workload/forms/daily-workload-form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core'; // project imports\n\nimport { gridSpacing } from 'store/constant'; // select options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [{\n  value: '1',\n  label: 'Los Angeles'\n}, {\n  value: '2',\n  label: 'Chicago'\n}, {\n  value: '3',\n  label: 'Phoenix'\n}, {\n  value: '4',\n  label: 'San Antonio'\n}];\nconst countries = [{\n  value: '1',\n  label: 'India'\n}, {\n  value: '2',\n  label: 'France'\n}, {\n  value: '3',\n  label: 'USA'\n}, {\n  value: '4',\n  label: 'UAE'\n}];\n\nconst ClientCaseload = () => {\n  _s();\n\n  const [city, setCity] = React.useState('1');\n\n  const handleChangeCity = event => {\n    setCity(event.target.value);\n  };\n\n  const [Country, setCountry] = React.useState('1');\n\n  const handleSelectChange1 = event => {\n    setCountry(event.target.value);\n  };\n\n  const [state1, setState1] = React.useState({\n    checkedA: true\n  });\n\n  const handleChangeState1 = event => {\n    setState1({ ...state1,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Block No#\",\n        defaultValue: \"16657\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Apartment Name\",\n        defaultValue: \" Dardan Ranch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Street Line 1\",\n        defaultValue: \"Nathaniel Ports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Street Line 2\",\n        defaultValue: \"nr. Oran Walks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Postcode\",\n        defaultValue: \"395005\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-select-category\",\n        select: true,\n        label: \"Select City\",\n        value: city,\n        fullWidth: true,\n        onChange: handleChangeCity,\n        children: cities.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-select-country\",\n        select: true,\n        label: \"Select Country\",\n        value: Country,\n        fullWidth: true,\n        onChange: handleSelectChange1,\n        children: countries.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: state1.checkedA,\n          onChange: handleChangeState1,\n          name: \"checkedA\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this),\n        label: \"Same as billing address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClientCaseload, \"lCQfT49PCz9euSdD1eL71+ShO3s=\");\n\n_c = ClientCaseload;\nexport default ClientCaseload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCaseload\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/roles/case-manager/daily-workload/forms/daily-workload-form.js"],"names":["React","Checkbox","FormControlLabel","Grid","MenuItem","TextField","gridSpacing","cities","value","label","countries","ClientCaseload","city","setCity","useState","handleChangeCity","event","target","Country","setCountry","handleSelectChange1","state1","setState1","checkedA","handleChangeState1","name","checked","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// material-ui\nimport { Checkbox, FormControlLabel, Grid, MenuItem, TextField } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// select options\nconst cities = [\n    {\n        value: '1',\n        label: 'Los Angeles'\n    },\n    {\n        value: '2',\n        label: 'Chicago'\n    },\n    {\n        value: '3',\n        label: 'Phoenix'\n    },\n    {\n        value: '4',\n        label: 'San Antonio'\n    }\n];\n\nconst countries = [\n    {\n        value: '1',\n        label: 'India'\n    },\n    {\n        value: '2',\n        label: 'France'\n    },\n    {\n        value: '3',\n        label: 'USA'\n    },\n    {\n        value: '4',\n        label: 'UAE'\n    }\n];\n\n\nconst ClientCaseload = () => {\n    const [city, setCity] = React.useState('1');\n    const handleChangeCity = (event) => {\n        setCity(event.target.value);\n    };\n\n    const [Country, setCountry] = React.useState('1');\n    const handleSelectChange1 = (event) => {\n        setCountry(event.target.value);\n    };\n\n    const [state1, setState1] = React.useState({\n        checkedA: true\n    });\n    const handleChangeState1 = (event) => {\n        setState1({ ...state1, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth label=\"Block No#\" defaultValue=\"16657\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth label=\"Apartment Name\" defaultValue=\" Dardan Ranch\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth label=\"Street Line 1\" defaultValue=\"Nathaniel Ports\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth label=\"Street Line 2\" defaultValue=\"nr. Oran Walks\" />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField fullWidth label=\"Postcode\" defaultValue=\"395005\" />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField id=\"standard-select-category\" select label=\"Select City\" value={city} fullWidth onChange={handleChangeCity}>\n                    {cities.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField\n                    id=\"standard-select-country\"\n                    select\n                    label=\"Select Country\"\n                    value={Country}\n                    fullWidth\n                    onChange={handleSelectChange1}\n                >\n                    {countries.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={12}>\n                <FormControlLabel\n                    control={<Checkbox checked={state1.checkedA} onChange={handleChangeState1} name=\"checkedA\" color=\"primary\" />}\n                    label=\"Same as billing address\"\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ClientCaseload;\n"]},"metadata":{},"sourceType":"module"}