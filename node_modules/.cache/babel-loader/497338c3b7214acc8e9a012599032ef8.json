{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/firebase-forms/FirebaseForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@material-ui/core'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginInput: { ...theme.typography.customInput\n  }\n})); // ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\n\nconst FirebaseForgotPassword = ({ ...others\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const scriptedRef = useScriptRef();\n  const {\n    firebaseEmailPasswordSignIn\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: 'info@codedthemes.com',\n      password: '123456',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await firebaseEmailPasswordSignIn(values.email, values.password);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...others,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.email && errors.email),\n        className: classes.loginInput,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-email-forgot\",\n          children: \"Email Address / Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-email-forgot\",\n          type: \"email\",\n          value: values.email,\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          label: \"Email Address / Username\",\n          inputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-email-forgot\",\n          children: [' ', errors.email, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Send Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FirebaseForgotPassword, \"VfT7VR9tDTuCRt3SmakJk/GN12g=\", false, function () {\n  return [useStyles, useScriptRef, useAuth];\n});\n\n_c = FirebaseForgotPassword;\nexport default FirebaseForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseForgotPassword\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/firebase-forms/FirebaseForgotPassword.js"],"names":["React","makeStyles","Box","Button","FormControl","FormHelperText","InputLabel","OutlinedInput","Yup","Formik","AnimateButton","useAuth","useScriptRef","useStyles","theme","loginInput","typography","customInput","FirebaseForgotPassword","others","classes","scriptedRef","firebaseEmailPasswordSignIn","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","notchedOutline","mt"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\r\n\r\nconst FirebaseForgotPassword = ({ ...others }) => {\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const { firebaseEmailPasswordSignIn } = useAuth();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: 'info@codedthemes.com',\r\n                password: '123456',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-forgot\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            label=\"Email Address / Username\"\r\n                            inputProps={{\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {' '}\r\n                                {errors.email}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {errors.submit && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 3\r\n                            }}\r\n                        >\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n\r\n                    <Box\r\n                        sx={{\r\n                            mt: 2\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n                            <Button\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Send Mail\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default FirebaseForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}