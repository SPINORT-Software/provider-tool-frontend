{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/login/JWTLogin.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@material-ui/core'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef'; // assets\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginInput: { ...theme.typography.customInput\n  }\n})); // ===============================|| JWT LOGIN ||=============================== //\n\nconst JWTLogin = ({\n  loginIndex,\n  ...others\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    login\n  } = useAuth();\n  const scriptedRef = useScriptRef();\n  const [checked, setChecked] = React.useState(true);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: 'info@codedthemes.com',\n      password: '123456',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await login(values.email, values.password);\n\n        if (scriptedRef.current) {\n          console.log(\"OK\");\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.log(\"ERROR\");\n        console.error(err);\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...others,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.email && errors.email),\n        className: classes.loginInput,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-email-login\",\n          children: \"Email Address / Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-email-login\",\n          type: \"email\",\n          value: values.email,\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          inputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-email-login\",\n          children: [' ', errors.email, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        error: Boolean(touched.password && errors.password),\n        className: classes.loginInput,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-password-login\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-password-login\",\n          type: showPassword ? 'text' : 'password',\n          value: values.password,\n          name: \"password\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 57\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this),\n          inputProps: {\n            classes: {\n              notchedOutline: classes.notchedOutline\n            }\n          },\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-password-login\",\n          children: [' ', errors.password, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked,\n              onChange: event => setChecked(event.target.checked),\n              name: \"checked\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this),\n            label: \"Keep me logged in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: Link,\n            to: loginIndex ? `/pages/forgot-password/forgot-password${loginIndex}` : '/pages/forgot-password/forgot-password1',\n            color: \"secondary\",\n            sx: {\n              textDecoration: 'none'\n            },\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JWTLogin, \"bBHhl/SCxAQ5KM4Wfj6V2OgEH/k=\", false, function () {\n  return [useStyles, useAuth, useScriptRef];\n});\n\n_c = JWTLogin;\nJWTLogin.propTypes = {\n  loginIndex: PropTypes.number\n};\nexport default JWTLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"JWTLogin\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/login/JWTLogin.js"],"names":["PropTypes","React","Link","makeStyles","Box","Button","Checkbox","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Typography","Yup","Formik","AnimateButton","useAuth","useScriptRef","Visibility","VisibilityOff","useStyles","theme","loginInput","typography","customInput","JWTLogin","loginIndex","others","classes","login","scriptedRef","checked","setChecked","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","console","log","success","err","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","notchedOutline","target","textDecoration","mt","propTypes","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ===============================|| JWT LOGIN ||=============================== //\r\n\r\nconst JWTLogin = ({ loginIndex, ...others }) => {\r\n    const classes = useStyles();\r\n    const { login } = useAuth();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: 'info@codedthemes.com',\r\n                password: '123456',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await login(values.email, values.password);\r\n\r\n                    if (scriptedRef.current) {\r\n\r\n                        console.log(\"OK\");\r\n\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.log(\"ERROR\");\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-login\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {' '}\r\n                                {errors.email}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-login\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            label=\"Password\"\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {' '}\r\n                                {errors.password}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Keep me logged in\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={\r\n                                    loginIndex\r\n                                        ? `/pages/forgot-password/forgot-password${loginIndex}`\r\n                                        : '/pages/forgot-password/forgot-password1'\r\n                                }\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {errors.submit && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 3\r\n                            }}\r\n                        >\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box\r\n                        sx={{\r\n                            mt: 2\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n                            <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                                Sign In\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nJWTLogin.propTypes = {\r\n    loginIndex: PropTypes.number\r\n};\r\n\r\nexport default JWTLogin;\r\n"]},"metadata":{},"sourceType":"module"}