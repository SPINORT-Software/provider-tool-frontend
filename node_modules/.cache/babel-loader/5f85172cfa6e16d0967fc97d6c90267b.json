{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/contexts/JWTContext.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { createContext, useEffect, useReducer } from 'react'; // third-party\n\nimport jwtDecode from 'jwt-decode'; // reducer - state management\n\nimport { ACCOUNT_INITIALIZE, LOGIN, LOGOUT } from 'store/actionTypes';\nimport accountReducer from 'store/reducers/accountReducer'; // project imports\n\nimport axios from 'utils/axios';\nimport Loader from 'ui-component/Loader'; // constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoggedIn: false,\n  isInitialized: false,\n  user: null\n};\n\nconst verifyToken = serviceToken => {\n  if (!serviceToken) {\n    return false;\n  }\n\n  const decoded = jwtDecode(serviceToken);\n  return decoded.exp > Date.now() / 1000;\n};\n\nconst setSession = serviceToken => {\n  if (serviceToken) {\n    localStorage.setItem('serviceToken', serviceToken);\n    axios.defaults.headers.common.Authorization = `Bearer ${serviceToken}`;\n  } else {\n    localStorage.removeItem('serviceToken');\n    delete axios.defaults.headers.common.Authorization;\n  }\n}; // ===========================|| JWT CONTEXT & PROVIDER ||=========================== //\n\n\nconst JWTContext = /*#__PURE__*/createContext({ ...initialState,\n  login: () => Promise.resolve(),\n  logout: () => {}\n});\nexport const JWTProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(accountReducer, initialState);\n\n  const login = async (email, password) => {\n    const loginFormData = new FormData();\n    loginFormData.append('username', \"admin\");\n    loginFormData.append('password', \"admin123\");\n    const response = await axios.post('/token-auth/');\n    const {\n      token,\n      user\n    } = response.data;\n    const rawResponse = await fetch('http://127.0.0.1:8000/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'admin',\n        password: 'admin123'\n      })\n    }); // const content = await rawResponse.json()\n    //\n    // const { token, user } = {\n    //     \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNjMzNTI2ODE1LCJlbWFpbCI6ImNoaXR0YS5zaGFyYW5AZ21haWwuY29tIn0.eBMX6JYRr6Mbu6AlakBakA0DPI3pM1TpxLuKEvYEzIA\",\n    //     \"user\": {\n    //         \"username\": \"admin\"\n    //     }\n    // };\n\n    setSession(token);\n    dispatch({\n      type: LOGIN,\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = () => {\n    setSession(null);\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const serviceToken = window.localStorage.getItem('serviceToken');\n\n        if (serviceToken && verifyToken(serviceToken)) {\n          setSession(serviceToken);\n          const response = await axios.get('/api/account/me');\n          const {\n            user\n          } = response.data;\n          dispatch({\n            type: ACCOUNT_INITIALIZE,\n            payload: {\n              isLoggedIn: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: ACCOUNT_INITIALIZE,\n            payload: {\n              isLoggedIn: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: ACCOUNT_INITIALIZE,\n          payload: {\n            isLoggedIn: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    init();\n  }, []);\n\n  if (!state.isInitialized) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(JWTContext.Provider, {\n    value: { ...state,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 12\n  }, this);\n};\n\n_s(JWTProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = JWTProvider;\nJWTProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default JWTContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"JWTProvider\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/contexts/JWTContext.js"],"names":["PropTypes","React","createContext","useEffect","useReducer","jwtDecode","ACCOUNT_INITIALIZE","LOGIN","LOGOUT","accountReducer","axios","Loader","initialState","isLoggedIn","isInitialized","user","verifyToken","serviceToken","decoded","exp","Date","now","setSession","localStorage","setItem","defaults","headers","common","Authorization","removeItem","JWTContext","login","Promise","resolve","logout","JWTProvider","children","state","dispatch","email","password","loginFormData","FormData","append","response","post","token","data","rawResponse","fetch","method","body","JSON","stringify","username","type","payload","init","window","getItem","get","err","console","error","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,kBAAT,EAA6BC,KAA7B,EAAoCC,MAApC,QAAkD,mBAAlD;AACA,OAAOC,cAAP,MAA2B,+BAA3B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,MAAMC,WAAW,GAAIC,YAAD,IAAkB;AAClC,MAAI,CAACA,YAAL,EAAmB;AACf,WAAO,KAAP;AACH;;AACD,QAAMC,OAAO,GAAGb,SAAS,CAACY,YAAD,CAAzB;AACA,SAAOC,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAa,IAAlC;AACH,CAND;;AAQA,MAAMC,UAAU,GAAIL,YAAD,IAAkB;AAEjC,MAAIA,YAAJ,EAAkB;AACdM,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCP,YAArC;AACAP,IAAAA,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASX,YAAa,EAArE;AACH,GAHD,MAGO;AACHM,IAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB;AACA,WAAOnB,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAArC;AACH;AACJ,CATD,C,CAWA;;;AAEA,MAAME,UAAU,gBAAG5B,aAAa,CAAC,EAC7B,GAAGU,YAD0B;AAE7BmB,EAAAA,KAAK,EAAE,MAAMC,OAAO,CAACC,OAAR,EAFgB;AAG7BC,EAAAA,MAAM,EAAE,MAAM,CACb;AAJ4B,CAAD,CAAhC;AAOA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlC,UAAU,CAACK,cAAD,EAAiBG,YAAjB,CAApC;;AAEA,QAAMmB,KAAK,GAAG,OAAOQ,KAAP,EAAcC,QAAd,KAA2B;AACrC,UAAMC,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACAD,IAAAA,aAAa,CAACE,MAAd,CAAqB,UAArB,EAAiC,OAAjC;AACAF,IAAAA,aAAa,CAACE,MAAd,CAAqB,UAArB,EAAiC,UAAjC;AAEA,UAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,IAAN,CAAW,cAAX,CAAvB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAAS/B,MAAAA;AAAT,QAAkB6B,QAAQ,CAACG,IAAjC;AAEA,UAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjExB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFwD;AAMjEyB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,QAAQ,EAAE,OAAX;AAAoBd,QAAAA,QAAQ,EAAE;AAA9B,OAAf;AAN2D,KAAtC,CAA/B,CARqC,CAgBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlB,IAAAA,UAAU,CAACwB,KAAD,CAAV;AACAR,IAAAA,QAAQ,CAAC;AACLiB,MAAAA,IAAI,EAAEhD,KADD;AAELiD,MAAAA,OAAO,EAAE;AACLzC,QAAAA;AADK;AAFJ,KAAD,CAAR;AAMH,GA/BD;;AAiCA,QAAMmB,MAAM,GAAG,MAAM;AACjBZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAgB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE/C;AAAR,KAAD,CAAR;AACH,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsD,IAAI,GAAG,YAAY;AACrB,UAAI;AACA,cAAMxC,YAAY,GAAGyC,MAAM,CAACnC,YAAP,CAAoBoC,OAApB,CAA4B,cAA5B,CAArB;;AACA,YAAI1C,YAAY,IAAID,WAAW,CAACC,YAAD,CAA/B,EAA+C;AAC3CK,UAAAA,UAAU,CAACL,YAAD,CAAV;AACA,gBAAM2B,QAAQ,GAAG,MAAMlC,KAAK,CAACkD,GAAN,CAAU,iBAAV,CAAvB;AACA,gBAAM;AAAE7C,YAAAA;AAAF,cAAW6B,QAAQ,CAACG,IAA1B;AACAT,UAAAA,QAAQ,CAAC;AACLiB,YAAAA,IAAI,EAAEjD,kBADD;AAELkD,YAAAA,OAAO,EAAE;AACL3C,cAAAA,UAAU,EAAE,IADP;AAELE,cAAAA;AAFK;AAFJ,WAAD,CAAR;AAOH,SAXD,MAWO;AACHuB,UAAAA,QAAQ,CAAC;AACLiB,YAAAA,IAAI,EAAEjD,kBADD;AAELkD,YAAAA,OAAO,EAAE;AACL3C,cAAAA,UAAU,EAAE,KADP;AAELE,cAAAA,IAAI,EAAE;AAFD;AAFJ,WAAD,CAAR;AAOH;AACJ,OAtBD,CAsBE,OAAO8C,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAvB,QAAAA,QAAQ,CAAC;AACLiB,UAAAA,IAAI,EAAEjD,kBADD;AAELkD,UAAAA,OAAO,EAAE;AACL3C,YAAAA,UAAU,EAAE,KADP;AAELE,YAAAA,IAAI,EAAE;AAFD;AAFJ,SAAD,CAAR;AAOH;AACJ,KAjCD;;AAmCA0C,IAAAA,IAAI;AACP,GArCQ,EAqCN,EArCM,CAAT;;AAuCA,MAAI,CAACpB,KAAK,CAACvB,aAAX,EAA0B;AACtB,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,EAAE,GAAGuB,KAAL;AAAYN,MAAAA,KAAZ;AAAmBG,MAAAA;AAAnB,KAA5B;AAAA,cAA0DE;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArFM;;GAAMD,W;;KAAAA,W;AAuFbA,WAAW,CAAC6B,SAAZ,GAAwB;AACpB5B,EAAAA,QAAQ,EAAEpC,SAAS,CAACiE,IAAV,CAAeC;AADL,CAAxB;AAIA,eAAepC,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { createContext, useEffect, useReducer } from 'react';\r\n\r\n// third-party\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n// reducer - state management\r\nimport { ACCOUNT_INITIALIZE, LOGIN, LOGOUT } from 'store/actionTypes';\r\nimport accountReducer from 'store/reducers/accountReducer';\r\n\r\n// project imports\r\nimport axios from 'utils/axios';\r\nimport Loader from 'ui-component/Loader';\r\n\r\n// constant\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    user: null\r\n};\r\n\r\nconst verifyToken = (serviceToken) => {\r\n    if (!serviceToken) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(serviceToken);\r\n    return decoded.exp > Date.now() / 1000;\r\n};\r\n\r\nconst setSession = (serviceToken) => {\r\n\r\n    if (serviceToken) {\r\n        localStorage.setItem('serviceToken', serviceToken);\r\n        axios.defaults.headers.common.Authorization = `Bearer ${serviceToken}`;\r\n    } else {\r\n        localStorage.removeItem('serviceToken');\r\n        delete axios.defaults.headers.common.Authorization;\r\n    }\r\n};\r\n\r\n// ===========================|| JWT CONTEXT & PROVIDER ||=========================== //\r\n\r\nconst JWTContext = createContext({\r\n    ...initialState,\r\n    login: () => Promise.resolve(),\r\n    logout: () => {\r\n    }\r\n});\r\n\r\nexport const JWTProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(accountReducer, initialState);\r\n\r\n    const login = async (email, password) => {\r\n        const loginFormData = new FormData();\r\n        loginFormData.append('username', \"admin\");\r\n        loginFormData.append('password', \"admin123\");\r\n\r\n        const response = await axios.post('/token-auth/');\r\n        const { token, user } = response.data;\r\n\r\n        const rawResponse = await fetch('http://127.0.0.1:8000/token-auth/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username: 'admin', password: 'admin123'})\r\n        });\r\n        // const content = await rawResponse.json()\r\n        //\r\n        // const { token, user } = {\r\n        //     \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNjMzNTI2ODE1LCJlbWFpbCI6ImNoaXR0YS5zaGFyYW5AZ21haWwuY29tIn0.eBMX6JYRr6Mbu6AlakBakA0DPI3pM1TpxLuKEvYEzIA\",\r\n        //     \"user\": {\r\n        //         \"username\": \"admin\"\r\n        //     }\r\n        // };\r\n        setSession(token);\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: {\r\n                user\r\n            }\r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        setSession(null);\r\n        dispatch({ type: LOGOUT });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                const serviceToken = window.localStorage.getItem('serviceToken');\r\n                if (serviceToken && verifyToken(serviceToken)) {\r\n                    setSession(serviceToken);\r\n                    const response = await axios.get('/api/account/me');\r\n                    const { user } = response.data;\r\n                    dispatch({\r\n                        type: ACCOUNT_INITIALIZE,\r\n                        payload: {\r\n                            isLoggedIn: true,\r\n                            user\r\n                        }\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: ACCOUNT_INITIALIZE,\r\n                        payload: {\r\n                            isLoggedIn: false,\r\n                            user: null\r\n                        }\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.error(err);\r\n                dispatch({\r\n                    type: ACCOUNT_INITIALIZE,\r\n                    payload: {\r\n                        isLoggedIn: false,\r\n                        user: null\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        init();\r\n    }, []);\r\n\r\n    if (!state.isInitialized) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return <JWTContext.Provider value={{ ...state, login, logout }}>{children}</JWTContext.Provider>;\r\n};\r\n\r\nJWTProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default JWTContext;\r\n"]},"metadata":{},"sourceType":"module"}