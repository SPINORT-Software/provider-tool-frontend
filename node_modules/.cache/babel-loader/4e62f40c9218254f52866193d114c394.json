{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/login/FirebaseLogin.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Stack, Typography } from '@material-ui/core'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // assets\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Google from \"assets/images/icons/social-google.svg\"; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  redButton: {\n    fontSize: '1rem',\n    fontWeight: 500,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n    border: '1px solid',\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\n    color: theme.palette.grey[700],\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.875rem'\n    }\n  },\n  signDivider: {\n    flexGrow: 1\n  },\n  signText: {\n    cursor: 'unset',\n    margin: theme.spacing(2),\n    padding: '5px 56px',\n    borderColor: theme.palette.mode === 'dark' ? `${theme.palette.dark.light + 20} !important` : `${theme.palette.grey[100]} !important`,\n    color: `${theme.palette.grey[900]} !important`,\n    fontWeight: 500\n  },\n  loginIcon: {\n    marginRight: '16px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: '8px'\n    }\n  },\n  loginInput: { ...theme.typography.customInput\n  }\n})); // ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({\n  loginIndex,\n  ...others\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const customization = useSelector(state => state.customization);\n  const scriptedRef = useScriptRef();\n  const [checked, setChecked] = React.useState(true);\n  const {\n    firebaseEmailPasswordSignIn,\n    firebaseGoogleSignIn\n  } = useAuth();\n\n  const googleHandler = async () => {\n    try {\n      await firebaseGoogleSignIn();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Sign in with Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'test-1-case-mgr@ccc.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await firebaseEmailPasswordSignIn(values.email, values.password);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        ...others,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.email && errors.email),\n          className: classes.loginInput,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-email-login\",\n            children: \"Email Address / Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-email-login\",\n            type: \"email\",\n            value: values.email,\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            label: \"Email Address / Username\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: [' ', errors.email, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.password && errors.password),\n          className: classes.loginInput,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password-login\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password-login\",\n            type: showPassword ? 'text' : 'password',\n            value: values.password,\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 61\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 78\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this),\n            label: \"Password\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-password-login\",\n            children: [' ', errors.password, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked,\n              onChange: event => setChecked(event.target.checked),\n              name: \"checked\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: Link,\n            to: loginIndex ? `/pages/forgot-password/forgot-password${loginIndex}` : '#',\n            color: \"secondary\",\n            sx: {\n              textDecoration: 'none'\n            },\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disableElevation: true,\n              disabled: isSubmitting,\n              fullWidth: true,\n              size: \"large\",\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FirebaseLogin, \"GopVTArd6nni2rVIG35+DZ6oQU4=\", false, function () {\n  return [useStyles, useSelector, useScriptRef, useAuth];\n});\n\n_c = FirebaseLogin;\nFirebaseLogin.propTypes = {\n  loginIndex: PropTypes.number\n};\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/authentication/login/FirebaseLogin.js"],"names":["PropTypes","React","useSelector","Link","makeStyles","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Stack","Typography","Yup","Formik","useAuth","useScriptRef","AnimateButton","Visibility","VisibilityOff","useStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","mode","dark","main","grey","border","borderColor","light","color","textTransform","primary","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","FirebaseLogin","loginIndex","others","classes","customization","state","scriptedRef","checked","setChecked","useState","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","googleHandler","err","console","error","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","alignItems","display","mb","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","notchedOutline","target","textDecoration","mt","propTypes","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.dark.light + 20} !important` : `${theme.palette.grey[100]} !important`,\r\n        color: `${theme.palette.grey[900]} !important`,\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ loginIndex, ...others }) => {\r\n    const classes = useStyles();\r\n\r\n    const customization = useSelector((state) => state.customization);\r\n    const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'test-1-case-mgr@ccc.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginIndex ? `/pages/forgot-password/forgot-password${loginIndex}` : '#'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nFirebaseLogin.propTypes = {\r\n    loginIndex: PropTypes.number\r\n};\r\n\r\nexport default FirebaseLogin;\r\n"]},"metadata":{},"sourceType":"module"}