{"ast":null,"code":"var _jsxFileName = \"/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/chat/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { makeStyles, styled, useTheme } from '@material-ui/styles';\nimport { Box, CardContent, ClickAwayListener, Divider, Grid, IconButton, Menu, MenuItem, Popper, TextField, Typography, useMediaQuery } from '@material-ui/core'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react'; // project imports\n\nimport UserDetails from './UserDetails';\nimport ChatDrawer from './ChatDrawer';\nimport ChartHistory from './ChartHistory';\nimport AvatarStatus from './AvatarStatus';\nimport MainCard from 'ui-component/cards/MainCard';\nimport Avatar from 'ui-component/extended/Avatar';\nimport axios from 'utils/axios';\nimport { SET_MENU } from 'store/actions';\nimport { appDrawerWidth as drawerWidth, gridSpacing } from 'store/constant'; // assets\n\nimport AttachmentTwoToneIcon from '@material-ui/icons/AttachmentTwoTone';\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport MoreHorizTwoToneIcon from '@material-ui/icons/MoreHorizTwoTone';\nimport ErrorTwoToneIcon from '@material-ui/icons/ErrorTwoTone';\nimport VideoCallTwoToneIcon from '@material-ui/icons/VideoCallTwoTone';\nimport CallTwoToneIcon from '@material-ui/icons/CallTwoTone';\nimport SendTwoToneIcon from '@material-ui/icons/SendTwoTone';\nimport MoodTwoToneIcon from '@material-ui/icons/MoodTwoTone';\nimport HighlightOffTwoToneIcon from '@material-ui/icons/HighlightOffTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/users', true); // style constant\n\n\nconst useStyles = makeStyles(theme => ({\n  ScrollHeight: {\n    width: '100%',\n    height: 'calc(100vh - 440px)',\n    overflowX: 'hidden',\n    minHeight: '525px'\n  },\n  smallDrawer: {\n    [theme.breakpoints.down('sm')]: {\n      margin: '0 auto'\n    }\n  }\n})); // drawer content element\n\nconst Main = styled('main', {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  flexGrow: 1,\n  paddingLeft: open ? theme.spacing(3) : 0,\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  [theme.breakpoints.down('md')]: {\n    paddingLeft: 0,\n    marginLeft: 0\n  },\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  })\n})); // ===========================|| APPLICATION CHAT ||=========================== //\n\nconst ChatMainPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md')); // handle right sidebar dropdown menu\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClickSort = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseSort = () => {\n    setAnchorEl(null);\n  }; // set chat details page open when user is selected from sidebar\n\n\n  const [emailDetails, setEmailDetails] = React.useState(false);\n\n  const handleUserChange = () => {\n    setEmailDetails(prev => !prev);\n  }; // toggle sidebar\n\n\n  const [openChatDrawer, setOpenChatDrawer] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpenChatDrawer(prevState => !prevState);\n  }; // close sidebar when widow size below 'md' breakpoint\n\n\n  React.useEffect(() => {\n    setOpenChatDrawer(!matchDownSM);\n  }, [matchDownSM]); // fetch user details of current user\n\n  const [user, setUser] = useState({});\n\n  const getUserData = async () => {\n    const response = await axios.post('/api/chat/users/id', {\n      id: 1\n    });\n    setUser(response.data);\n  };\n\n  React.useEffect(() => {\n    // hide left drawer when email app opens\n    dispatch({\n      type: SET_MENU,\n      opened: false\n    });\n    getUserData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // fetch chat history for selected user\n\n  const [data, setData] = React.useState([]);\n\n  const getData = async userData => {\n    const response = await axios.post('/api/chat/filter', {\n      user: userData.name\n    });\n    setData(response.data);\n  };\n\n  React.useEffect(() => {\n    getData(user);\n  }, [user]); // handle new message form\n\n  const [message, setMessage] = useState('');\n\n  const handleOnSend = () => {\n    const d = new Date();\n    setMessage('');\n    const newMessage = {\n      from: 'User1',\n      to: user.name,\n      text: message,\n      time: d.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setData(prevState => [...prevState, newMessage]);\n    axios.post('/api/chat/insert', { ...newMessage\n    });\n  };\n\n  const handleEnter = event => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    handleOnSend();\n  }; // handle emoji\n\n\n  const onEmojiClick = (event, emojiObject) => {\n    setMessage(message + emojiObject.emoji);\n  };\n\n  const [anchorElEmoji, setAnchorElEmoji] = React.useState(null);\n\n  const handleOnEmojiButtonClick = event => {\n    setAnchorElEmoji(anchorElEmoji ? null : event.currentTarget);\n  };\n\n  const emojiOpen = Boolean(anchorElEmoji);\n  const emojiId = emojiOpen ? 'simple-popper' : undefined;\n\n  const handleCloseEmoji = () => {\n    setAnchorElEmoji(null);\n  };\n\n  if (!user) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChatDrawer, {\n      openChatDrawer: openChatDrawer,\n      handleDrawerOpen: handleDrawerOpen,\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      open: openChatDrawer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          zeroMinWidth: true,\n          sx: {\n            display: emailDetails ? {\n              xs: 'none',\n              sm: 'flex'\n            } : 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(MainCard, {\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'dark.main' : theme.palette.grey[50]\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: gridSpacing,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  spacing: 0.5,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleDrawerOpen,\n                      children: /*#__PURE__*/_jsxDEV(MenuRoundedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      alignItems: \"center\",\n                      sx: {\n                        flexWrap: 'nowrap'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                          alt: user.name,\n                          src: user.avatar && avatarImage(`./${user.avatar}`).default\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        sm: true,\n                        zeroMinWidth: true,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 0,\n                          alignItems: \"center\",\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"h4\",\n                              component: \"div\",\n                              children: [user.name, \" \", /*#__PURE__*/_jsxDEV(AvatarStatus, {\n                                status: user.online_status\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 219,\n                                columnNumber: 77\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 218,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 217,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle2\",\n                              children: [\"Last seen \", user.lastMessage]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 223,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 222,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sm: true,\n                    zeroMinWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(CallTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(VideoCallTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleUserChange,\n                      children: /*#__PURE__*/_jsxDEV(ErrorTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleClickSort,\n                      children: /*#__PURE__*/_jsxDEV(MoreHorizTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                      id: \"simple-menu\",\n                      anchorEl: anchorEl,\n                      keepMounted: true,\n                      open: Boolean(anchorEl),\n                      onClose: handleCloseSort,\n                      anchorOrigin: {\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      },\n                      transformOrigin: {\n                        vertical: 'top',\n                        horizontal: 'right'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: handleCloseSort,\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: handleCloseSort,\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: handleCloseSort,\n                        children: \"Ratting\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        onClick: handleCloseSort,\n                        children: \"Unread\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    mt: theme.spacing(2)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n                className: classes.ScrollHeight,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(ChartHistory, {\n                    theme: theme,\n                    handleUserDetails: handleUserChange,\n                    handleDrawerOpen: handleDrawerOpen,\n                    user: user,\n                    data: data\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      ref: anchorElEmoji,\n                      \"aria-describedby\": emojiId,\n                      onClick: handleOnEmojiButtonClick,\n                      children: /*#__PURE__*/_jsxDEV(MoodTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n                      id: emojiId,\n                      open: emojiOpen,\n                      anchorEl: anchorElEmoji,\n                      disablePortal: true,\n                      popperOptions: {\n                        modifiers: [{\n                          name: 'offset',\n                          options: {\n                            offset: [-20, 20]\n                          }\n                        }]\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n                        onClickAway: handleCloseEmoji,\n                        children: /*#__PURE__*/_jsxDEV(MainCard, {\n                          elevation: 8,\n                          content: false,\n                          children: /*#__PURE__*/_jsxDEV(Picker, {\n                            onEmojiClick: onEmojiClick,\n                            skinTone: SKIN_TONE_MEDIUM_DARK,\n                            disableAutoFocus: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 308,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    zeroMinWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Type a Message\",\n                      value: message,\n                      onChange: e => setMessage(e.target.value),\n                      onKeyPress: handleEnter\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(AttachmentTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"primary\",\n                      onClick: handleOnSend,\n                      children: /*#__PURE__*/_jsxDEV(SendTwoToneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), emailDetails ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.smallDrawer,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: {\n                xs: 'block',\n                sm: 'none'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleUserChange,\n              sx: {\n                mb: '-80px'\n              },\n              children: /*#__PURE__*/_jsxDEV(HighlightOffTwoToneIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(UserDetails, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatMainPage, \"SA+CjEOJxmBW3NiSBh7CSCIJlbM=\", false, function () {\n  return [useStyles, useTheme, useDispatch, useMediaQuery];\n});\n\n_c = ChatMainPage;\nexport default ChatMainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMainPage\");","map":{"version":3,"sources":["/home/sai/projects/django-apps/providertool/frontend/javascript/skeleton/src/views/chat/index.js"],"names":["React","useState","useDispatch","makeStyles","styled","useTheme","Box","CardContent","ClickAwayListener","Divider","Grid","IconButton","Menu","MenuItem","Popper","TextField","Typography","useMediaQuery","PerfectScrollbar","Picker","SKIN_TONE_MEDIUM_DARK","UserDetails","ChatDrawer","ChartHistory","AvatarStatus","MainCard","Avatar","axios","SET_MENU","appDrawerWidth","drawerWidth","gridSpacing","AttachmentTwoToneIcon","MenuRoundedIcon","MoreHorizTwoToneIcon","ErrorTwoToneIcon","VideoCallTwoToneIcon","CallTwoToneIcon","SendTwoToneIcon","MoodTwoToneIcon","HighlightOffTwoToneIcon","avatarImage","require","context","useStyles","theme","ScrollHeight","width","height","overflowX","minHeight","smallDrawer","breakpoints","down","margin","Main","shouldForwardProp","prop","open","flexGrow","paddingLeft","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","ChatMainPage","classes","dispatch","matchDownSM","anchorEl","setAnchorEl","handleClickSort","event","currentTarget","handleCloseSort","emailDetails","setEmailDetails","handleUserChange","prev","openChatDrawer","setOpenChatDrawer","handleDrawerOpen","prevState","useEffect","user","setUser","getUserData","response","post","id","data","type","opened","setData","getData","userData","name","message","setMessage","handleOnSend","d","Date","newMessage","from","to","text","time","toLocaleTimeString","hour","minute","handleEnter","key","onEmojiClick","emojiObject","emoji","anchorElEmoji","setAnchorElEmoji","handleOnEmojiButtonClick","emojiOpen","Boolean","emojiId","undefined","handleCloseEmoji","display","xs","sm","bgcolor","palette","mode","grey","flexWrap","avatar","default","online_status","lastMessage","vertical","horizontal","mt","modifiers","options","offset","e","target","value","mb"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles, styled, useTheme } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    CardContent,\r\n    ClickAwayListener,\r\n    Divider,\r\n    Grid,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Popper,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\n\r\n// project imports\r\nimport UserDetails from './UserDetails';\r\nimport ChatDrawer from './ChatDrawer';\r\nimport ChartHistory from './ChartHistory';\r\nimport AvatarStatus from './AvatarStatus';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport axios from 'utils/axios';\r\nimport { SET_MENU } from 'store/actions';\r\nimport { appDrawerWidth as drawerWidth, gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport AttachmentTwoToneIcon from '@material-ui/icons/AttachmentTwoTone';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport MoreHorizTwoToneIcon from '@material-ui/icons/MoreHorizTwoTone';\r\nimport ErrorTwoToneIcon from '@material-ui/icons/ErrorTwoTone';\r\nimport VideoCallTwoToneIcon from '@material-ui/icons/VideoCallTwoTone';\r\nimport CallTwoToneIcon from '@material-ui/icons/CallTwoTone';\r\nimport SendTwoToneIcon from '@material-ui/icons/SendTwoTone';\r\nimport MoodTwoToneIcon from '@material-ui/icons/MoodTwoTone';\r\nimport HighlightOffTwoToneIcon from '@material-ui/icons/HighlightOffTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    ScrollHeight: {\r\n        width: '100%',\r\n        height: 'calc(100vh - 440px)',\r\n        overflowX: 'hidden',\r\n        minHeight: '525px'\r\n    },\r\n    smallDrawer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0 auto'\r\n        }\r\n    }\r\n}));\r\n\r\n// drawer content element\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    paddingLeft: open ? theme.spacing(3) : 0,\r\n    transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    [theme.breakpoints.down('md')]: {\r\n        paddingLeft: 0,\r\n        marginLeft: 0\r\n    },\r\n    ...(open && {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginLeft: 0\r\n    })\r\n}));\r\n\r\n// ===========================|| APPLICATION CHAT ||=========================== //\r\n\r\nconst ChatMainPage = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    // handle right sidebar dropdown menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClickSort = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseSort = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // set chat details page open when user is selected from sidebar\r\n    const [emailDetails, setEmailDetails] = React.useState(false);\r\n    const handleUserChange = () => {\r\n        setEmailDetails((prev) => !prev);\r\n    };\r\n\r\n    // toggle sidebar\r\n    const [openChatDrawer, setOpenChatDrawer] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpenChatDrawer((prevState) => !prevState);\r\n    };\r\n\r\n    // close sidebar when widow size below 'md' breakpoint\r\n    React.useEffect(() => {\r\n        setOpenChatDrawer(!matchDownSM);\r\n    }, [matchDownSM]);\r\n\r\n    // fetch user details of current user\r\n    const [user, setUser] = useState({});\r\n    const getUserData = async () => {\r\n        const response = await axios.post('/api/chat/users/id', { id: 1 });\r\n        setUser(response.data);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // hide left drawer when email app opens\r\n        dispatch({ type: SET_MENU, opened: false });\r\n        getUserData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // fetch chat history for selected user\r\n    const [data, setData] = React.useState([]);\r\n    const getData = async (userData) => {\r\n        const response = await axios.post('/api/chat/filter', {\r\n            user: userData.name\r\n        });\r\n        setData(response.data);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        getData(user);\r\n    }, [user]);\r\n\r\n    // handle new message form\r\n    const [message, setMessage] = useState('');\r\n    const handleOnSend = () => {\r\n        const d = new Date();\r\n        setMessage('');\r\n        const newMessage = {\r\n            from: 'User1',\r\n            to: user.name,\r\n            text: message,\r\n            time: d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n        };\r\n        setData((prevState) => [...prevState, newMessage]);\r\n        axios.post('/api/chat/insert', {\r\n            ...newMessage\r\n        });\r\n    };\r\n\r\n    const handleEnter = (event) => {\r\n        if (event.key !== 'Enter') {\r\n            return;\r\n        }\r\n        handleOnSend();\r\n    };\r\n\r\n    // handle emoji\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setMessage(message + emojiObject.emoji);\r\n    };\r\n\r\n    const [anchorElEmoji, setAnchorElEmoji] = React.useState(null);\r\n    const handleOnEmojiButtonClick = (event) => {\r\n        setAnchorElEmoji(anchorElEmoji ? null : event.currentTarget);\r\n    };\r\n\r\n    const emojiOpen = Boolean(anchorElEmoji);\r\n    const emojiId = emojiOpen ? 'simple-popper' : undefined;\r\n    const handleCloseEmoji = () => {\r\n        setAnchorElEmoji(null);\r\n    };\r\n\r\n    if (!user) return 'Loading...';\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <ChatDrawer openChatDrawer={openChatDrawer} handleDrawerOpen={handleDrawerOpen} user={user} setUser={setUser} />\r\n            <Main open={openChatDrawer}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs zeroMinWidth sx={{ display: emailDetails ? { xs: 'none', sm: 'flex' } : 'flex' }}>\r\n                        <MainCard\r\n                            sx={{\r\n                                bgcolor: theme.palette.mode === 'dark' ? 'dark.main' : theme.palette.grey[50]\r\n                            }}\r\n                        >\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container alignItems=\"center\" spacing={0.5}>\r\n                                        <Grid item>\r\n                                            <IconButton onClick={handleDrawerOpen}>\r\n                                                <MenuRoundedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Grid container spacing={2} alignItems=\"center\" sx={{ flexWrap: 'nowrap' }}>\r\n                                                <Grid item>\r\n                                                    <Avatar alt={user.name} src={user.avatar && avatarImage(`./${user.avatar}`).default} />\r\n                                                </Grid>\r\n                                                <Grid item sm zeroMinWidth>\r\n                                                    <Grid container spacing={0} alignItems=\"center\">\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"h4\" component=\"div\">\r\n                                                                {user.name} <AvatarStatus status={user.online_status} />\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"subtitle2\">Last seen {user.lastMessage}</Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item sm zeroMinWidth />\r\n                                        <Grid item>\r\n                                            <IconButton>\r\n                                                <CallTwoToneIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton>\r\n                                                <VideoCallTwoToneIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton onClick={handleUserChange}>\r\n                                                <ErrorTwoToneIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton onClick={handleClickSort}>\r\n                                                <MoreHorizTwoToneIcon />\r\n                                            </IconButton>\r\n                                            <Menu\r\n                                                id=\"simple-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleCloseSort}\r\n                                                anchorOrigin={{\r\n                                                    vertical: 'bottom',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                                transformOrigin={{\r\n                                                    vertical: 'top',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem onClick={handleCloseSort}>Name</MenuItem>\r\n                                                <MenuItem onClick={handleCloseSort}>Date</MenuItem>\r\n                                                <MenuItem onClick={handleCloseSort}>Ratting</MenuItem>\r\n                                                <MenuItem onClick={handleCloseSort}>Unread</MenuItem>\r\n                                            </Menu>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Divider sx={{ mt: theme.spacing(2) }} />\r\n                                </Grid>\r\n                                <PerfectScrollbar className={classes.ScrollHeight}>\r\n                                    <CardContent>\r\n                                        <ChartHistory\r\n                                            theme={theme}\r\n                                            handleUserDetails={handleUserChange}\r\n                                            handleDrawerOpen={handleDrawerOpen}\r\n                                            user={user}\r\n                                            data={data}\r\n                                        />\r\n                                    </CardContent>\r\n                                </PerfectScrollbar>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <IconButton ref={anchorElEmoji} aria-describedby={emojiId} onClick={handleOnEmojiButtonClick}>\r\n                                                <MoodTwoToneIcon />\r\n                                            </IconButton>\r\n                                            <Popper\r\n                                                id={emojiId}\r\n                                                open={emojiOpen}\r\n                                                anchorEl={anchorElEmoji}\r\n                                                disablePortal\r\n                                                popperOptions={{\r\n                                                    modifiers: [\r\n                                                        {\r\n                                                            name: 'offset',\r\n                                                            options: {\r\n                                                                offset: [-20, 20]\r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                }}\r\n                                            >\r\n                                                <ClickAwayListener onClickAway={handleCloseEmoji}>\r\n                                                    <MainCard elevation={8} content={false}>\r\n                                                        <Picker\r\n                                                            onEmojiClick={onEmojiClick}\r\n                                                            skinTone={SKIN_TONE_MEDIUM_DARK}\r\n                                                            disableAutoFocus\r\n                                                        />\r\n                                                    </MainCard>\r\n                                                </ClickAwayListener>\r\n                                            </Popper>\r\n                                        </Grid>\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Type a Message\"\r\n                                                value={message}\r\n                                                onChange={(e) => setMessage(e.target.value)}\r\n                                                onKeyPress={handleEnter}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton>\r\n                                                <AttachmentTwoToneIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton color=\"primary\" onClick={handleOnSend}>\r\n                                                <SendTwoToneIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                    </Grid>\r\n                    {emailDetails ? (\r\n                        <Grid item className={classes.smallDrawer}>\r\n                            <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                                <IconButton onClick={handleUserChange} sx={{ mb: '-80px' }}>\r\n                                    <HighlightOffTwoToneIcon />\r\n                                </IconButton>\r\n                            </Box>\r\n                            <UserDetails user={user} />\r\n                        </Grid>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </Grid>\r\n            </Main>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChatMainPage;\r\n"]},"metadata":{},"sourceType":"module"}